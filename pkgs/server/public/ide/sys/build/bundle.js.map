{"version":3,"file":"bundle.js","sources":["../../../node_modules/svelte/internal/index.mjs","../../../node_modules/svelte/store/index.mjs","../../../../server/src/core/util/runningIn.js","../../../../server/node_modules/ms/index.js","../../../../server/node_modules/debug/src/common.js","../../../../server/node_modules/debug/src/browser.js","../../../../server/src/core/util/logger/logger.js","../../../../server/src/core/util/socketIOUtils.js","../../../src/systemIO.js","../../../src/alert.js","../../../src/auth.js","../../../src/user.js","../../../src/system.js","../../../src/SystemDisplay.svelte","../../../src/AppSys.svelte","../../../../server/src/core/util/ErrorExtensionPolyfill.js","../../../node_modules/engine.io-parser/build/esm/commons.js","../../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../../node_modules/engine.io-parser/build/esm/index.js","../../../node_modules/@socket.io/component-emitter/index.mjs","../../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../../node_modules/engine.io-client/build/esm/util.js","../../../node_modules/engine.io-client/build/esm/transport.js","../../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../../node_modules/engine.io-client/build/esm/transports/polling.js","../../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../../node_modules/engine.io-client/build/esm/transports/index.js","../../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../../node_modules/engine.io-client/build/esm/socket.js","../../../node_modules/socket.io-parser/build/esm/is-binary.js","../../../node_modules/socket.io-parser/build/esm/binary.js","../../../node_modules/socket.io-parser/build/esm/index.js","../../../node_modules/socket.io-client/build/esm/on.js","../../../node_modules/socket.io-client/build/esm/socket.js","../../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../../node_modules/socket.io-client/build/esm/manager.js","../../../node_modules/socket.io-client/build/esm/index.js","../../../node_modules/socket.io-client/build/esm/url.js","../../../src/util/beep.js","../../../src/chat.js","../../../../server/src/core/util/logger/filterLogsIOClient.js","../../../src/util/env.js","../../../src/sockets.js","../../../src/mainSys.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.50.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","// taken from: https://github.com/flexdinesh/browser-or-node\r\nconst inBrowser =\r\n  typeof window !== \"undefined\" &&\r\n  typeof window.document !== \"undefined\";\r\n\r\nconst inNode =\r\n  typeof process !== \"undefined\" &&\r\n  process.versions != null &&\r\n  process.versions.node != null;\r\n\r\nexport {inBrowser, inNode};\r\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","import {inBrowser} from '../runningIn';\r\nimport debug from 'debug'; // keep this private for proper encapsolation :-)\r\n\r\n// our cache of logs\r\n// ... optimizing functional logging probes (that are re-created on each function invocation)\r\nconst _cachedLogs = {}; // KEY: namespace, VALUE: log\r\n\r\nconst log = logger('vit:core:logger'); // talk about eating our own dog food :-)\r\n\r\n// SEE: README.md for full documentation\r\nexport default function logger(namespace) {\r\n\r\n  // short-circut request if already created\r\n  // ... optimizing functional logging probes (that are re-created on each function invocation)\r\n  if (_cachedLogs[namespace]) {\r\n    log(`re-using log with namespace: '${namespace}'`);\r\n    return _cachedLogs[namespace];\r\n  }\r\n\r\n  // 1st logger: normal expected logger (returned in our function)\r\n  //             Sample namespace: 'myProj:myModule:myFunct'\r\n  const rtnLog = _cachedLogs[namespace] = debug(namespace);\r\n\r\n  // 2nd logger: verbose (exposed via log.v -or- log.verbose)\r\n  //             Sample namespace: 'myProj-v:myModule:myFunct'\r\n  const colonIndx = namespace.indexOf(':');\r\n  const verboseNameSpace = colonIndx === -1 ? `v-${namespace}` : namespace.substring(0, colonIndx) + '-v' + namespace.substring(colonIndx);\r\n  const verbose = debug(verboseNameSpace);\r\n  rtnLog.verbose = rtnLog.v = verbose;\r\n\r\n  // 3rd logger: force (exposed via log.f -or- log.force)\r\n  //             Sample namespace: 'myProj:myModule:myFunct' <<< same as original\r\n  const force = debug(namespace);\r\n  force.enabled = true; // always enabled\r\n  // prefix msg with 'IMPORTANT: ' so it is distinguished from normal logs \r\n  // ... user may wonder why it is appearing when filter is disabled\r\n  const embellished = (msg, ...rest) => force(`IMPORTANT: ${msg}`, ...rest);\r\n  rtnLog.force = rtnLog.f = embellished;\r\n  // CRUDE TEST to insure ...rest params pass-through correctly (un-comment to see)\r\n  // rtnLog.f('test forced log obj: %O, num: %d', {name: 'Kevin', age: 99}, 1979)\r\n\r\n  // that's all folks\r\n  return rtnLog;\r\n}\r\n\r\n// retain the currentLogFilters for this process\r\n// ... initialized from EITHER:\r\n//     - localStorage.debug (for client browser)\r\n//       OR\r\n//     - DEBUG env var (for node)\r\n//     NOTE: We have to initialize this ourselves, because debug lib has NO mechanism to access the initial LogFilter :-(\r\nlet _currentLogFilters = inBrowser ? localStorage.getItem('debug') || '' : process.env.DEBUG || '';\r\n\r\nlog.f(`our currentLogFilters: '${_currentLogFilters}'`);\r\n\r\n// is the log filter enabled for the given nameSpace\r\n// RETURNS boolean\r\n//         should consistently return SAME as log.enabled property (of same nameSpace)\r\nlogger.isLogFilterEnabled = function(nameSpace) {\r\n  // simple layer on top of ...\r\n  return debug.enabled(nameSpace);\r\n}\r\n\r\n// alter our global log filter\r\n// RETURNS void\r\nlogger.setLogFilters = function (filterStr) {\r\n  _currentLogFilters = filterStr;\r\n  debug.enable(filterStr); // I tested debug.enable(filterStr) and it ALWAYS returns void (i.e. undefined) IN ALL CASES (even with nothing passed in)\r\n}\r\n\r\n// clear our global log filter\r\n// RETURNS string: priorFilter\r\nlogger.clearLogFilters = function() {\r\n  return _currentLogFilters = debug.disable(); // ... simple layer on top of\r\n}\r\n\r\n// return the current global log filter\r\n// RETURNS string: filterStr\r\nlogger.currentLogFilters = function() {\r\n  return _currentLogFilters;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//***\r\n//*** FOLLOWING TESTS are quick-and-dirty ... TEMPORARLY un-comment appropriate sections to VISUALIZE the logging results\r\n//***\r\n\r\n//***\r\n//*** SIMPLE test to determine if EXPLICIT log.enabled setting CONFLICTS with dynamic filtering using debug.enable(filter)\r\n//***\r\n\r\n// BOTTOM LINE: EXPLICITLY SETTING log.enabled = true/false changes it forever (i.e. dynamic Log Filtering NEVER impacts this probe again)\r\n// const logEE = logger('mpj:ExplicitlyEnabled');\r\n// logEE.enabled = true;                   // once we explicitly enable a log, what does that mean for dynamic filtering using debug.enable(filter)\r\n// debug.enable('-mpj:ExplicitlyEnabled'); // set filter to TURN OFF this entry ... no effect BECAUSE was explicitly enabled\r\n// function testExplicitlyEnabled() {\r\n//   logEE.f('BEFORE logEE');\r\n//   logEE('here is an ExplicitlyEnabled logging probe');\r\n//   logEE.f('AFTER logEE');\r\n// }\r\n// testExplicitlyEnabled(); // also invoke this after LogFilters change\r\n\r\n\r\n//***\r\n//*** SIMPLE test of filtering logger\r\n//***\r\n\r\n// function testLoggingFilter() {\r\n//   const log = logger('mpj:logger'); // NOTE: mpj (My Project) is a sample rendition of our library name (as an example)\r\n// \r\n//   function testFilter(test, filter, expecting, desc) {\r\n//     console.log(`\r\n// \r\n// Test:      ${test}\r\n// Filter:    '${filter}'\r\n// Expecting: ${expecting}\r\n// Desc:      ${desc}`);\r\n// \r\n//     // enable our logging filter (per the test directive)\r\n//     debug.enable(filter);\r\n// \r\n//     // run canned tests on given filter\r\n//     log('1: logger test');\r\n//     log.f('1f: logger test FORCED LOG');\r\n//     log.v('1v: logger test VERBOSE');\r\n//     const testLog = () => { // function testLog() {\r\n//       const log = logger('mpj:logger:testLog'); // JS: you CAN re-declare log in function scope ... EVEN in arrow functions :-)\r\n//       log('2: in testLog()');\r\n//       log.f('2f: in testLog()');\r\n//       log.v('2v: in testLog()');\r\n//     }\r\n//     testLog();\r\n//   }\r\n// \r\n//   // drive various tests\r\n//   console.log('\\n\\n**************************\\nSTART: testLoggingFilter()');\r\n// \r\n//   testFilter('LIBRARY: show mpj library logs (regular and verbose)',\r\n//              'mpj*',\r\n//              '1 1f 1v 2 2f 2v',\r\n//              'NOT  COMMON - at the library level the number of logs could overwhelm you (use to see all, and then refocus');\r\n//   testFilter('LIBRARY: show mpj library logs (regular NOT verbose)',\r\n//              'mpj:*',\r\n//              '1 1f    2 2f',\r\n//              'COMMON - although still a lot of logs (at the library level)');\r\n//   testFilter('LIBRARY: show mpj library logs (verbose NOT regular)',\r\n//              'mpj-v*',\r\n//              '  1f 1v   2f 2v',\r\n//              'NOT  COMMON - typically your want regular to supplement verbose');\r\n// \r\n//   testFilter('TYPO: show nothing because of TYPO',\r\n//              'mpj:Logger*',\r\n//              '  1f      2f',\r\n//              'shows result of a typo (remember this is case sensitive)');\r\n// \r\n//   testFilter('MODULE: show mpj logger module logs (regular, NOT verbose)',\r\n//              'mpj:logger*',\r\n//              '1 1f    2 2f',\r\n//              'COMMON - this lets you focus on a given module (depending on how big the module, can still be a lot)');\r\n//   testFilter('MODULE: show mpj logger module logs (verbose, NOT regular)',\r\n//              'mpj-v:logger*',\r\n//              '  1f 1v   2f 2v',\r\n//              'NOT  COMMON - typically your want regular to supplement verbose');\r\n//   testFilter('MODULE: show mpj logger module logs (verbose, and regular)',\r\n//              'mpj*:logger*',\r\n//              '1 1f 1v 2 2f 2v',\r\n//              'COMMON - good to see all logs coming out of a module (regular and verbose)');\r\n// \r\n//   testFilter('MODULE/FUNCT: show mpj logger function logs (regular, NOT verbose)',\r\n//              'mpj:logger:testLog*',\r\n//              '  1f    2 2f',\r\n//              \"VERY COMMON - this lets you focus on a given module's function\");\r\n//   testFilter('MODULE/FUNCT: show mpj logger function logs (verbose, NOT regular)',\r\n//              'mpj-v:logger:testLog*',\r\n//              '  1f      2f 2v',\r\n//              \"NOT  COMMON - typically your want regular to supplement verbose\");\r\n//   testFilter('MODULE/FUNCT: show mpj logger function logs (verbose, and regular)',\r\n//              'mpj*:logger:testLog*',\r\n//              '  1f    2 2f 2v',\r\n//              \"VERY COMMON - good to see all logs coming out of a module's function (regular and verbose)\");\r\n// \r\n//   console.log('\\n\\nEND: testLoggingFilter()\\n************************\\n\\n');\r\n// }\r\n// testLoggingFilter();\r\n\r\n\r\n//***\r\n//*** Test logging probe overhead -and- show technique to minimize it when disabled\r\n//***\r\n\r\n// debug.enable('mpj:logger:testLogOverhead*'); // disable this verbose log\r\n// function testLogOverhead() {\r\n//   const log = logger('mpj:logger:testLogOverhead');\r\n// \r\n//   let invokeCount = 0;\r\n// \r\n//   // Test 1\r\n//   log('Test 1: determine if log expression is executed EVEN when log is filtered out');\r\n//   log  (`regular log ... invokeCount: ${++invokeCount}`);\r\n//   log.f(`forced log  ... invokeCount: ${++invokeCount}`);\r\n//   log.v(`verbose log ... invokeCount: ${++invokeCount}`); // this log is disabled, yet it still bumps the counter!\r\n//   log(`incremented three times in above logs (regular/forces/verbose): invokeCount ${invokeCount}`);\r\n// \r\n//   // Test 2:\r\n//   log('Test 2: prevent \"filtered out\" logs from even executing (for high-overhead log expressions)');\r\n//   // SHOW technique to minimize logging overhead when disabled\r\n//   log.v.enabled && log.v(`log NOT emitted and high-overhead expressin NOT invoked ... invokeCount: ${++invokeCount}`);\r\n//   log(`incremented one more time in log that protects execution ... should be the same count as before: invokeCount ${invokeCount}`);\r\n// }\r\n// testLogOverhead();\r\n\r\n//***\r\n//*** Test logging formatters\r\n//***\r\n\r\n// debug.enable('mpj:logger:testFormatters'); // enable this filter\r\n// function testFormatters() {\r\n//   const log = logger('mpj:logger:testFormatters');\r\n// \r\n//   const myObj = {\r\n//     name: {\r\n//       first: 'Kevin',\r\n//       last:  'Bridges',\r\n//     },\r\n//     age: 21,\r\n//   };\r\n//   // works really well in browser (with dynamic expandable objects)\r\n//   // even works in server (just %o/%O are ALWAYS single-line)\r\n//   // only querk is I see no diff between %o and %O (is supposed to be multi-line but NOT)\r\n//   // ... %o/%O works really well in browser, as it is an expandable object\r\n//   log('Test formatters ... an object: %O, a string \"%s\", a number %d ... I hope it works', myObj, 'Kevin', 21);\r\n// }\r\n// testFormatters();\r\n","//***\r\n//*** Reusable socket.io utilities\r\n//***\r\n\r\nimport logger from './logger';\r\nconst  log = logger('vit:core:socketIOUtils'); \r\n\r\n/**\r\n * socketActFn(): Emits a re-usable function (with access to the\r\n *                supplied resolve/reject promise artifacts) that\r\n *                provides a standard way to acknowledge a return\r\n *                value (and errors) within an asynchronous promise\r\n *                wrapping a socket.io event (i.e. implementing an\r\n *                asynchronous request/response API)\r\n *\r\n * return:        function ack({value, errMsg, userMsg}): void\r\n *                - all named params are mutually exclusive\r\n *                  * value:   emits the supplied value\r\n *                  * errMsg:  throws an \"unexpected\" error\r\n *                  * userMsg: throws an \"expected\" error (with an embedded userMsg)\r\n *                - when ALL params are omitted:\r\n *                  * a void value is emitted (i.e. undefined)\r\n *\r\n * USAGE:         CLIENT (sign-in sample):\r\n *                  export function signIn(userId, pass) {\r\n *                    // promise wrapper of our socket message protocol\r\n *                    return new Promise((resolve, reject) => {\r\n *                      // issue the 'sign-in' socket request to our server\r\n *                      socket.emit('sign-in', userId, pass, socketAckFn(resolve, reject));\r\n *                    });\r\n *                  }\r\n *                SERVER (sign-in sample):\r\n *                  socket.on('sign-in', (userId, pass, ack) => {\r\n *                    ... snip snip (app-specific logic)\r\n *                    \r\n *                    // report expected user msg\r\n *                    return ack({userMsg: 'password incorrect',\r\n *                                errMsg:  'User Error in sign-in process'});\r\n *                    \r\n *                    // report unexpected error\r\n *                    return ack({errMsg: 'a bad thing happened'});\r\n *                    \r\n *                    // communicate successful value\r\n *                    return ack({value: myResult});\r\n *                    \r\n *                    // communicate void value\r\n *                    return ack();\r\n *                  });\r\n * \r\n * NOTE:          This utility REQUIRES the activation of ErrorExtensionPolyfill.js\r\n *                (see Error#defineUserMsg() usage - below).\r\n */\r\nexport function socketAckFn(resolve, reject) {\r\n\r\n  // confirm that ErrorExtensionPolyfill has been enabled\r\n  if (!Error.prototype.defineUserMsg) {\r\n    throw new Error('*** ERROR *** socketAckFn() requires the activation of ErrorExtensionPolyfill.js');\r\n  }\r\n\r\n  // emit our socket acknowledgment function\r\n  return ({value=undefined, errMsg=undefined, userMsg=undefined}={}) => {\r\n    commonPayloadHandler(resolve, reject, value, errMsg, userMsg);\r\n  }\r\n}\r\n\r\n\r\n// WITH TIMEOUT:\r\n//      When timeout is used, socket.io introduces an additional pipe (so to speak)\r\n//      where the payload parameter is passed as the 2nd param (timeout errors as the 1st param)\r\n//      SOOO: the returned function is identical to socketAckFn() EXCEPT it introduces a new 1st param: err\r\nexport function socketAckFn_timeout(resolve, reject) {\r\n\r\n  // confirm that ErrorExtensionPolyfill has been enabled\r\n  if (!Error.prototype.defineUserMsg) {\r\n    throw new Error('*** ERROR *** socketAckFn_timeout() requires the activation of ErrorExtensionPolyfill.js');\r\n  }\r\n\r\n  // emit our socket acknowledgment function\r\n  return (err, {value=undefined, errMsg=undefined, userMsg=undefined}={}) => {\r\n    // log(`IN socketAck_timeout(err, {value,errMsg,userMsg}): `, {err, value, errMsg, userMsg});\r\n    // handle timeout errors\r\n    if (err) {\r\n      reject(err);\r\n    }\r\n    // handle our normal app-specific payload (can be errors too)\r\n    else {\r\n      commonPayloadHandler(resolve, reject, value, errMsg, userMsg);\r\n    }\r\n  }\r\n}\r\n\r\nfunction commonPayloadHandler(resolve, reject, value, errMsg, userMsg) {\r\n  // emit an \"expected\" error (with .defineUserMsg())\r\n  // ... in addition to userMsg, this will supplement any supplied errMsg\r\n  if (userMsg) {\r\n    reject( new Error(errMsg || 'Expected User Defined Condition').defineUserMsg(userMsg) );\r\n  }\r\n  // emit an \"unexpected\" error\r\n  else if (errMsg) {\r\n    reject( new Error(errMsg) );\r\n  }\r\n  // emit a successful value\r\n  // ... can be an undefined value (for void)\r\n  else {\r\n    resolve(value);\r\n  }\r\n}\r\n","//***\r\n//*** systemIO.js ... WebSocket bindings of visualize-it system (client-side)\r\n//***\r\n\r\nimport {socketAckFn} from './core/util/socketIOUtils';\r\n\r\nimport logger from './core/util/logger';\r\nconst  log = logger('vit:client:systemIO'); \r\n\r\nlet socket;  // our active socket (to be used in this module)\r\n\r\nexport function registerSystemSocketHandlers(_socket) {\r\n  log('here we are in registerSystemSocketHandlers');\r\n\r\n  // expose socket to this module\r\n  socket = _socket;\r\n\r\n  //***\r\n  //*** register our system-based client-side event listeners\r\n  //***\r\n\r\n  // NOTE: currently all system-based client-side event listeners are\r\n  //       registered directly in the system store (see system.js)\r\n\r\n}\r\n\r\n// launch/create a system, allowing participants to join (a request/response API)\r\n// ... invoked by host\r\n// ... this is a convenience function wrapping the socket protocol with an async request/response\r\n// RETURN: void ... successful creation of new system\r\n// ERROR:  either a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport function launchSystem(sysId,      // system identifier -and- alias to room (must be unique on server or will error)\r\n                             accessCode, // access key to be able to join system (a lite password)\r\n                             model) {    // our data model (JSON key/value)\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'launch-system' socket request to our server\r\n    socket.emit('launch-system', sysId, accessCode, model, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n\r\n// join a system, by participants other than host (a request/response API)\r\n// ... invoked by non-host\r\n// ... this is a convenience function wrapping the socket protocol with an async request/response\r\n// RETURN: model ... the data model (JSON key/value) of successfully joined system\r\n// ERROR:  may contain a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport function joinSystem(sysId,        // system identifier -and- alias to room (must be unique on server or will error)\r\n                           accessCode) { // access key to be able to join system (a lite password)\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'join-system' socket request to our server\r\n    socket.emit('join-system', sysId, accessCode, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n\r\n// start a system running\r\n// ... invoked by either host or non-host\r\n// ... this is a convenience function wrapping the socket protocol with an async request/response\r\n// RETURN: void\r\n// ERROR:  may contain a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport function runSystem(sysId) { // system identifier\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'run-system' socket request to our server\r\n    socket.emit('run-system', sysId, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n\r\n// pause a running system\r\n// ... invoked by either host or non-host\r\n// ... this is a convenience function wrapping the socket protocol with an async request/response\r\n// RETURN: void\r\n// ERROR:  may contain a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport function pauseSystem(sysId) { // system identifier\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'pause-system' socket request to our server\r\n    socket.emit('pause-system', sysId, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n","//***\r\n//*** a simple alert(msg) shown in our main screen (via Router.svelte)\r\n//***\r\n\r\nimport {writable} from 'svelte/store';\r\n\r\nlet timeout = null;\r\n\r\nfunction createAlert() {\r\n\tconst {subscribe, set, update} = writable(''); // empty string for NO alert\r\n\r\n\treturn {\r\n\t\tsubscribe,\r\n    display: (msg) => {\r\n      clearTimeout(timeout);                    // clear prior timeout (if any)\r\n      set(msg);                                 // display current msg\r\n      timeout = setTimeout(()=> set(''), 5000); // clear msg in 5 seconds\r\n    },\r\n\t};\r\n}\r\n\r\n// our alert\r\n// ... a Svelte store\r\nconst alert = createAlert();\r\nexport default alert;\r\n","//***\r\n//*** auth.js ... various authorization utilities\r\n//***\r\n\r\nimport {socketAckFn} from './core/util/socketIOUtils';\r\n\r\nimport logger from './core/util/logger';\r\nconst  log = logger('vit:client:auth'); \r\n\r\nlet socket;  // our active socket (to be used in this module)\r\n\r\nexport function registerAuthSocketHandlers(_socket) {\r\n  log('here we are in registerAuthSocketHandlers');\r\n\r\n  // expose socket to this module\r\n  socket = _socket;\r\n\r\n  // AI: may also have some listeners to register too\r\n}\r\n\r\n// convenience signIn utility wrapping the socket protocol with an async request/response\r\n// RETURN: promise string (user error msg, falsy for successfully signed-in)\r\nexport function signIn(userId, pass) {\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'sign-in' socket request to our server\r\n    socket.emit('sign-in', userId, pass, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n\r\n// convenience signOut utility wrapping the socket protocol with an async request/response\r\n// RETURN: promise void\r\nexport function signOut() {\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'sign-out' socket request to our server\r\n    socket.emit('sign-out', (errMsg) => {\r\n      // within our acknowledgment callback\r\n      //   response: errMsg <string>, where:\r\n      //    - 'any' - NOT signed-out, errMsg to be wrapped in Error (unexpected condition)\r\n      //    - ''    - falsey: sign-out successful\r\n      if (errMsg) {\r\n        reject(new Error(errMsg)); // an unexpected error\r\n      }\r\n      else {\r\n        resolve(undefined); // successful sign-out ... void (i.e. undefined)\r\n      }\r\n    });\r\n  });\r\n}\r\n","//***\r\n//*** the current app's user (when signed-in: userId, otherwise: null)\r\n//***\r\n\r\nimport {writable} from 'svelte/store';\r\nimport alert      from './alert';\r\nimport {signIn}   from './auth';\r\nimport logger     from './core/util/logger';\r\nconst  log = logger('vit:client:user');\r\n\r\nfunction createUser() {\r\n\tconst {subscribe, set, update} = writable({userId: null}); // null for signed-out\r\n\r\n\treturn {\r\n\t\tsubscribe,\r\n    activateUser: (userId) => {\r\n      log(`activating userId: ${userId}`);\r\n      update(state => ({userId}));\r\n      localStorage.setItem('vitUserId', userId);\r\n      alert.display(`Welcome ${userId} :-)`);\r\n    },\r\n    deactivateUser: () => {\r\n      log(`deactivating user`);\r\n      update(state => ({userId: null}));\r\n      localStorage.removeItem('vitUserId');\r\n      alert.display(`Now signed out - come back soon :-)`);\r\n    },\r\n\t};\r\n}\r\n\r\n// our current active user\r\n// ... a Svelte store\r\nconst user = createUser();\r\nexport default user;\r\n\r\n// auto sign-in if userId retained in localStorage\r\n// ... keeps server in-sync\r\n// ... very crude for now\r\n// ... timeout is crude way of allowing our socket initialization to stabalize :-(\r\nsetTimeout(() => {\r\n  const userId = localStorage.getItem('vitUserId'); // userId retained in localStorage\r\n  if (userId) {\r\n    log(`found persistent userId: ${userId} in localStorage ... activating auto sign-in.`);\r\n    signIn(userId, 'a'); // hack: this is async, however we know it \"should be\" successful\r\n    user.activateUser(userId);\r\n  }\r\n}, 1); // very short time (1 ms), supporting next event cycle\r\n","//***\r\n//*** a system store, containing our simulated system data model\r\n//***\r\n\r\nimport {writable, get} from 'svelte/store';\r\n\r\nimport {launchSystem as launchSystemIO} from './systemIO';\r\nimport {joinSystem as joinSystemIO}     from './systemIO';\r\nimport {runSystem as runSystemIO}       from './systemIO';\r\nimport {pauseSystem as pauseSystemIO}   from './systemIO';\r\nimport alert                            from './alert';\r\nimport user                             from './user';\r\nimport logger                           from './core/util/logger';\r\nconst  log = logger('vit:client:system');\r\n\r\n\r\n// ********************************************************************************\r\n// create/catalog our client-side system store (an internal -and- reusable routine)\r\n// RETURN: system (a reactive store)\r\nfunction createSystemStore(sysId, accessCode, model, isHost, isRunning=false) {\r\n\r\n  // our standard svelte store holding our state\r\n\tconst {subscribe, update} = writable({\r\n    sysId,            // system identifier -and- alias to room (must be unique on server or will error)\r\n  //accessCode,       // access code to join system (a lite password) ... L8TR: suspect only needed on server\r\n    isHost,           // boolean: true - host, false - participant\r\n    participants: [/*userId, ...*/], // all active participants in this system ... dynamically maintained when join/leave\r\n    isRunning,        // indicator of whether the system is running\r\n    model,\r\n  });\r\n\r\n  // our custom store with value-added methods\r\n\tconst system = {\r\n\t\tsubscribe, // makes this a store (i.e. a custom store)\r\n\r\n    // value-added store methods follow:\r\n\r\n    // update the running status of self\r\n    // INITIATED BY: the server's 'run-system' / 'pause-system' process\r\n    runChanged: (running) => {\r\n      update(state => ( {...state, isRunning: running} ));\r\n    },\r\n\r\n    // update the active set of participants\r\n    // INITIATED BY: the server's sysId/room join/leave events\r\n    participantsChanged: (participants) => {\r\n      update(state => ( {...state, participants} ));\r\n    },\r\n\r\n    // update self's store value with the supplied delta changes\r\n    // INITIATED BY: the server's runSystem() process\r\n    // SOURCE: the source of these changes can be any of the participants who have joined the System\r\n    // RETURN: void\r\n    stateChanged: (deltaModelChanges) => { // ex: { 'R1.pres': 1210, ... }\r\n      update( state => {\r\n        // make a deep copy of model\r\n        // ... https://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript\r\n        const newModel = structuredClone(state.model);\r\n\r\n        // apply delta changes\r\n        // ... use a simple patteren, restricted to what we know we have\r\n        Object.entries(deltaModelChanges).forEach(([key, val]) => {\r\n          const [compKey, propKey] = key.split('.');\r\n          newModel[compKey][propKey] = val;\r\n        });\r\n\r\n        return {...state, model: newModel};\r\n      });\r\n    },\r\n\r\n    // our local state change cache, to be reflected to ALL participants (synced via our tick processor)\r\n    localStateChange: {}, // ex: { 'R1.open': true, ... }\r\n\r\n    // cache local changes to our state, to be reflected to ALL participants (synced via our tick processor)\r\n    // INITIATED BY: our local interactive components (when user makes direct state change)\r\n    // NOTE: an arrow function IS NOT used (supporting proper this connotation)\r\n    cacheLocalStateChange(key, val) { // ex: key: 'R1.open', val: true\r\n      this.localStateChange[key] = val;\r\n    },\r\n\r\n    // extract (return & clear) the local state change cache\r\n    // RETURN: localStateChange ... ex: { 'R1.open': true, ... }\r\n    extractLocalStateChange() {\r\n      const localStateChange = this.localStateChange;\r\n      this.localStateChange = {};\r\n      return localStateChange;\r\n    },\r\n\r\n    // can't think of real example:\r\n    // pseudo example where we interact with server\r\n    foo: () => { // can't think of anything right now\r\n      // ... either do a direct socket.emit(...) -or- a systemIO.js req/res\r\n    },\r\n  };\r\n\r\n  // catalog this new system\r\n  clientSystems.set(sysId, system);\r\n\r\n  // that's all folks\r\n  return system;\r\n}\r\n\r\n\r\n// ********************************************************************************\r\n// launch (i.e. create) a new system store (cataloged locally -and- on\r\n// server), which is available for external participants to join.\r\n// RETURN: newly created system reactive store (cataloged)\r\n// ERROR:  either a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport async function launchSystem(sysId,      // system identifier -and- alias to room (must be unique on server or will error)\r\n                                   accessCode, // access code to join system (a lite password)\r\n                                   model) {    // data model of this system, supplied by initiating host (JSON key/value pairs)\r\n\r\n  const log = logger('vit:client:system:launchSystem');\r\n\r\n  // verify system does NOT already exist\r\n  // ... this is our client cache check (similar error can occur on server cache)\r\n  // AI: although this works, I'm thinking we simply utilize the server validation exclusively\r\n  // if (getSystem(sysId)) {\r\n  //   log(`local client cache found system '${sysId}' ... erroring out`);\r\n  //   // THIS - NO: this seemed to be a wild goose chase (due to a sepereate app bug)\r\n  //   //? BECAUSE OUR FUNCT IS ASYNC, we must return error differently\r\n  //   //? return Promise.reject( // for ease of client usage, consistently deal with async errors only ... https://makandracards.com/makandra/43653-javascript-don-t-throw-exceptions-from-async-functions\r\n  //   //?   new Error('*** USER ERROR *** in \"launchSystem()\" function')\r\n  //   //?     .defineUserMsg(`system: '${sysId}' already exists (in client cache)`)\r\n  //   //? );\r\n  //   // OR THiS - BOTH SEEM TO WORK ... I think this was a wild goose chase (due to a sepereate app bug)\r\n  //   throw new Error('*** USER ERROR *** in \"launchSystem()\" function')\r\n  //     .defineUserMsg(`system '${sysId}' already exists (in client cache)`);\r\n  // }\r\n\r\n  // launch server-side system, insuring it is valid\r\n  // NOTE: errors are passed-through to our invoker\r\n  //       EX: - Expected Error: system: {sysId} already exists\r\n  await launchSystemIO(sysId, accessCode, model);\r\n\r\n  // create/return our client-side reactive system store\r\n  return createSystemStore(sysId, accessCode, model, true /*isHost*/);\r\n}\r\n\r\n// ********************************************************************************\r\n// join an existing system from the server, cataloged locally (i.e. created)\r\n// RETURN: newly created system reactive store\r\n// ERROR:  either a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport async function joinSystem(sysId,        // system identifier -and- alias to room (must be unique on server or will error)\r\n                                 accessCode) { // access code to join system (a lite password)\r\n\r\n  const log = logger('vit:client:system:joinSystem');\r\n\r\n  // verify system does NOT already exist (on the client-side)\r\n  // NOTE: all other validation occurs on the server-side\r\n  if (getSystem(sysId)) {\r\n    log(`local client cache found system '${sysId}' ... erroring out`);\r\n    throw new Error('*** USER ERROR *** in \"joinSystem()\" function')\r\n      .defineUserMsg(`system '${sysId}' already exists (in client cache)`);\r\n  }\r\n\r\n  // join server-side system, insuring it is valid\r\n  // NOTE: errors are passed-through to our invoker\r\n  //       EX: - Expected Error: system: {sysId} already exists\r\n  const {isRunning, model} = await joinSystemIO(sysId, accessCode);\r\n\r\n  // create/return our client-side reactive system store\r\n  return createSystemStore(sysId, accessCode, model, false /*isHost*/, isRunning);\r\n}\r\n\r\n\r\n// ********************************************************************************\r\n// start a system running\r\n// NOTE:   This function could be a method of the system store's value object\r\n//         ... runSystem() ... where we get the sysId via this.sysId\r\n// RETURN: void\r\n// ERROR:  either a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport async function runSystem(sysId) { // system identifier\r\n  // const log = logger('vit:client:system:runSystem');\r\n\r\n  // request server to start the system running\r\n  // NOTE: errors are passed-through to our invoker\r\n  //       EX: - Expected Error: system: {sysId} is already running\r\n  // NOTE: Our internal running status is maintained from the 'system-run-changed' event\r\n  //       broadcast to ALL participants from the server\r\n  await runSystemIO(sysId);\r\n}\r\n\r\n\r\n// ********************************************************************************\r\n// pause a running system\r\n// NOTE:   This function could be a method of the system store's value object\r\n//         ... pauseSystem() ... where we get the sysId via this.sysId\r\n// RETURN: void\r\n// ERROR:  either a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport async function pauseSystem(sysId) { // system identifier\r\n  // request server to pause the system\r\n  // NOTE: errors are passed-through to our invoker\r\n  //       EX: - Expected Error: system: {sysId} is already running\r\n  // NOTE: Our internal running status is maintained from the 'system-run-changed' event\r\n  //       broadcast to ALL participants from the server\r\n  await pauseSystemIO(sysId);\r\n}\r\n\r\n\r\n// ********************************************************************************\r\n// all Systems in-use by THIS client\r\n//   a Map:\r\n//   sysId<key>: systemStore<value>\r\nlog('creating client-side systems cache');\r\nconst clientSystems = new Map();\r\n// Usage Summary:\r\n//  - Array.from(clientSystems.values())\r\n//  - clientSystems.set(sysId, {...});\r\n//  - clientSystems.get(sysId);\r\n//  - clientSystems.delete(sysId);\r\n\r\n// ********************************************************************************\r\n// return indicator as to whether we have any system entries\r\n// RETURN: boolean\r\nexport function hasClientSystems() {\r\n  return clientSystems.size > 0;\r\n}\r\n\r\n// ********************************************************************************\r\n// return all system ids\r\n// RETURN: [sysId]\r\nexport function allClientSysIds() {\r\n  return Array.from(clientSystems.keys())\r\n}\r\n\r\n// ********************************************************************************\r\n// return the system store identified by the supplied sysId\r\n// RETURN: desired system store (undefined for not found)\r\nexport function getSystem(sysId) {\r\n  // DEBUGGED VERSION:\r\n  // const system = clientSystems.get(sysId);\r\n  // log(`getSystem('${sysId}') returning: `, system);\r\n  // return system;\r\n\r\n  // PRODUCTION VERSION\r\n  return clientSystems.get(sysId);\r\n}\r\n\r\n\r\n\r\n\r\n//***\r\n//*** Registration of system-based socket handlers\r\n//***\r\n\r\n// our active socket (to be used in this module)\r\nlet socket;\r\n\r\nexport function registerSystemStoreSocketHandlers(_socket) {\r\n  log('here we are in registerSystemStoreSocketHandlers');\r\n\r\n  // expose socket to this module\r\n  socket = _socket;\r\n\r\n  // our client tick processor for a running system\r\n  // INITIATED BY: the server's runSystem() process\r\n  // RETURN (via ack): deltaModelChanges\r\n  // ERROR  (via ack): either a userMsg (expected condition), or a hard-error (unexpected condition)\r\n  socket.on('system-tick', (sysId, ack) => {\r\n    const log = logger('vit:client:system:system-tick'); \r\n    log(`processing - sysId: '${sysId}'`);\r\n\r\n    // convenience util\r\n    function userErr(userMsg) {\r\n      const errMsg = '*** USER ERROR *** in \"system-tick\" event';\r\n      log(`${errMsg} ... ${userMsg}`)\r\n      ack({errMsg, userMsg});\r\n    }\r\n\r\n    // locate the system store that will service this request\r\n    const system = getSystem(sysId);\r\n    if (!system) {\r\n      return userErr(`'sys-tick\" event - sysId: ${sysId} is NOT recognized by this client (something is out-of-sync) :-(`);\r\n    }\r\n    \r\n    // NOTE: This routine simulates some contrived logic that registers changes to the store.\r\n    //       - It does NOT directly update the store.\r\n    //       - RATHER, it returns a deltaModelChanges\r\n    //         (which the server broadcasts to ALL participants of the running system)\r\n    //       - THEREFORE, the changes are applied in stateChanged()\r\n    const model      = get(system).model;\r\n    const activeUser = get(user);\r\n\r\n    // accumulator of model changes\r\n    let deltaModelChanges = {\r\n      // example:\r\n      // 'K1.pres': newPressure,\r\n    };\r\n\r\n    // TEMPORARY CODE: simulate a hard error\r\n    // with NO checks on the server:\r\n    // - the server will crash\r\n    // - and ALL client socket connections are LOST :-(\r\n    // if (activeUser.userId === 'Kevin' && model.K1.pres > 200) {\r\n    //   ack({errMsg: 'valve 1 BLEW UP (over 200 lbs of pressure)'});\r\n    // }\r\n\r\n    // TEMPORARY CODE: simulate a timeout condition (by never responding - NO ack())\r\n    // with NO checks on the server:\r\n    // - the server will block forever (simply stops)\r\n    // if (activeUser.userId === 'Resa' && model.R1.pres > 1300) {\r\n    //   return; // by never responding (ack()) server will timeout\r\n    // }\r\n\r\n    // apply programatic state changes (via simulated logic) as needed\r\n    // ... iterate through all components of our system model\r\n    Object.entries(model).forEach( ([compName, comp]) => {\r\n\r\n      // process selected components:\r\n      if (comp.type === 'valve' && // valves\r\n          comp.open &&             // that are open\r\n          // when the component name begins with same letter as our active user\r\n          compName[0].toLowerCase() === activeUser.userId[0].toLowerCase()) {\r\n\r\n        // bump the pressure up by 10\r\n        deltaModelChanges[`${compName}.pres`] = comp.pres + 10;;\r\n      }\r\n    });\r\n\r\n    // ALSO apply the state changes that have been cached by local interactive components\r\n    // ... this cache is retained in the system store (NOT it's value object)\r\n    deltaModelChanges = {...deltaModelChanges, ...system.extractLocalStateChange()};\r\n  \r\n    // that's all folks\r\n    return ack({value: deltaModelChanges});\r\n  });\r\n\r\n\r\n  // retain changes as to whether our system is running or paused\r\n  // INITIATED BY: the server's 'run-system' / 'pause-system' process\r\n  // NOTE: This event is broadcast, so there is NO opportunity to communicate a response\r\n  socket.on('system-run-changed', (sysId, running) => {\r\n    log(`processing 'system-run-changed' event - sysId: '${sysId}', running: ${running}`);\r\n\r\n    // locate our system store\r\n    const system = getSystem(sysId);\r\n    if (!system) {\r\n      log(`sysId: '${sysId}' does NOT exist ... no-oping`);\r\n      return;\r\n    }\r\n\r\n    // forward this process into our system store\r\n    system.runChanged(running);\r\n\r\n    // notify user of run change\r\n    alert.display(`System '${sysId}' is now ${running ? 'running' : 'paused'}!`);\r\n  });\r\n\r\n\r\n  // retain state changes to our running system\r\n  // INITIATED BY: the server's 'run-system' process\r\n  // NOTE: This event is broadcast, so there is NO opportunity to communicate a response\r\n  socket.on('system-state-changed', (sysId, stateChanges) => {\r\n    log(`processing 'system-state-changed' event - sysId: '${sysId}', stateChanges: `, stateChanges);\r\n\r\n    // locate our system store\r\n    const system = getSystem(sysId);\r\n    if (!system) {\r\n      log(`sysId: '${sysId}' does NOT exist ... no-oping`);\r\n      return;\r\n    }\r\n\r\n    // forward this process into our system store\r\n    system.stateChanged(stateChanges);\r\n  });\r\n\r\n\r\n  // retain changes in the system's set of participants\r\n  // INITIATED BY: the server's sysId/room join/leave events\r\n  // NOTE: This event is broadcast, so there is NO opportunity to communicate a response\r\n  socket.on('system-participants-changed', (sysId, userMsg, participants) => {\r\n    log(`processing 'system-participants-changed' event - sysId: '${sysId}', userMsg: ${userMsg}, participants: ${participants}`);\r\n\r\n    // locate our system store\r\n    const system = getSystem(sysId);\r\n    if (!system) {\r\n      log(`sysId: '${sysId}' does NOT exist ... no-oping`);\r\n      return;\r\n    }\r\n\r\n    // update our store's participants\r\n    system.participantsChanged(participants);\r\n\r\n    // notify user of change\r\n    // EX: \"'UserA' has joined the 'sys123' system\"\r\n    alert.display(userMsg);\r\n  });\r\n\r\n}\r\n","<script>\r\n import {runSystem, pauseSystem} from './system';\r\n import logger  from './core/util/logger';\r\n const  log   = logger('vit:client:SystemDisplay');\r\n\r\n export let system;    // PROP: the system to display\r\n\r\n $: userMsg = system ? '' : 'No system to run.';\r\n\r\n async function handleRunSystem() {\r\n   const sysId = $system.sysId;\r\n   try {\r\n     userMsg = '';\r\n     await runSystem(sysId);\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       userMsg = e.userMsg;\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       userMsg = 'Unexpected error in runSystem process ... see logs for detail'\r\n       log.v(`*** ERROR *** Unexpected error in runSystem process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n\r\n async function handlePauseSystem() {\r\n   const sysId = $system.sysId;\r\n   try {\r\n     userMsg = '';\r\n     await pauseSystem(sysId);\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       userMsg = e.userMsg;\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       userMsg = 'Unexpected error in pauseSystem process ... see logs for detail'\r\n       log.v(`*** ERROR *** Unexpected error in pauseSystem process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n</script>\r\n\r\n{#if system}\r\n<b>System:</b> {$system.sysId} <i>({$system.isHost ? 'host' : 'participant'})</i>\r\n\r\n<br/>\r\n<b>Participants:</b> {$system.participants}\r\n\r\n<br/>\r\n<b>Status:</b> {$system.isRunning ? 'running' : 'paused'}\r\n{#if $system.isRunning}\r\n  <button on:click={handlePauseSystem}>Pause</button>\r\n{:else}\r\n  <button on:click={handleRunSystem}>Run</button>\r\n{/if}\r\n\r\n<br/>\r\n<b>Model:</b>\r\n<!-- simple render\r\n     <pre>{JSON.stringify($system.model, null, 2)}</pre>\r\n   -->\r\n<!-- more sophisticate render -->\r\n<ul>\r\n  {#each Object.entries($system.model) as [compName, compModel]}\r\n  <p>\r\n    <b>{compName}:</b>\r\n    {#if compModel.type === 'valve'} <!-- a valve -->\r\n    a valve ...\r\n    <!-- this checkbox represents a valve switch that can be operated interactivally by any user\r\n       - it is bound to the svelte system store\r\n         ... which will directly change our local copy of the store\r\n         ... this is a bit \"un-cosure\", however because of next bullet it is OK\r\n       - in addition we syncronize this change to other participants\r\n         ... via system.cacheLocalStateChange(...)\r\n         ... which \"officially\" updates everyone's store (ours and all other participants)\r\n         in a \"cosure\" way\r\n       -->\r\n    <input type=\"checkbox\"\r\n           bind:checked={compModel.open}\r\n           on:change={ e => system.cacheLocalStateChange(`${compName}.open`, e.target.checked) }>\r\n    open, with pressure <b>{compModel.pres}</b>\r\n    {:else} <!-- a catch-all for all other cases -->\r\n    <pre>{JSON.stringify(compModel, null, 2)}</pre>\r\n    {/if}\r\n  </p>\r\n  {/each}\r\n</ul>\r\n{/if}\r\n\r\n<div class=\"error\">{userMsg}</div>\r\n\r\n<style>\r\n .error {\r\n   color: red;\r\n }\r\n</style>\r\n","l<script>\r\n import SystemDisplay from './SystemDisplay.svelte';\r\n import alert   from './alert';\r\n\r\n import {signIn} from './auth';\r\n import user     from './user';\r\n\r\n import {launchSystem, joinSystem} from './system';\r\n\r\n import logger  from './core/util/logger';\r\n const  log   = logger('vit:client:AppSys');\r\n\r\n let system = undefined; // ?? initialize\r\n\r\n async function autoSignIn() { // very temp crude (for now) ?? really initialization sys in general\r\n\r\n   // sign-in to server\r\n   // ... pulling back any message to display to user\r\n   try {\r\n     const userId = 'Resa';\r\n     const pass   = 'a';\r\n     log(`auto signin for ${userId}`);\r\n     const msg = await signIn(userId, pass);\r\n     if (msg) {\r\n       alert.display(msg);\r\n       log(`signin problem: ${msg}`);\r\n     }\r\n     else {\r\n       // activate our user on our client-side, when successfully signed-in\r\n       user.activateUser(userId);\r\n     }\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       alert.display(e.userMsg);\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       alert.display('Unexpected error in SignIn process ... see logs for detail');\r\n       log.v(`*** ERROR *** Unexpected error in SignIn process: ${e}`, e);\r\n     }\r\n   }\r\n\r\n   // now join a system\r\n   // ... first attempt: just launch a new system\r\n   // ?? VERY TEMP FOR NOW\r\n   // ?? should this be conditional ONLY if user signed in\r\n   try {\r\n     const sysId      = 'A';\r\n     const accessCode = 'a';\r\n     const modelJSON  = {\r\n       \"K1\": {\r\n         \"type\": \"valve\",\r\n         \"open\": false,\r\n         \"pres\": 120\r\n       },\r\n       \"R1\": {\r\n         \"type\": \"valve\",\r\n         \"open\": true,\r\n         \"pres\": 1200\r\n       }\r\n     };\r\n//   system = await launchSystem(sysId, accessCode, modelJSON);\r\n     system = await joinSystem(sysId, accessCode);\r\n     alert.display(`System '${sysId}' has successfully launched ... users may now join!`);\r\n     // newSystemIntroduced(sysId); ?? NOT NEEDED (I THINK)\r\n     // resetSubCompDisp(); ?? NOT NEEDED (I THINK)\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       alert.display(e.userMsg);\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       alert.display('Unexpected error in launchSystem process ... see logs for detail');\r\n       log.v(`*** ERROR *** Unexpected error in launchSystem process: ${e}`, e);\r\n     }\r\n   }\r\n\r\n }\r\n\r\n autoSignIn(); // ?? really initialization sys in general\r\n\r\n</script>\r\n\r\n<main>\r\n  <!-- alert message -->\r\n  <div>\r\n    <i class=\"alert\">{$alert}&nbsp;</i>\r\n  </div>\r\n\r\n?? POOP\r\n  <SystemDisplay {system}/>\r\n</main>\r\n\r\n<style>\r\n main {\r\n   padding: 1em;\r\n   margin:  0 auto;\r\n }\r\n .alert {\r\n   color: red;\r\n }\r\n</style>\r\n","/**\r\n * Standardize the ability to handle ALL errors more generically, by\r\n * adding these value-added extensions to ALL Error objects (via this\r\n * Error class polyfill - a monkey patch).\r\n * \r\n * All Error instances (created anywhere) are extended to include the\r\n * following characteristics:\r\n * \r\n * - A new error.userMsg property is defined.\r\n * \r\n *   This message is intended to be seen by users, so it should be\r\n *   suitable for human consumption:\r\n *     - both in meaning, \r\n *     - and in sanitation (so as to not reveal any internal\r\n *       architecture)\r\n * \r\n *   By default, error.userMsg = 'Unexpected Condition'\r\n *   and can be changed by: \r\n *     + error.defineUserMsg(userMsg): error\r\n * \r\n * - There is a delineation of expected vs. unexpected conditions.  For\r\n *   example:\r\n * \r\n *     - An error communicating \"invalid password\" is an expected\r\n *       condition, because it is stimulated by user input.\r\n * \r\n *     - Contrast that with an error communicating \"DB is down\", which is\r\n *       an unexpected condition, because this is outside the user's\r\n *       control.\r\n * \r\n *   This distinction is controlled by whether an error.userMsg has\r\n *   been defined (expected) or not (unexpected).\r\n * \r\n *   In other words, all errors start out as unexpected, and can be\r\n *   changed to expected by simply invoking:\r\n *     + error.defineUserMsg(userMsg): error\r\n * \r\n *   This distinction may be programmatically delineated through one of\r\n *   the following methods:\r\n *     + error.isExpected(): boolean\r\n *     + error.isUnexpected(): boolean\r\n * \r\n * - A new error.attemptingToMsg property is defined.\r\n * \r\n *   This message is also intended to be seen by users, and provides\r\n *   additional detail of what was being attempted (over and above the\r\n *   error.userMsg).\r\n * \r\n *   By default, error.attemptingToMsg = ''\r\n *   and can be changed by: \r\n *     + error.defineAttemptingToMsg(attemptingToMsg): error\r\n * \r\n * - A new error.formatUserMsg() is provided that combines all\r\n *   user-specific messages (userMsg and attemptingToMsg).\r\n * \r\n *     + error.formatUserMsg(): string\r\n * \r\n * - The toString() method has been extended to suffix the base\r\n *   toString() with user-specific messages.\r\n * \r\n * - All of the new \"defining\" methods return the receiving error,\r\n *   so as to allow them to be conveniently chained.  For example:\r\n * \r\n *     throw new Error('catastrophic details here').defineAttemptingToMsg('sign in');\r\n * \r\n * **Usage Scenarios** are as follows:\r\n * \r\n * - Error Origination\r\n * \r\n *   In throwing a new Error, you can:\r\n *     throw new Error('internal technical error details')\r\n *                 .defineUserMsg('You did not bla')           // ONLY INVOKE if this is an expected condition - otherwise default to: 'Unexpected Condition'\r\n *                 .defineAttemptingToMsg('log into the app'); // optionally provide additional clarification in either case (expected/unexpected)\r\n * \r\n * - Error Pass Through\r\n * \r\n *   Within a mid-level service, you may capture an error from a lower\r\n *   point and supplement it as follows:\r\n * \r\n *     catch(err) {\r\n *       throw err.defineUserMsg('You did not bla')           // ONLY INVOKE if this is an expected condition - otherwise default to: 'Unexpected Condition'\r\n *                .defineAttemptingToMsg('log into the app'); // optionally provide additional clarification in either case (expected/unexpected)\r\n *     }\r\n * \r\n * - Error Consumption (by client)\r\n * \r\n *   Using these enhancements, the client can abstractly apply various\r\n *   heuristics, such as:\r\n *\r\n *     - if logging is necessary\r\n *       * if so, reveal complete context (internal details and user context)\r\n *     - if user notification necessary\r\n *       * if so supply info suitable for human consumption\r\n * \r\n *   For more usage scenarios, please refer to the discloseError.js utility.\r\n */\r\n\r\n/* eslint-disable no-extend-native */  // we are very careful NOT to break native behavior of the Error object\r\n\r\nif (!Error.prototype.defineUserMsg) { // key off of one of several extension points\r\n\r\n  /**\r\n   * Define a user-specific message, that is applicable for human\r\n   * consumption:\r\n   *  - both in meaning, \r\n   *  - and in sanitization (so as to not reveal any internal architecture).\r\n   *\r\n   * This method also delineates the error as an expected condition.\r\n   *\r\n   * @param {String} userMsg the user message to define\r\n   *\r\n   * @return {Error} self, supporting convenient Error method chaining.\r\n   */\r\n  Error.prototype.defineUserMsg = function(userMsg) {\r\n    this.userMsg  = userMsg;\r\n    this.expected = true;\r\n    return this;\r\n  };\r\n  Error.prototype.userMsg = \"Unexpected Condition\"; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether this error was\r\n   * expected (say user input error),\r\n   * or not (say a catastrophic error).\r\n   *\r\n   * @return {boolean} error expected (true) or not (false).\r\n   */\r\n  Error.prototype.isExpected = function() {\r\n    return this.expected;\r\n  };\r\n  Error.prototype.expected = false; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether this error was\r\n   * unexpected (say a catastrophic error),\r\n   * or not (say user input error).\r\n   *\r\n   * @return {boolean} error unexpected (true) or not (false).\r\n   */\r\n  Error.prototype.isUnexpected = function() {\r\n    return !this.expected;\r\n  };\r\n\r\n\r\n  /**\r\n   * Define a user-specific 'attempting to' message, that provides\r\n   * additional details of what was being attempted.\r\n   *\r\n   * Errors with this context are prefixed with ' ... attempting to: ',\r\n   * so word your phrasing appropriately.\r\n   * \r\n   * Multiple attempting-to phrases can be used, which will be\r\n   * combined with the ', -and- ' phrase.\r\n   *\r\n   * @param {String} attemptingToMsg the user-specific attempting\r\n   * to' message.\r\n   *\r\n   * @return {Error} self, supporting convenient Error method chaining.\r\n   */\r\n  Error.prototype.defineAttemptingToMsg = function(attemptingToMsg) {\r\n    if (this.attemptingToMsg) // append multiples\r\n      this.attemptingToMsg += `, -and- ${attemptingToMsg}`;\r\n    else                      // initial definition\r\n      this.attemptingToMsg += ` ... attempting to: ${attemptingToMsg}`;\r\n    return this;\r\n  };\r\n  Error.prototype.attemptingToMsg = ''; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Format a user-specific message, combining all user-specific contexts.\r\n   *\r\n   * @return {string} formatted user message.\r\n   */\r\n  Error.prototype.formatUserMsg = function() {\r\n    return this.userMsg + this.attemptingToMsg;\r\n  };\r\n\r\n\r\n  /**\r\n   * Extend the Error toString() to prefix user-specific context.\r\n   */\r\n  const prior_toString = Error.prototype.toString; // monkey patch\r\n  Error.prototype.toString = function() {\r\n    return prior_toString.call(this) + '\\n\\nUser Msg: ' + this.formatUserMsg();\r\n  };\r\n\r\n\r\n  // L8TR:\r\n  // /**\r\n  //  * Define an indicator as to the cause of this error ... used to apply\r\n  //  * various heuristics, such as whether logging is necessary.\r\n  //  *\r\n  //  * The following indicators are available:\r\n  //  *   Error.Cause {\r\n  //  *     UNEXPECTED_CONDITION        [default]\r\n  //  *     RECOGNIZED_USER_ERROR\r\n  //  *   }\r\n  //  *\r\n  //  * @param {String} cause one of Error.Cause.\r\n  //  *\r\n  //  * @return {Error} self, supporting convenient Error method chaining.\r\n  //  */\r\n  // Error.prototype.defineCause = function(cause) {\r\n  //   this.cause = cause;\r\n  //   return this;\r\n  // };\r\n  // \r\n  // Error.Cause = {\r\n  //   UNEXPECTED_CONDITION:    'UNEXPECTED_CONDITION',\r\n  //   RECOGNIZED_USER_ERROR: 'RECOGNIZED_USER_ERROR'\r\n  // };\r\n  // \r\n  // Error.prototype.cause = Error.Cause.UNEXPECTED_CONDITION; // prototype provides the default\r\n\r\n}\r\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\");\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","// AI: really need to expose custability\r\n//     - simplify and invoke beep() directly WITH named params (setting up AudioContext ONCE)\r\n//     - consider different approach\r\n//       * in production deploymen, I'm getting following error:\r\n//         beep.js:35 The AudioContext was not allowed to start. \r\n//                    It must be resumed (or created) after a user gesture on the page.\r\n//                      https://goo.gl/7K7WLu\r\n//                      TRACE: beep.js:35 (at constructor)\r\n//                             beep.js:89\r\n//       * consider different approach (such as Audio object)\r\n//         - How do I make JavaScript beep?\r\n//           ... https://stackoverflow.com/questions/879152/how-do-i-make-javascript-beep\r\n//         - Sound effects in JavaScript / HTML5\r\n//           ... https://stackoverflow.com/questions/1933969/sound-effects-in-javascript-html5/1934325#1934325\r\n\r\n// A simple utility to emit a beep in the browser\r\n// ... see: AudioContext\r\n//     https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\r\n// ... patterned after: \r\n//     https://github.com/kapetan/browser-beep/blob/master/index.js\r\n// ... KJB: Shouldn't be this hard :-(\r\n// USAGE:\r\n//   import beep from './util/beep';\r\n//   ...\r\n//   beep(); -or- beep(2);\r\n\r\nconst FREQUENCY     = 1000;     // ORIGINAL: 440;     // KJB: how high the beep pitch (50: bass guitar, 440: doodle, 840: ding, 1440: too high)\r\nconst INTERVAL      = 250;      // ORIGINAL: 250;     // KJB: time between multiple beeps\r\nconst RAMP_VALUE    = 0.00001;  // ORIGINAL: 0.00001; // KJB: UNSURE - volume (I don't know)\r\nconst RAMP_DURATION = 1;        // ORIGINAL: 1;       // KJB: beep duration (in seconds)\r\n\r\nfunction createBeep(options={}) {\r\n  const AudioCtx = window.AudioContext || window.webkitAudioContext;\r\n\r\n  const audioCtx  = options.context   || new AudioCtx();\r\n  const frequency = options.frequency || FREQUENCY;\r\n  const interval  = options.interval  || INTERVAL;\r\n\r\n  function play() {\r\n    const currentTime = audioCtx.currentTime;\r\n    const osc         = audioCtx.createOscillator();\r\n    const gain        = audioCtx.createGain();\r\n\r\n    gain.gain.value = 0.2; // KJB: volume: 20%\r\n\r\n    osc.connect(gain);\r\n    gain.connect(audioCtx.destination);\r\n\r\n    gain.gain.setValueAtTime(gain.gain.value, currentTime);\r\n    gain.gain.exponentialRampToValueAtTime(RAMP_VALUE, currentTime + RAMP_DURATION);\r\n\r\n    osc.onended = function () {\r\n      gain.disconnect(audioCtx.destination);\r\n      osc.disconnect(gain);\r\n    }\r\n\r\n    osc.type = 'sine';\r\n    osc.frequency.value = frequency;\r\n    osc.start(currentTime);\r\n    osc.stop(currentTime + RAMP_DURATION);\r\n  }\r\n\r\n  // our exposed beep function\r\n  function beep(times=1) {\r\n    function emitSound(num) {\r\n      // play our sound\r\n      play();\r\n      // invoke self multiple times (at proper interval)\r\n      if (++num < times) {\r\n        setTimeout(emitSound, interval, num);\r\n      }\r\n    }\r\n    emitSound(0); // emit sound the FIRST time\r\n  }\r\n\r\n  // KJB: I have NO IDEA what this is, or how it is invoked\r\n  //      ... found nothing in my search :-(\r\n  //      >>> THIS IS A TOTAL BUST ... it does NOTHING except publically promote it\r\n  //          AI: DO NOT DO THIS IN MY REAL IMPLEMENTATION\r\n  beep.destroy = function () {\r\n    if (!options.context) { // KJB: close when context is NOT supplied in options (i.e. when `new AudioCtx()` above)\r\n      audioCtx.close();\r\n    }\r\n  }\r\n\r\n  return beep;\r\n}\r\n\r\nconst beep = createBeep();\r\nexport default beep;\r\n","//***\r\n//*** a chat store, containing private-msgs to another user\r\n//*** ... current support: multi-session with two parties per session\r\n//***\r\n\r\nimport {writable, get} from 'svelte/store';\r\nimport alert      from './alert';\r\nimport beep       from './util/beep';\r\nimport logger     from './core/util/logger';\r\nconst  log = logger('vit:client:chat');\r\n\r\n// the store \"session\" structure (one for each session)\r\n// SESSION:\r\n// {\r\n//   otherSocketId: 'aSocketId', // the other-user socketId\r\n//   otherUserId:   'aUserId',   // the other-user userId\r\n//   msgs: [                     // all the messages in this session\r\n//     {       // one of many messages\r\n//       when: date,\r\n//       who:  boolean, // true: other-user, false: me\r\n//       msg:  'hello world',\r\n//     },\r\n//     ...\r\n//   ],\r\n// }\r\n\r\n// our initial store value (defining our value methods)\r\nconst initialChat = {\r\n  session: { // SESSION map\r\n    // otherSocketId1: SESSION, // ... one of many sessions BETWEEN self and this \"other\" user\r\n    // otherSocketId2: SESSION, // ... ditto\r\n    // ...\r\n  },\r\n\r\n  //***\r\n  //*** adorned properties (based on SESSION map - above)\r\n  //***\r\n\r\n  sessions: [],    // SESSION[] ... array rendition of SESSION map (sorted by otherUserId)\r\n  isActive: false, // are their active sessions\r\n};\r\n\r\n// internal function that maintains the adorned properties\r\n// RETURN: new chat value object\r\nfunction adorn(sessionMap) {\r\n  const sessions = Object.values(sessionMap) // extract session array\r\n                         .sort((a,b) => a.otherUserId.localeCompare(b.otherUserId)); // sorted by otherUserId\r\n  const isActive = sessions.length > 0;\r\n  return {\r\n    session: sessionMap,\r\n    sessions,\r\n    isActive,\r\n  };\r\n}\r\n\r\nfunction createChat() {\r\n\tconst {subscribe, update} = writable(initialChat);\r\n\r\n\treturn {\r\n\t\tsubscribe,\r\n\r\n    // solicit a private message (initiation)\r\n    solicitPrivateMsg: () => { // ... invoked by: client Easter Egg (see: Router.svelte)\r\n      log(`solicit a private message to server ... emitting socket private-msg-solicit`);\r\n      socket.emit('private-msg-solicit');\r\n      alert.display(`Requesting chat :-)`);\r\n    },\r\n\r\n    // connect our chat with another user\r\n    connect: (otherSocketId, userId, msg) => { // ... invoked by 'private-msg-connect' event (below)\r\n      // default params appropriatly\r\n      userId = userId || 'Guest';\r\n      msg    = msg    || `Hello from ${userId}`;\r\n\r\n      // connect our chat\r\n      log(`connecting chat with: ${userId}, msg: \"${msg}\"`);\r\n      update(state => adorn({...state.session,\r\n                             [otherSocketId]: {\r\n                               ...state.session[otherSocketId], // for good measure (not really needed since we are injecting all properties)\r\n                               otherSocketId,\r\n                               otherUserId:   userId,\r\n                               // preserve session content when already active\r\n                               // ... WITH protection (via empty array) when NOT already active\r\n                               msgs: [...(state.session[otherSocketId]?.msgs || []), {when: new Date(), who: true, /* other-user */ msg}],\r\n                             }} ));\r\n      alert.display(`Chat now available with ${userId} (see Chat tab)`);\r\n    },\r\n\r\n    // send a message to the other party of the given session\r\n    sendMsg: (msg, otherSocketId) => {\r\n\r\n      // obtain the designated session that we will be communicating with\r\n      const session = get(chat).session[otherSocketId];\r\n\r\n      // send the message\r\n      log(`sending msg: \"${msg}\" TO: ${session.otherUserId}`);\r\n      //                         TO:                    FROM:\r\n      socket.emit('private-msg', session.otherSocketId, socket.id,  msg);\r\n\r\n      // update this local message in our state\r\n      update(state => adorn({...state.session,\r\n                             [otherSocketId]: {\r\n                               ...state.session[otherSocketId],\r\n                               msgs: [...(state.session[otherSocketId]?.msgs || []), {when: new Date(), who: false, /* me */ msg}],\r\n                             }} ));\r\n    },\r\n\r\n    // receive a message\r\n    receiveMsg: (msg, otherSocketId) => {\r\n\r\n      // obtain the designated session that is communicating with us\r\n      const session = get(chat).session[otherSocketId];\r\n\r\n      log(`receiving msg: \"${msg}\" FROM: ${session.otherUserId}`);\r\n\r\n      // update this message in our state\r\n      update(state => adorn({...state.session,\r\n                             [otherSocketId]: {\r\n                               ...state.session[otherSocketId],\r\n                               msgs: [...(state.session[otherSocketId]?.msgs || []), {when: new Date(), who: true, /* other-user */ msg}],\r\n                             }} ));\r\n\r\n      // notify user new chat message has arrived\r\n      // ??\r\n      beep();\r\n\r\n    },\r\n\r\n    // disconnect chat\r\n    // ... this initiates the disconnect\r\n    disconnect: (otherSocketId) => { // ... invoked by: client chat screen\r\n\r\n      // obtain the designated session to disconnect\r\n      const session = get(chat).session[otherSocketId];\r\n\r\n      log(`disconnect our chat session with ${session.otherUserId}`);\r\n\r\n      // update our state to reflect a disconnect\r\n      // ... remove the session completely\r\n      update(state => {\r\n        const {[otherSocketId]: removedSession, ...rest} = state.session;\r\n        return adorn(rest);\r\n      });\r\n\r\n      // communicate to the other side that we are disconnected\r\n      //                                    SEND-TO        THEIR-OTHER\r\n      socket.emit('private-msg-disconnect', otherSocketId, socket.id);\r\n    },\r\n\r\n    // our chat has been disconnected\r\n    // ... from the other party\r\n    disconnected: (otherSocketId) => {\r\n      log(`our chat session has been disconnected (from the other party)`);\r\n\r\n      // obtain the designated session to disconnect\r\n      const session = get(chat).session[otherSocketId];\r\n\r\n      if (session) { // can be undefined WHEN chat to self\r\n        log(`chat session with ${session.otherUserId} has been disconnected (by them)`);\r\n\r\n        // update our state to reflect a disconnect\r\n        // ... remove the session completely\r\n        update(state => {\r\n          const {[otherSocketId]: removedSession, ...rest} = state.session;\r\n          return adorn(rest);\r\n        });\r\n      }\r\n    },\r\n\t};\r\n}\r\n\r\n// our current active chat\r\n// ... a Svelte store\r\nconst chat = createChat();\r\nexport default chat;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// our active socket (to be used in this module)\r\nlet socket;\r\n\r\nexport function registerChatSocketHandlers(_socket) {\r\n  log('here we are in registerChatSocketHandlers');\r\n\r\n  // expose socket to this module\r\n  socket = _socket;\r\n\r\n  // handle private-msg connection request\r\n  socket.on('private-msg-connect', (otherSocketId, userId) => {\r\n    chat.connect(otherSocketId, userId);\r\n  });\r\n\r\n  // receive private-msg\r\n  // ... receiving BECAUSE we are on the client side\r\n  socket.on('private-msg', (toSocketId, fromSocketId, msg) => {\r\n    chat.receiveMsg(msg, fromSocketId);\r\n  });\r\n\r\n  // handle disconnect request from other side\r\n  socket.on('private-msg-disconnect', (otherSocketId) => {\r\n    chat.disconnected(otherSocketId);\r\n  });\r\n}\r\n","//***\r\n//*** filterLogsIOClient.js ..... WebSocket binding supporting filtering of logs (client-side)\r\n//***\r\n\r\nimport logger from './logger';\r\nconst  log = logger('vit:core:logger:filterLogsIOClient');\r\n\r\nlet socket;  // our active socket (to be used in this module)\r\n\r\nexport function registerLogFilterSocketHandlers(_socket) {\r\n  log('here we are in registerLogFilterSocketHandlers');\r\n\r\n  // expose socket to this module\r\n  socket = _socket;\r\n\r\n  // handle getting other client log filters (request/response)\r\n  // NOTE: The server does a pass-through to other client (i.e. this process).\r\n  //       BECAUSE we are \"listening\" to this event (not emitting it), we are the \"other\" client.\r\n  socket.on('get-other-log-filters', (ack) => {\r\n    ack(logger.currentLogFilters());\r\n  });\r\n\r\n  // handle setting other client log filters\r\n  // NOTE: The server does a pass-through to other client (i.e. this process).\r\n  //       BECAUSE we are \"listening\" to this event (not emitting it), we are the \"other\" client.\r\n  // NOTE: otherSocketId IS NEEDED (from client-server) but NOT NEEDED (in server-client - THIS PROCESS)\r\n  //       but maintained for consistancy (since we use the same event name)\r\n  socket.on('set-other-log-filters', (otherSocketId, filter) => {\r\n    logger.setLogFilters(filter);\r\n    log.f(`our logging filter has been REMOTELY set set to: '${filter}'`);\r\n  });\r\n}\r\n\r\n// convenience setServerLogFilters(filter) wrapping the socket protocol\r\n// RETURN: void\r\nexport function setServerLogFilters(filter) {\r\n  socket.emit('set-server-log-filters', filter);\r\n}\r\n\r\n// convenience getServerLogFilters() utility wrapping the socket protocol with an async request/response\r\n// RETURN: promise string\r\nexport function getServerLogFilters() {\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'get-server-log-filters' socket request to our server\r\n    socket.emit('get-server-log-filters', (serverLogFilters) => {\r\n      // within our acknowledgment callback\r\n      resolve(serverLogFilters);\r\n    });\r\n  });\r\n}\r\n\r\n// convenience setOtherLogFilters(otherSocketId, filter) wrapping the socket protocol\r\n// RETURN: void\r\nexport function setOtherLogFilters(otherSocketId, filter) {\r\n  socket.emit('set-other-log-filters', otherSocketId, filter);\r\n}\r\n\r\n// convenience getOtherLogFilters(otherSocketId) utility wrapping the socket protocol with an async request/response\r\n// RETURN: promise string\r\nexport function getOtherLogFilters(otherSocketId) {\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'get-other-log-filters' socket request to the other client\r\n    socket.emit('get-other-log-filters', otherSocketId, (otherLogFilters) => {\r\n      if (otherLogFilters.startsWith('ERROR')) {\r\n        reject(otherLogFilters);\r\n      }\r\n      else {\r\n        resolve(otherLogFilters);\r\n      }\r\n    });\r\n  });\r\n}\r\n","// a simplistic determination of whether client is running in \r\n// - production  - isProd: true\r\n// - development - isDev: true\r\nexport const  isDev  = window?.location?.hostname === 'localhost';\r\nexport const  isProd = !isDev;\r\n","//***\r\n//*** sockets.js ... maintain our client communication websockets (socket.io)\r\n//***\r\n\r\nimport socketIOClient                        from \"socket.io-client\";\r\nimport {registerAuthSocketHandlers}          from './auth';\r\nimport {registerChatSocketHandlers}          from './chat';\r\nimport {registerSystemStoreSocketHandlers}   from './system';\r\nimport {registerSystemSocketHandlers}        from './systemIO';\r\nimport {registerLogFilterSocketHandlers}     from './core/util/logger/filterLogsIOClient';\r\nimport {isDev}                               from './util/env';\r\nimport user                                  from './user';\r\nimport alert                                 from './alert';\r\n\r\nimport logger from './core/util/logger';\r\nconst  log = logger('vit:client:sockets');\r\n\r\n// make our socket connection for this app/browser-window\r\n// ... serverURL:\r\n//     - for dev  env: we explicitly point to our well-known dev server/port ... http://localhost:5000\r\n//     - for prod env: we defer to socket.io default (undefined) WHICH is the production host server of our client (e.g. window.location) ... https://dmrst.herokuapp.com/\r\nconst serverURL = isDev ? \"http://localhost:5000\" : undefined;\r\n// ... socket:\r\n//     - this socket object is initially a shell, but is dynamically updated when connected\r\nlog.f(`our client is now making a socket.io connection to our server: ${serverURL || 'THE PRODUCTION HOST SERVER of our CLIENT'}`);\r\nconst socket = socketIOClient(serverURL);\r\n\r\n\r\n// NOTE: to determine if connection is made or NOT, simply monitor 'connect'\r\n// ... test with \r\n//     1. server NOT running:    NEVER receive 'connect' event \r\n//                               WITH reoccurring console error:\r\n//                                    GET http://localhost:5000/socket.io/?EIO=4&transport=polling&t=Nxzv673 net::ERR_CONNECTION_REFUSED\r\n//     2. server cors rejection: NEVER receive 'connect' event  <<< BASICALLY THE SAME THING\r\n//                               WITH reoccurring console error:\r\n//                                    Access to XMLHttpRequest at 'http://localhost:5000/socket.io/?EIO=4&transport=polling&t=NxzvTtB' from origin 'http://localhost:8080' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.\r\n//                                    GET http://localhost:5000/socket.io/?EIO=4&transport=polling&t=NxzvTtB net::ERR_FAILED 200\r\n// ... AI: what about error trapping?\r\nsocket.on('connect', () => {\r\n  log(`client's socket connection to server is now up: ${socket.id} / connected: ${socket.connected}`);\r\n  alert.display('Our server connection is now up and running.');\r\n  // AI: maintain state that our socket connection is UP\r\n});\r\nsocket.on('disconnect', () => {\r\n  log(`client's socket connection to server has been lost: ${socket.id} / connected: ${socket.connected}`);\r\n\r\n  // notify user we have lost our connection to the server\r\n  alert.display('Our server connection has been lost.');\r\n\r\n  // our user is now deactivated (with no server)\r\n  // NOTE: we keep our socket in-place because socket.io will auto-reconnect when the server is back up!\r\n  user.deactivateUser(); // ... this is OK to do EVEN if the user is NOT currently signed-in\r\n\r\n  // AI: maintain state that our socket connection is DOWN\r\n});\r\n\r\n// register ALL APP socket event listeners\r\nregisterAuthSocketHandlers(socket);\r\nregisterChatSocketHandlers(socket);\r\nregisterSystemStoreSocketHandlers(socket);\r\nregisterSystemSocketHandlers(socket);\r\nregisterLogFilterSocketHandlers(socket);\r\n// AI: more\r\n","import AppSys from './AppSys.svelte';\r\nimport './core/util/ErrorExtensionPolyfill'; // value-added Error extensions, providing ability to handle ALL errors more generically\r\nimport './sockets'; // configure client app's websocket initiation ... AI: ?? needs a break-up and prune - this contains too much for SYS only app (MINOR: punt for now)\r\n\r\nconst app = new AppSys({\r\n\ttarget: document.body,\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","$$","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","d","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","inBrowser","window","process","versions","s","h","w","y","ms","val","str","String","match","exec","n","parseFloat","toLowerCase","parse","isFinite","long","msAbs","Math","abs","plural","fmtLong","round","fmtShort","Error","JSON","stringify","isPlural","common","env","createDebug","namespace","prevTime","namespacesCache","enabledCache","enableOverride","debug","args","enabled","self","curr","Number","Date","diff","prev","coerce","unshift","replace","format","formatter","formatters","call","formatArgs","log","apply","useColors","color","selectColor","extend","destroy","defineProperty","enumerable","configurable","get","namespaces","v","delimiter","newDebug","toNamespace","regexp","toString","substring","default","stack","message","disable","names","skips","join","enable","save","split","len","RegExp","slice","test","humanize","require$$0","console","warn","key","hash","charCodeAt","colors","load","exports","module","lastC","storage","setItem","removeItem","error","r","getItem","DEBUG","__nwjs","navigator","userAgent","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","$1","localStorage","localstorage","warned","j","_cachedLogs","logger","rtnLog","colonIndx","verboseNameSpace","verbose","force","f","msg","_currentLogFilters","socketAckFn","reject","prototype","defineUserMsg","errMsg","userMsg","commonPayloadHandler","log$7","isLogFilterEnabled","nameSpace","setLogFilters","filterStr","clearLogFilters","currentLogFilters","socket","timeout","alert","display","clearTimeout","setTimeout","createAlert","signIn","userId","pass","emit","user","activateUser","state","deactivateUser","createUser","async","joinSystem","sysId","accessCode","getSystem","isRunning","model","joinSystemIO","isHost","participants","system","runChanged","running","participantsChanged","stateChanged","deltaModelChanges","newModel","structuredClone","entries","compKey","propKey","localStateChange","cacheLocalStateChange","extractLocalStateChange","foo","clientSystems","createSystemStore","runSystem","runSystemIO","pauseSystem","pauseSystemIO","log$3","t2_value","t5_value","t11_value","t16_value","create_if_block_2","each_value","b0","br0","b1","br1","b2","br2","b3","ul","t2","t5","t11","t16","iterations","button","t_value","pre","t","pres","input","checked","open","create_if_block_1","t0","t0_value","create_if_block","div","$system","$$invalidate","e","isExpected","compName","main","o","outros","autoSignIn","expected","isUnexpected","defineAttemptingToMsg","attemptingToMsg","formatUserMsg","prior_toString","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","readAsDataURL","chars","lookup","Uint8Array","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","bytes","decode","SEPARATOR","fromCharCode","Emitter","mixin","on","_callbacks","once","off","arguments","removeListener","removeAllListeners","cb","emitReserved","listeners","hasListeners","globalThisShim","Function","pick","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","TransportError","constructor","reason","description","super","Transport","query","readyState","onError","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","alphabet","seed","encode","num","encoded","floor","yeast","now","encodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","concat","empty","hasXHR2","responseType","Request","uri","method","undefined","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","onreadystatechange","status","onLoad","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","WebSocket","MozWebSocket","isReactNative","product","transports","websocket","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","schema","secure","port","timestampRequests","timestampParam","b64","encodedQuery","hostname","path","polling","location","isSSL","protocol","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","sid","request","assign","req","xhrStatus","pollXhr","re","parts","src","source","host","authority","ipv6uri","pathNames","regx","substr","queryKey","$0","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","freezeTransport","onTransportClose","onupgrade","to","onHandshake","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","utf8Length","ceil","byteLength","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","Socket$1","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Decoder","reviver","reconstructor","decodeString","BINARY_EVENT","BINARY_ACK","BinaryReconstructor","takeBinaryData","buf","nsp","next","payload","tryParse","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","EVENT","ACK","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","deconstruction","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","_registerAckCallback","isTransportWritable","engine","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","href","url","sameNamespace","forceNew","multiplex","beep","AudioCtx","AudioContext","webkitAudioContext","audioCtx","frequency","interval","times","emitSound","currentTime","osc","createOscillator","gain","createGain","destination","setValueAtTime","exponentialRampToValueAtTime","onended","play","createBeep","initialChat","session","sessions","isActive","adorn","sessionMap","values","sort","otherUserId","localeCompare","chat","solicitPrivateMsg","otherSocketId","msgs","when","who","sendMsg","receiveMsg","removedSession","createChat","isDev","serverURL","socketIOClient","toSocketId","fromSocketId","registerChatSocketHandlers","userErr","activeUser","comp","stateChanges","registerSystemStoreSocketHandlers","registerSystemSocketHandlers","registerLogFilterSocketHandlers","body"],"mappings":"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"}