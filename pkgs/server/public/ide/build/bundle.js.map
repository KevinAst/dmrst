{"version":3,"file":"bundle.js","sources":["../../../../server/src/core/util/ErrorExtensionPolyfill.js","../../../node_modules/engine.io-parser/build/esm/commons.js","../../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../../node_modules/engine.io-parser/build/esm/index.js","../../../node_modules/@socket.io/component-emitter/index.mjs","../../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../../node_modules/engine.io-client/build/esm/util.js","../../../node_modules/engine.io-client/build/esm/transport.js","../../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../../node_modules/engine.io-client/build/esm/transports/polling.js","../../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../../node_modules/engine.io-client/build/esm/transports/index.js","../../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../../node_modules/engine.io-client/build/esm/socket.js","../../../node_modules/socket.io-parser/build/esm/is-binary.js","../../../node_modules/socket.io-parser/build/esm/binary.js","../../../node_modules/socket.io-parser/build/esm/index.js","../../../node_modules/socket.io-client/build/esm/on.js","../../../node_modules/socket.io-client/build/esm/socket.js","../../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../../node_modules/socket.io-client/build/esm/manager.js","../../../node_modules/socket.io-client/build/esm/index.js","../../../node_modules/socket.io-client/build/esm/url.js","../../../node_modules/svelte/internal/index.mjs","../../../node_modules/svelte/store/index.mjs","../../../src/util/alert.js","../../../src/auth/device.js","../../../../server/src/core/util/runningIn.js","../../../../server/node_modules/ms/index.js","../../../../server/node_modules/debug/src/common.js","../../../../server/node_modules/debug/src/browser.js","../../../../server/src/core/util/logger/logger.js","../../../../server/src/core/util/socketIOUtils.js","../../../src/auth/user.js","../../../src/util/beep.js","../../../src/chat/chat.js","../../../src/sys/systemIO.js","../../../src/sys/system.js","../../../../server/src/core/util/logger/filterLogsIOClient.js","../../../src/util/env.js","../../../src/sockets.js","../../../src/IDE.svelte","../../../src/sys/SystemDisplay.svelte","../../../src/sys/SystemSelector.svelte","../../../src/sys/SystemJoin.svelte","../../../src/sys/SystemLaunch.svelte","../../../src/sys/System.svelte","../../../src/chat/ChatSessionSelector.svelte","../../../src/chat/Chat.svelte","../../../../server/src/core/util/logger/FilterMyLogs.svelte","../../../../server/src/core/util/logger/FilterOtherLogs.svelte","../../../../server/src/core/util/logger/FilterServerLogs.svelte","../../../../server/src/core/util/logger/FilterLogs.svelte","../../../src/Admin.svelte","../../../src/auth/SignIn.svelte","../../../src/auth/RegisterGuest.svelte","../../../src/auth/UserProfileIcon.svelte","../../../src/util/longpress.js","../../../src/main/IDE/Router.svelte","../../../src/main/IDE/App.svelte","../../../src/main/IDE/main.js"],"sourcesContent":["/**\r\n * Standardize the ability to handle ALL errors more generically, by\r\n * adding these value-added extensions to ALL Error objects (via this\r\n * Error class polyfill - a monkey patch).\r\n * \r\n * All Error instances (created anywhere) are extended to include the\r\n * following characteristics:\r\n * \r\n * - A new error.userMsg property is defined.\r\n * \r\n *   This message is intended to be seen by users, so it should be\r\n *   suitable for human consumption:\r\n *     - both in meaning, \r\n *     - and in sanitation (so as to not reveal any internal\r\n *       architecture)\r\n * \r\n *   By default, error.userMsg = 'Unexpected Condition'\r\n *   and can be changed by: \r\n *     + error.defineUserMsg(userMsg): error\r\n * \r\n * - There is a delineation of expected vs. unexpected conditions.  For\r\n *   example:\r\n * \r\n *     - An error communicating \"invalid password\" is an expected\r\n *       condition, because it is stimulated by user input.\r\n * \r\n *     - Contrast that with an error communicating \"DB is down\", which is\r\n *       an unexpected condition, because this is outside the user's\r\n *       control.\r\n * \r\n *   This distinction is controlled by whether an error.userMsg has\r\n *   been defined (expected) or not (unexpected).\r\n * \r\n *   In other words, all errors start out as unexpected, and can be\r\n *   changed to expected by simply invoking:\r\n *     + error.defineUserMsg(userMsg): error\r\n * \r\n *   This distinction may be programmatically delineated through one of\r\n *   the following methods:\r\n *     + error.isExpected(): boolean\r\n *     + error.isUnexpected(): boolean\r\n * \r\n * - A new error.attemptingToMsg property is defined.\r\n * \r\n *   This message is also intended to be seen by users, and provides\r\n *   additional detail of what was being attempted (over and above the\r\n *   error.userMsg).\r\n * \r\n *   By default, error.attemptingToMsg = ''\r\n *   and can be changed by: \r\n *     + error.defineAttemptingToMsg(attemptingToMsg): error\r\n * \r\n * - A new error.formatUserMsg() is provided that combines all\r\n *   user-specific messages (userMsg and attemptingToMsg).\r\n * \r\n *     + error.formatUserMsg(): string\r\n * \r\n * - The toString() method has been extended to suffix the base\r\n *   toString() with user-specific messages.\r\n * \r\n * - All of the new \"defining\" methods return the receiving error,\r\n *   so as to allow them to be conveniently chained.  For example:\r\n * \r\n *     throw new Error('catastrophic details here').defineAttemptingToMsg('sign in');\r\n * \r\n * **Usage Scenarios** are as follows:\r\n * \r\n * - Error Origination\r\n * \r\n *   In throwing a new Error, you can:\r\n *     throw new Error('internal technical error details')\r\n *                 .defineUserMsg('You did not bla')           // ONLY INVOKE if this is an expected condition - otherwise default to: 'Unexpected Condition'\r\n *                 .defineAttemptingToMsg('log into the app'); // optionally provide additional clarification in either case (expected/unexpected)\r\n * \r\n * - Error Pass Through\r\n * \r\n *   Within a mid-level service, you may capture an error from a lower\r\n *   point and supplement it as follows:\r\n * \r\n *     catch(err) {\r\n *       throw err.defineUserMsg('You did not bla')           // ONLY INVOKE if this is an expected condition - otherwise default to: 'Unexpected Condition'\r\n *                .defineAttemptingToMsg('log into the app'); // optionally provide additional clarification in either case (expected/unexpected)\r\n *     }\r\n * \r\n * - Error Consumption (by client)\r\n * \r\n *   Using these enhancements, the client can abstractly apply various\r\n *   heuristics, such as:\r\n *\r\n *     - if logging is necessary\r\n *       * if so, reveal complete context (internal details and user context)\r\n *     - if user notification necessary\r\n *       * if so supply info suitable for human consumption\r\n * \r\n *   For more usage scenarios, please refer to the discloseError.js utility.\r\n */\r\n\r\n/* eslint-disable no-extend-native */  // we are very careful NOT to break native behavior of the Error object\r\n\r\nif (!Error.prototype.defineUserMsg) { // key off of one of several extension points\r\n\r\n  /**\r\n   * Define a user-specific message, that is applicable for human\r\n   * consumption:\r\n   *  - both in meaning, \r\n   *  - and in sanitization (so as to not reveal any internal architecture).\r\n   *\r\n   * This method also delineates the error as an expected condition.\r\n   *\r\n   * @param {String} userMsg the user message to define\r\n   *\r\n   * @return {Error} self, supporting convenient Error method chaining.\r\n   */\r\n  Error.prototype.defineUserMsg = function(userMsg) {\r\n    this.userMsg  = userMsg;\r\n    this.expected = true;\r\n    return this;\r\n  };\r\n  Error.prototype.userMsg = \"Unexpected Condition\"; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether this error was\r\n   * expected (say user input error),\r\n   * or not (say a catastrophic error).\r\n   *\r\n   * @return {boolean} error expected (true) or not (false).\r\n   */\r\n  Error.prototype.isExpected = function() {\r\n    return this.expected;\r\n  };\r\n  Error.prototype.expected = false; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether this error was\r\n   * unexpected (say a catastrophic error),\r\n   * or not (say user input error).\r\n   *\r\n   * @return {boolean} error unexpected (true) or not (false).\r\n   */\r\n  Error.prototype.isUnexpected = function() {\r\n    return !this.expected;\r\n  };\r\n\r\n\r\n  /**\r\n   * Define a user-specific 'attempting to' message, that provides\r\n   * additional details of what was being attempted.\r\n   *\r\n   * Errors with this context are prefixed with ' ... attempting to: ',\r\n   * so word your phrasing appropriately.\r\n   * \r\n   * Multiple attempting-to phrases can be used, which will be\r\n   * combined with the ', -and- ' phrase.\r\n   *\r\n   * @param {String} attemptingToMsg the user-specific attempting\r\n   * to' message.\r\n   *\r\n   * @return {Error} self, supporting convenient Error method chaining.\r\n   */\r\n  Error.prototype.defineAttemptingToMsg = function(attemptingToMsg) {\r\n    if (this.attemptingToMsg) // append multiples\r\n      this.attemptingToMsg += `, -and- ${attemptingToMsg}`;\r\n    else                      // initial definition\r\n      this.attemptingToMsg += ` ... attempting to: ${attemptingToMsg}`;\r\n    return this;\r\n  };\r\n  Error.prototype.attemptingToMsg = ''; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Format a user-specific message, combining all user-specific contexts.\r\n   *\r\n   * @return {string} formatted user message.\r\n   */\r\n  Error.prototype.formatUserMsg = function() {\r\n    return this.userMsg + this.attemptingToMsg;\r\n  };\r\n\r\n\r\n  /**\r\n   * Extend the Error toString() to prefix user-specific context.\r\n   */\r\n  const prior_toString = Error.prototype.toString; // monkey patch\r\n  Error.prototype.toString = function() {\r\n    return prior_toString.call(this) + '\\n\\nUser Msg: ' + this.formatUserMsg();\r\n  };\r\n\r\n\r\n  // L8TR:\r\n  // /**\r\n  //  * Define an indicator as to the cause of this error ... used to apply\r\n  //  * various heuristics, such as whether logging is necessary.\r\n  //  *\r\n  //  * The following indicators are available:\r\n  //  *   Error.Cause {\r\n  //  *     UNEXPECTED_CONDITION        [default]\r\n  //  *     RECOGNIZED_USER_ERROR\r\n  //  *   }\r\n  //  *\r\n  //  * @param {String} cause one of Error.Cause.\r\n  //  *\r\n  //  * @return {Error} self, supporting convenient Error method chaining.\r\n  //  */\r\n  // Error.prototype.defineCause = function(cause) {\r\n  //   this.cause = cause;\r\n  //   return this;\r\n  // };\r\n  // \r\n  // Error.Cause = {\r\n  //   UNEXPECTED_CONDITION:    'UNEXPECTED_CONDITION',\r\n  //   RECOGNIZED_USER_ERROR: 'RECOGNIZED_USER_ERROR'\r\n  // };\r\n  // \r\n  // Error.prototype.cause = Error.Cause.UNEXPECTED_CONDITION; // prototype provides the default\r\n\r\n}\r\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\");\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.50.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","//***\r\n//*** a simple alert(msg) shown in our main screen (via Router.svelte)\r\n//***\r\n\r\nimport {writable} from 'svelte/store';\r\n\r\nlet timeout = null;\r\n\r\nfunction createAlert() {\r\n\tconst {subscribe, set, update} = writable(''); // empty string for NO alert\r\n\r\n\treturn {\r\n\t\tsubscribe,\r\n    display: (msg) => {\r\n      clearTimeout(timeout);                    // clear prior timeout (if any)\r\n      set(msg);                                 // display current msg\r\n      timeout = setTimeout(()=> set(''), 5000); // clear msg in 5 seconds\r\n    },\r\n\t};\r\n}\r\n\r\n// our alert\r\n// ... a Svelte store\r\nconst alert = createAlert();\r\nexport default alert;\r\n","const DEVICE_ID = 'deviceId';\r\n\r\n/********************************************************************************\r\n * Return a \"simulated\" deviceId for this client app.  This is a\r\n * persistent hash, retained in localStorage.  As a result, this same\r\n * deviceId is shared across all instances of the visualize-it app\r\n * running in the same browser instance (i.e. multiple browser\r\n * windows).\r\n *\r\n * RETURN: deviceId\r\n *********************************************************************************/\r\nexport function getDeviceId() {\r\n  let deviceId = localStorage.getItem(DEVICE_ID);\r\n  if (!deviceId) {\r\n    deviceId = crypto.randomUUID();\r\n    localStorage.setItem(DEVICE_ID, deviceId);\r\n  }\r\n  return deviceId;\r\n}\r\n\r\n/********************************************************************************\r\n * Reset the \"simulated\" deviceId for this client app.  This is\r\n * initiated through a server directive in the sign-out process,\r\n * as a preventative measure to safeguard ID theft.\r\n * \r\n * In essence this minimizes deviceId theft, because the deviceId\r\n * changes constantly.\r\n *\r\n * RETURN: deviceId (newly generated)\r\n *********************************************************************************/\r\nexport function resetDeviceId() {\r\n  localStorage.removeItem(DEVICE_ID);\r\n  return getDeviceId();\r\n}\r\n\r\n// NOTE: If a user should clear this localStorage item, any prior app\r\n//       instances will be considered to be running on a different\r\n//       device.  It technically still works, with that caveat.\r\n\r\n// NOTE: Encryption of this item would not alleviate hacker use\r\n//       BECAUSE a hacker can still use the encrypted value \"as is\".\r\n","// taken from: https://github.com/flexdinesh/browser-or-node\r\nconst inBrowser =\r\n  typeof window !== \"undefined\" &&\r\n  typeof window.document !== \"undefined\";\r\n\r\nconst inNode =\r\n  typeof process !== \"undefined\" &&\r\n  process.versions != null &&\r\n  process.versions.node != null;\r\n\r\nexport {inBrowser, inNode};\r\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","import {inBrowser} from '../runningIn';\r\nimport debug from 'debug'; // keep this private for proper encapsolation :-)\r\n\r\n// our cache of logs\r\n// ... optimizing functional logging probes (that are re-created on each function invocation)\r\nconst _cachedLogs = {}; // KEY: namespace, VALUE: log\r\n\r\nconst log = logger('vit:core:logger'); // talk about eating our own dog food :-)\r\n\r\n// SEE: README.md for full documentation\r\nexport default function logger(namespace) {\r\n\r\n  // short-circut request if already created\r\n  // ... optimizing functional logging probes (that are re-created on each function invocation)\r\n  if (_cachedLogs[namespace]) {\r\n    log(`re-using log with namespace: '${namespace}'`);\r\n    return _cachedLogs[namespace];\r\n  }\r\n\r\n  // 1st logger: normal expected logger (returned in our function)\r\n  //             Sample namespace: 'myProj:myModule:myFunct'\r\n  const rtnLog = _cachedLogs[namespace] = debug(namespace);\r\n\r\n  // 2nd logger: verbose (exposed via log.v -or- log.verbose)\r\n  //             Sample namespace: 'myProj-v:myModule:myFunct'\r\n  const colonIndx = namespace.indexOf(':');\r\n  const verboseNameSpace = colonIndx === -1 ? `v-${namespace}` : namespace.substring(0, colonIndx) + '-v' + namespace.substring(colonIndx);\r\n  const verbose = debug(verboseNameSpace);\r\n  rtnLog.verbose = rtnLog.v = verbose;\r\n\r\n  // 3rd logger: force (exposed via log.f -or- log.force)\r\n  //             Sample namespace: 'myProj:myModule:myFunct' <<< same as original\r\n  const force = debug(namespace);\r\n  force.enabled = true; // always enabled\r\n  // prefix msg with 'IMPORTANT: ' so it is distinguished from normal logs \r\n  // ... user may wonder why it is appearing when filter is disabled\r\n  const embellished = (msg, ...rest) => force(`IMPORTANT: ${msg}`, ...rest);\r\n  rtnLog.force = rtnLog.f = embellished;\r\n  // CRUDE TEST to insure ...rest params pass-through correctly (un-comment to see)\r\n  // rtnLog.f('test forced log obj: %O, num: %d', {name: 'Kevin', age: 99}, 1979)\r\n\r\n  // that's all folks\r\n  return rtnLog;\r\n}\r\n\r\n// retain the currentLogFilters for this process\r\n// ... initialized from EITHER:\r\n//     - localStorage.debug (for client browser)\r\n//       OR\r\n//     - DEBUG env var (for node)\r\n//     NOTE: We have to initialize this ourselves, because debug lib has NO mechanism to access the initial LogFilter :-(\r\nlet _currentLogFilters = inBrowser ? localStorage.getItem('debug') || '' : process.env.DEBUG || '';\r\n\r\nlog.f(`our currentLogFilters: '${_currentLogFilters}'`);\r\n\r\n// is the log filter enabled for the given nameSpace\r\n// RETURNS boolean\r\n//         should consistently return SAME as log.enabled property (of same nameSpace)\r\nlogger.isLogFilterEnabled = function(nameSpace) {\r\n  // simple layer on top of ...\r\n  return debug.enabled(nameSpace);\r\n}\r\n\r\n// alter our global log filter\r\n// RETURNS void\r\nlogger.setLogFilters = function (filterStr) {\r\n  _currentLogFilters = filterStr;\r\n  debug.enable(filterStr); // I tested debug.enable(filterStr) and it ALWAYS returns void (i.e. undefined) IN ALL CASES (even with nothing passed in)\r\n}\r\n\r\n// clear our global log filter\r\n// RETURNS string: priorFilter\r\nlogger.clearLogFilters = function() {\r\n  return _currentLogFilters = debug.disable(); // ... simple layer on top of\r\n}\r\n\r\n// return the current global log filter\r\n// RETURNS string: filterStr\r\nlogger.currentLogFilters = function() {\r\n  return _currentLogFilters;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//***\r\n//*** FOLLOWING TESTS are quick-and-dirty ... TEMPORARLY un-comment appropriate sections to VISUALIZE the logging results\r\n//***\r\n\r\n//***\r\n//*** SIMPLE test to determine if EXPLICIT log.enabled setting CONFLICTS with dynamic filtering using debug.enable(filter)\r\n//***\r\n\r\n// BOTTOM LINE: EXPLICITLY SETTING log.enabled = true/false changes it forever (i.e. dynamic Log Filtering NEVER impacts this probe again)\r\n// const logEE = logger('mpj:ExplicitlyEnabled');\r\n// logEE.enabled = true;                   // once we explicitly enable a log, what does that mean for dynamic filtering using debug.enable(filter)\r\n// debug.enable('-mpj:ExplicitlyEnabled'); // set filter to TURN OFF this entry ... no effect BECAUSE was explicitly enabled\r\n// function testExplicitlyEnabled() {\r\n//   logEE.f('BEFORE logEE');\r\n//   logEE('here is an ExplicitlyEnabled logging probe');\r\n//   logEE.f('AFTER logEE');\r\n// }\r\n// testExplicitlyEnabled(); // also invoke this after LogFilters change\r\n\r\n\r\n//***\r\n//*** SIMPLE test of filtering logger\r\n//***\r\n\r\n// function testLoggingFilter() {\r\n//   const log = logger('mpj:logger'); // NOTE: mpj (My Project) is a sample rendition of our library name (as an example)\r\n// \r\n//   function testFilter(test, filter, expecting, desc) {\r\n//     console.log(`\r\n// \r\n// Test:      ${test}\r\n// Filter:    '${filter}'\r\n// Expecting: ${expecting}\r\n// Desc:      ${desc}`);\r\n// \r\n//     // enable our logging filter (per the test directive)\r\n//     debug.enable(filter);\r\n// \r\n//     // run canned tests on given filter\r\n//     log('1: logger test');\r\n//     log.f('1f: logger test FORCED LOG');\r\n//     log.v('1v: logger test VERBOSE');\r\n//     const testLog = () => { // function testLog() {\r\n//       const log = logger('mpj:logger:testLog'); // JS: you CAN re-declare log in function scope ... EVEN in arrow functions :-)\r\n//       log('2: in testLog()');\r\n//       log.f('2f: in testLog()');\r\n//       log.v('2v: in testLog()');\r\n//     }\r\n//     testLog();\r\n//   }\r\n// \r\n//   // drive various tests\r\n//   console.log('\\n\\n**************************\\nSTART: testLoggingFilter()');\r\n// \r\n//   testFilter('LIBRARY: show mpj library logs (regular and verbose)',\r\n//              'mpj*',\r\n//              '1 1f 1v 2 2f 2v',\r\n//              'NOT  COMMON - at the library level the number of logs could overwhelm you (use to see all, and then refocus');\r\n//   testFilter('LIBRARY: show mpj library logs (regular NOT verbose)',\r\n//              'mpj:*',\r\n//              '1 1f    2 2f',\r\n//              'COMMON - although still a lot of logs (at the library level)');\r\n//   testFilter('LIBRARY: show mpj library logs (verbose NOT regular)',\r\n//              'mpj-v*',\r\n//              '  1f 1v   2f 2v',\r\n//              'NOT  COMMON - typically your want regular to supplement verbose');\r\n// \r\n//   testFilter('TYPO: show nothing because of TYPO',\r\n//              'mpj:Logger*',\r\n//              '  1f      2f',\r\n//              'shows result of a typo (remember this is case sensitive)');\r\n// \r\n//   testFilter('MODULE: show mpj logger module logs (regular, NOT verbose)',\r\n//              'mpj:logger*',\r\n//              '1 1f    2 2f',\r\n//              'COMMON - this lets you focus on a given module (depending on how big the module, can still be a lot)');\r\n//   testFilter('MODULE: show mpj logger module logs (verbose, NOT regular)',\r\n//              'mpj-v:logger*',\r\n//              '  1f 1v   2f 2v',\r\n//              'NOT  COMMON - typically your want regular to supplement verbose');\r\n//   testFilter('MODULE: show mpj logger module logs (verbose, and regular)',\r\n//              'mpj*:logger*',\r\n//              '1 1f 1v 2 2f 2v',\r\n//              'COMMON - good to see all logs coming out of a module (regular and verbose)');\r\n// \r\n//   testFilter('MODULE/FUNCT: show mpj logger function logs (regular, NOT verbose)',\r\n//              'mpj:logger:testLog*',\r\n//              '  1f    2 2f',\r\n//              \"VERY COMMON - this lets you focus on a given module's function\");\r\n//   testFilter('MODULE/FUNCT: show mpj logger function logs (verbose, NOT regular)',\r\n//              'mpj-v:logger:testLog*',\r\n//              '  1f      2f 2v',\r\n//              \"NOT  COMMON - typically your want regular to supplement verbose\");\r\n//   testFilter('MODULE/FUNCT: show mpj logger function logs (verbose, and regular)',\r\n//              'mpj*:logger:testLog*',\r\n//              '  1f    2 2f 2v',\r\n//              \"VERY COMMON - good to see all logs coming out of a module's function (regular and verbose)\");\r\n// \r\n//   console.log('\\n\\nEND: testLoggingFilter()\\n************************\\n\\n');\r\n// }\r\n// testLoggingFilter();\r\n\r\n\r\n//***\r\n//*** Test logging probe overhead -and- show technique to minimize it when disabled\r\n//***\r\n\r\n// debug.enable('mpj:logger:testLogOverhead*'); // disable this verbose log\r\n// function testLogOverhead() {\r\n//   const log = logger('mpj:logger:testLogOverhead');\r\n// \r\n//   let invokeCount = 0;\r\n// \r\n//   // Test 1\r\n//   log('Test 1: determine if log expression is executed EVEN when log is filtered out');\r\n//   log  (`regular log ... invokeCount: ${++invokeCount}`);\r\n//   log.f(`forced log  ... invokeCount: ${++invokeCount}`);\r\n//   log.v(`verbose log ... invokeCount: ${++invokeCount}`); // this log is disabled, yet it still bumps the counter!\r\n//   log(`incremented three times in above logs (regular/forces/verbose): invokeCount ${invokeCount}`);\r\n// \r\n//   // Test 2:\r\n//   log('Test 2: prevent \"filtered out\" logs from even executing (for high-overhead log expressions)');\r\n//   // SHOW technique to minimize logging overhead when disabled\r\n//   log.v.enabled && log.v(`log NOT emitted and high-overhead expressin NOT invoked ... invokeCount: ${++invokeCount}`);\r\n//   log(`incremented one more time in log that protects execution ... should be the same count as before: invokeCount ${invokeCount}`);\r\n// }\r\n// testLogOverhead();\r\n\r\n//***\r\n//*** Test logging formatters\r\n//***\r\n\r\n// debug.enable('mpj:logger:testFormatters'); // enable this filter\r\n// function testFormatters() {\r\n//   const log = logger('mpj:logger:testFormatters');\r\n// \r\n//   const myObj = {\r\n//     name: {\r\n//       first: 'Kevin',\r\n//       last:  'Bridges',\r\n//     },\r\n//     age: 21,\r\n//   };\r\n//   // works really well in browser (with dynamic expandable objects)\r\n//   // even works in server (just %o/%O are ALWAYS single-line)\r\n//   // only querk is I see no diff between %o and %O (is supposed to be multi-line but NOT)\r\n//   // ... %o/%O works really well in browser, as it is an expandable object\r\n//   log('Test formatters ... an object: %O, a string \"%s\", a number %d ... I hope it works', myObj, 'Kevin', 21);\r\n// }\r\n// testFormatters();\r\n","//***\r\n//*** Reusable socket.io utilities\r\n//***\r\n\r\nimport logger from './logger';\r\nconst  log = logger('vit:core:socketIOUtils'); \r\n\r\n/**\r\n * socketActFn(): Emits a re-usable function (with access to the\r\n *                supplied resolve/reject promise artifacts) that\r\n *                provides a standard way to acknowledge a return\r\n *                value (and errors) within an asynchronous promise\r\n *                wrapping a socket.io event (i.e. implementing an\r\n *                asynchronous request/response API)\r\n *\r\n * return:        function ack({value, errMsg, userMsg}): void\r\n *                - all named params are mutually exclusive\r\n *                  * value:   emits the supplied value\r\n *                  * errMsg:  throws an \"unexpected\" error\r\n *                  * userMsg: throws an \"expected\" error (with an embedded userMsg)\r\n *                - when ALL params are omitted:\r\n *                  * a void value is emitted (i.e. undefined)\r\n *\r\n * USAGE:         CLIENT (sign-in sample):\r\n *                  export function signIn(userId, pass) {\r\n *                    // promise wrapper of our socket message protocol\r\n *                    return new Promise((resolve, reject) => {\r\n *                      // issue the 'sign-in' socket request to our server\r\n *                      socket.emit('sign-in', userId, pass, socketAckFn(resolve, reject));\r\n *                    });\r\n *                  }\r\n *                SERVER (sign-in sample):\r\n *                  socket.on('sign-in', (userId, pass, ack) => {\r\n *                    ... snip snip (app-specific logic)\r\n *                    \r\n *                    // report expected user msg\r\n *                    return ack({userMsg: 'password incorrect',\r\n *                                errMsg:  'User Error in sign-in process'});\r\n *                    \r\n *                    // report unexpected error\r\n *                    return ack({errMsg: 'a bad thing happened'});\r\n *                    \r\n *                    // communicate successful value\r\n *                    return ack({value: myResult});\r\n *                    \r\n *                    // communicate void value\r\n *                    return ack();\r\n *                  });\r\n * \r\n * NOTE:          This utility REQUIRES the activation of ErrorExtensionPolyfill.js\r\n *                (see Error#defineUserMsg() usage - below).\r\n * \r\n * NOTE:          The attemptingTo param is OPTIONAL, and is NOT as critical as it is for socketAckFn_timeout().\r\n *                It is possible that no additional context is needed :-)\r\n *\r\n */\r\nexport function socketAckFn(resolve, reject, attemptingTo) {\r\n\r\n  // confirm that ErrorExtensionPolyfill has been enabled\r\n  if (!Error.prototype.defineUserMsg) {\r\n    throw new Error('*** ERROR *** socketAckFn() requires the activation of ErrorExtensionPolyfill.js');\r\n  }\r\n\r\n  // emit our socket acknowledgment function\r\n  return ({value=undefined, errMsg=undefined, userMsg=undefined}={}) => {\r\n    commonPayloadHandler(resolve, reject, value, errMsg, userMsg, attemptingTo);\r\n  }\r\n}\r\n\r\n\r\n// socketAckFn() WITH TIMEOUT:\r\n//  - When timeout is used, socket.io introduces an additional pipe (so to speak)\r\n//    where the payload parameter is passed as the 2nd param (timeout Error object as the 1st param)\r\n//  - SOOO: the returned function is identical to socketAckFn() EXCEPT it introduces a new 1st param: err\r\n//  - NOTE: the attemptingTo param is REQUIRED, because it is critical to add context to the timeout error!\r\n//          Otherwise you would not know WHAT timed-out :-)\r\nexport function socketAckFn_timeout(resolve, reject, attemptingTo) {\r\n\r\n  // confirm that ErrorExtensionPolyfill has been enabled\r\n  if (!Error.prototype.defineUserMsg) {\r\n    // AI: really validation assert\r\n    throw new Error('*** ERROR *** socketAckFn_timeout() requires the activation of ErrorExtensionPolyfill.js');\r\n  }\r\n\r\n  // confirm that attemptingTo is supplied (critical to make sense out of timeout errors)\r\n  if (!attemptingTo) {\r\n    // AI: really validation assert\r\n    throw new Error('*** ERROR *** socketAckFn_timeout() requires the attemptingTo param (critical to make sense out of timeout errors)');\r\n  }\r\n\r\n  // emit our socket acknowledgment function\r\n  return (err, {value=undefined, errMsg=undefined, userMsg=undefined}={}) => {\r\n    // log(`IN socketAck_timeout(err, {value,errMsg,userMsg}): `, {err, value, errMsg, userMsg});\r\n\r\n    // handle timeout errors\r\n    if (err) {\r\n      if (err.defineAttemptingToMsg) { // ... for Error objs, add context directly to Error object\r\n        err.defineAttemptingToMsg(attemptingTo);\r\n      }\r\n      else {                           // ... for anything else, add context by coercing err to simple string\r\n        err = err + ` ... attempting to: ${attemptingTo}`;\r\n      }\r\n      reject(err);\r\n    }\r\n\r\n    // handle our normal app-specific payload (can be errors too)\r\n    else {\r\n      commonPayloadHandler(resolve, reject, value, errMsg, userMsg, attemptingTo);\r\n    }\r\n  }\r\n}\r\n\r\nfunction commonPayloadHandler(resolve, reject, value, errMsg, userMsg, attemptingTo) {\r\n  // emit an \"expected\" error (with .defineUserMsg())\r\n  // ... in addition to userMsg, this will supplement any supplied errMsg\r\n  if (userMsg) {\r\n    const err = new Error(errMsg || 'Expected User Defined Condition').defineUserMsg(userMsg);\r\n    if (attemptingTo) {\r\n      err.defineAttemptingToMsg(attemptingTo);\r\n    }\r\n    reject(err);\r\n  }\r\n  // emit an \"unexpected\" error\r\n  else if (errMsg) {\r\n    const err = new Error(errMsg);\r\n    if (attemptingTo) {\r\n      err.defineAttemptingToMsg(attemptingTo);\r\n    }\r\n    reject(err);\r\n  }\r\n  // emit a successful value\r\n  // ... can be an undefined value (for void)\r\n  else {\r\n    resolve(value);\r\n  }\r\n}\r\n","//***\r\n//*** the current app's user (always available - even when NOT signed in)\r\n//***\r\n\r\nimport {writable, get} from 'svelte/store';\r\nimport alert           from '../util/alert';\r\nimport {getDeviceId,\r\n        resetDeviceId} from './device';\r\nimport {socketAckFn}   from '../core/util/socketIOUtils';\r\nimport logger          from '../core/util/logger';\r\nconst  log = logger('vit:client:user');\r\n\r\n// AI: these notes need updating (I think)\r\n// NOTE: ALL user state is gleaned from our server\r\n//       - EITHER via a direct sign-in process\r\n//       - OR our preAuthenticate handshake protocol\r\n// NOTE: For auto-authentication, this state is seeded from localStorage (indirectly)\r\n//       - localStorage items:\r\n//         * deviceId:  string\r\n//         * token:     encrypted string\r\n//       - HOWEVER we DO NOT seed this localStorage state directly here\r\n//         * It is an \"indirect process\"\r\n//         * PASSING through our server\r\n//           ... through our preAuthenticate handshake protocol\r\n//         * BECAUSE all user state MUST be in-sync with our server AI: discuss dynamics\r\n\r\n// setup our initial store value\r\nconst initialStoreValue = {\r\n\r\n  // *******************\r\n  // *** value state ***\r\n  // *******************\r\n\r\n  // when authenticated (signed-in) ... ALWAYS populated from verified server (indirectly gleaned from localStorage on auto-authentication)\r\n  email: '', // email (user authentication ID)\r\n  name:  '', // name of user (from server profile)\r\n\r\n  enablement: { // various enablements (from server)\r\n    admin: false,\r\n  },\r\n\r\n  // for registered guests (that are NOT signed-in) ...\r\n  guestName: '',\r\n\r\n  // during sign-in process, waiting for verification to occur\r\n  // ... technically contains the email that is pending verification\r\n  // ... can be used as a boolean too (empty string yields falsy)\r\n  inSignInVerificationPhase: '',\r\n\r\n  // ***********************************************\r\n  // *** value-added methods of our value object ***\r\n  // ***********************************************\r\n\r\n  // is user an authenticated signed-in user\r\n  //   true:  user is signed-in\r\n  //   false: user is a guest (NOT signed-in)\r\n  isSignedIn() {\r\n    return !!this.email;\r\n  },\r\n\r\n  // is user a guest?\r\n  //   true:  user is a guest (NOT signed-in)\r\n  //   false: user is signed-in\r\n  isGuest() {\r\n    return !this.isSignedIn();\r\n  },\r\n\r\n  // is user registered (either signed-in or registered as a guest)\r\n  isRegistered() {\r\n    return this.isSignedIn() || !!this.guestName;\r\n  },\r\n\r\n  // return human interpretable user name\r\n  // ... conveniently reason over various conditions\r\n  // EX: - \"Kevin\" ... for authenticated signed-in user\r\n  //     - \"Petree (Guest)\" ... for registered guest\r\n  //     - \"Guest\" ... for unregistered guest\r\n  // AI: alternate: user/visible/clear/shown/revealed/convey/divulge/disclosed\r\n  getUserName() {\r\n    if (this.isSignedIn()) {   // signed-in user\r\n      return this.name;\r\n    }\r\n    else if (this.guestName) { // registered guest user\r\n      return `${this.guestName} (Guest)`;\r\n    }\r\n    else {                      // un-registered user\r\n      return 'Guest';\r\n    }\r\n  },\r\n};\r\n\r\n// internal function that creates our one-and-only user custom store\r\n// ... this same object instance will reflectively change content over time\r\n//     with signIn(), signOut(), etc.\r\nfunction createUser() {\r\n\r\n\tconst {subscribe, set, update} = writable(initialStoreValue);\r\n\r\n  // our user custom store\r\n\treturn {\r\n\t\tsubscribe,\r\n\r\n    // register a guest user\r\n    // RETURN: void <promise>\r\n    // THROW:  Error with optional e.userMsg (when e.isExpected()) for expected user error (ex: invalid email)\r\n    registerGuest: async (guestName) => {\r\n      log(`registerGuest with guestName: ${guestName}`);\r\n\r\n      // request our server to process request\r\n      // ... allow Error to pass-through to client\r\n      //     via RegisterGuest.svelte invoker ... ex: invalid guest name\r\n      const {userState, token} = await registerGuest(guestName);\r\n\r\n      // NOTE: subsequent steps represent successful sign-in (i.e. NO Error was thrown)\r\n      log(`successful guest registration with guestName: ${userState.guestName} ... userState: `, userState);\r\n\r\n      // reflexively update our custom store to reflect this successful sign-in\r\n      update(state => ({...state, ...userState}));\r\n\r\n      // retain sign-in token (in support of auto-authentication)\r\n      localStorage.setItem('token', token);\r\n\r\n      // that's all folks\r\n      alert.display(`Welcome ${get(user).getUserName()} :-)`);\r\n    },\r\n\r\n    // sign-in user (Phase I - request email verification to be sent)\r\n    // RETURN: void <promise>\r\n    // THROW:  Error with optional e.userMsg (when e.isExpected()) for expected user error (ex: invalid email)\r\n    signIn: async (email) => {\r\n      log(`signIn user with email: ${email}`);\r\n\r\n      // request our server to process request\r\n      // ... allow Error to pass-through to client\r\n      //     via SignIn.svelte invoker ... ex: invalid email\r\n      await signIn(email);\r\n\r\n      // reflexively update our custom store to reflect that we are inSignInVerificationPhase\r\n      update(state => ({...state, inSignInVerificationPhase: email}));\r\n\r\n      // that's all folks\r\n      alert.display(`A sign-in verification code has been sent to your email: ${email}`);\r\n    },\r\n\r\n    // sign-in-verification of user (Phase II - verify email verification code)\r\n    // RETURN: void <promise>\r\n    // THROW:  Error with optional e.userMsg (when e.isExpected()) for expected user error (ex: invalid email)\r\n    signInVerification: async (verificationCode) => {\r\n      log(`signInVerification of user's email`);\r\n\r\n      // request our server to process request\r\n      // ... allow Error to pass-through to client\r\n      //     via SignIn.svelte invoker ... ex: invalid email\r\n      const {userState, token} = await signInVerification(verificationCode);\r\n\r\n      // NOTE: subsequent steps represent successful sign-in (i.e. NO Error was thrown)\r\n      log(`successful signInVerification user with email: ${userState.email} ... userState: `, userState);\r\n\r\n      // reflexively update our custom store to reflect this successful sign-in\r\n      update(state => ({...state, ...userState, inSignInVerificationPhase: ''}));\r\n\r\n      // retain sign-in token (in support of auto-authentication)\r\n      localStorage.setItem('token', token);\r\n\r\n      // that's all folks\r\n      alert.display(`Welcome ${get(user).getUserName()} :-)`);\r\n    },\r\n\r\n    // resend code for sign-in-verification of user\r\n    // RETURN: void <promise>\r\n    // THROW:  Error with optional e.userMsg (when e.isExpected()) for expected user error (ex: hmmm)\r\n    signInVerificationResendCode: async () => {\r\n      log(`resend code for signInVerification of user's email`);\r\n\r\n      // request our server to process request\r\n      // ... allow Error to pass-through to client\r\n      //     via SignIn.svelte invoker ... ex: hmmm\r\n      await signInVerificationResendCode();\r\n\r\n      // NOTE: subsequent steps represent successful code resend (i.e. NO Error was thrown)\r\n      log(`successful resend of signInVerification code`);\r\n\r\n      // that's all folks\r\n      alert.display(`A sign-in verification code has been RE-SENT to your email: ${get(user).inSignInVerificationPhase}`);\r\n    },\r\n\r\n    // cancel sign-in verification\r\n    // RETURN: void <promise>\r\n    // THROW:  Error with optional e.userMsg (when e.isExpected()) for expected user error (ex: not signed in)\r\n    signInVerificationCancel: () => {\r\n      // reflexively update our custom store to reflect that we are NO LONGER inSignInVerificationPhase\r\n      update(state => ({...state, inSignInVerificationPhase: ''}));\r\n\r\n      // NOTE: Currently we do NOT notify the server of this\r\n      //       - we use the KISS principle\r\n      //       - the important thing is the client is reset\r\n      //       - the server will automatically expire this verification in a short time\r\n      //         * likewise, that expiration does NOT sync with the client\r\n      //           ... the client will discover this when they attempt to verify,\r\n      //               and the user can explicitly cancel the operation.\r\n    },\r\n\r\n    // sign-out user\r\n    // RETURN: void <promise>\r\n    // THROW:  Error with optional e.userMsg (when e.isExpected()) for expected user error (ex: not signed in)\r\n    signOut: async () => {\r\n      log(`signOut user`);\r\n\r\n      // request our server to process request\r\n      // ... allow Error to pass-through to client\r\n      //     via Router.svelte invoker ... ex: not signed in\r\n      const {userState, token} = await signOut();\r\n\r\n      // NOTE: subsequent steps represent successful sign-out (i.e. NO Error was thrown)\r\n      log(`successful signOut user ... userState: `, userState);\r\n\r\n      // reflexively update our custom store to reflect this successful sign-out\r\n      update(state => ({...state, ...userState}));\r\n\r\n      // retain sign-out token (in support of auto-authentication)\r\n      // ... even though we are signed-out, the token will contain guestName (optional) and deviceId\r\n      localStorage.setItem('token', token);\r\n\r\n      // that's all folks\r\n      alert.display(`You have now been signed out - you are now a guest ... ${get(user).getUserName()}.`);\r\n    },\r\n\r\n    // sync user changes from another app instance with the same device/window (browser instance)\r\n    userAuthChanged: (userState) => {\r\n      // reflexively update our custom store to reflect these changes\r\n      update(state => ({...state, ...userState}));\r\n\r\n      // that's all folks\r\n      alert.display(`Your user identity has been synced from another app instance in a separate browser window.`);\r\n    },\r\n\r\n    // sync user changes from 'pre-authentication' event\r\n    preAuthComplete: (userState, userMsg) => {\r\n      // reflexively update our custom store to reflect these changes\r\n      update(state => ({...state, ...userState}));\r\n\r\n      // display welcome message\r\n      alert.display(userMsg);\r\n    },\r\n\r\n\t};\r\n}\r\n\r\n// our current active user\r\n// ... a Svelte custom store\r\n// ... a SINGLETON (for this client session)\r\nconst user = createUser();\r\nexport default user;\r\n\r\n\r\n//***\r\n//*** our bindings to the server\r\n//***\r\n\r\nlet socket;  // our active socket (to be used in this module)\r\n\r\nexport function registerUserSocketHandlers(_socket) {\r\n  log(`registerUserSocketHandlers(socket)`);\r\n\r\n  // expose socket to this module\r\n  socket = _socket;\r\n\r\n  // service the 'get-device-id' request (from the server)\r\n  // RETURN (via ack): deviceId <string>\r\n  socket.on('get-device-id', (ack) => {\r\n    return ack({value: getDeviceId()});\r\n  });\r\n\r\n  // service the 'reset-device-id' request (from the server)\r\n  // RETURN (via ack): deviceId <string>\r\n  socket.on('reset-device-id', (ack) => {\r\n    return ack({value: resetDeviceId()});\r\n  });\r\n\r\n  // service the 'get-auth-token' request (from the server)\r\n  // RETURN (via ack): token <string>\r\n  socket.on('get-auth-token', (ack) => {\r\n    return ack({value: localStorage.getItem('token')});\r\n  });\r\n\r\n  // service the 'pre-authentication' event (from the server)\r\n  // ... this happens on app initialization\r\n  // RETURN void ... this is a push event only - no response is possible\r\n  socket.on('pre-authentication', (userState, userMsg) => {\r\n    user.preAuthComplete(userState, userMsg);\r\n  });\r\n\r\n  // service the 'user-auth-changed' broadcast notification (from the server)\r\n  // ... this happens when the user credentials change from another app instance\r\n  //     within the same device (browser instance)\r\n  // RETURN void ... this is a broadcast event - no response is possible\r\n  socket.on('user-auth-changed', (userState) => {\r\n    user.userAuthChanged(userState);\r\n  });\r\n\r\n  // service the 'set-temp-entry' request (from the server)\r\n  // RETURN (via ack): token <string>\r\n  socket.on('set-temp-entry', (key, val, ack) => {\r\n    localStorage.setItem(key, val);\r\n    // clear temporary entry after a short time:\r\n    // - 3 secs\r\n    //   * long enough\r\n    //     - to NOT conflict with the server timeout for this process (2 secs)\r\n    //   * short enough to\r\n    //     - avoid clean-up not happening (if dev client is restarted in rapid succession)\r\n    setTimeout(() => {\r\n      localStorage.removeItem(key);\r\n    }, 3*1000);\r\n    return ack();\r\n  });\r\n\r\n  // service the 'get-temp-entry' request (from the server)\r\n  // RETURN (via ack): token <string>\r\n  socket.on('get-temp-entry', (key, ack) => {\r\n    let value = localStorage.getItem(key);\r\n\r\n    // if we have a value, we are good-to-go\r\n    if (value) {\r\n      return ack({value});\r\n    }\r\n\r\n    // There are rare/sporadic cases where there is some timing issue\r\n    // - PRESUMABLY with localStorage - where it needs a bit of time to stabilize\r\n    // - the server process has been checked and double checked - confirming\r\n    //   it is properly blocking (between 'set-temp-entry' and 'get-temp-entry')\r\n    // - I'm not exactly sure what the problem is (the code seems to be fine)\r\n    // This was typically seen (before this fix/workaround) \r\n    // - with server restarts (or client restarts - on dev client)\r\n    // - when multiple windows were running the app\r\n    // BEFORE we return a null, which is a big deal (indicating identity theft)\r\n    // we give it a bit of time to settle down:\r\n    // - 20 mils:\r\n    //   * long enough\r\n    //     - to be effective (in my tests)\r\n    //   * short enough to work within the confines of:\r\n    //     - user wait time\r\n    //     - the server timeout for this request (2 secs)\r\n    //     - the clearing of \"temp\" localStorage entries in 'set-temp-entry' (above - 3 secs)\r\n    setTimeout(() => {\r\n      value = localStorage.getItem(key);\r\n      value && log.f(`'get-temp-entry' FALSE-POSITIVE identity theft AVOIDED ... for key: '${key}', returning: '${value}'`);\r\n      return ack({value});\r\n    }, 20);\r\n  });\r\n}\r\n\r\n// convenience registerGuest utility wrapping the socket protocol with an async request/response\r\n// RETURN: void (PROMISE):\r\n// THROW:  Error with optional e.userMsg (when e.isExpected()) for expected user error (ex: invalid guestName)\r\nfunction registerGuest(guestName) {\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'register-guest' socket request to our server\r\n    socket.emit('register-guest', guestName, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n\r\n// convenience signIn utility wrapping the socket protocol with an async request/response\r\n// RETURN: void (PROMISE):\r\n// THROW:  Error with optional e.userMsg (when e.isExpected()) for expected user error (ex: invalid email)\r\nfunction signIn(email) {\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'sign-in' socket request to our server\r\n    socket.emit('sign-in', email, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n\r\n// convenience signInVerification utility wrapping the socket protocol with an async request/response\r\n// RETURN: auth structure (PROMISE):\r\n//           {\r\n//             email: string,\r\n//             name:  string,\r\n//             enablement: {\r\n//               admin: boolean,\r\n//             },\r\n//           }\r\n// THROW:  Error with optional e.userMsg (when e.isExpected()) for expected user error (ex: invalid verification code)\r\nfunction signInVerification(verificationCode) {\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'sign-in-verification' socket request to our server\r\n    socket.emit('sign-in-verification', verificationCode, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n\r\n// convenience signInVerificationResendCode utility wrapping the socket protocol with an async request/response\r\n// RETURN: void (PROMISE):\r\n// THROW:  Error with optional e.userMsg (when e.isExpected()) for expected user error (ex: invalid verification code)\r\nfunction signInVerificationResendCode() {\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'sign-in-verification-resend-code' socket request to our server\r\n    socket.emit('sign-in-verification-resend-code', socketAckFn(resolve, reject));\r\n  });\r\n}\r\n\r\n// convenience signOut utility wrapping the socket protocol with an async request/response\r\n// RETURN: auth structure (PROMISE):\r\n//           {\r\n//             email: '',\r\n//             name:  '',\r\n//             enablement: {\r\n//               admin: false,\r\n//             },\r\n//           }\r\n// THROW:  Error with optional e.userMsg (when e.isExpected()) for expected user error (ex: not signed in)\r\nfunction signOut() {\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'sign-out' socket request to our server\r\n    socket.emit('sign-out', socketAckFn(resolve, reject));\r\n  });\r\n}\r\n","// AI: really need to expose custability\r\n//     - simplify and invoke beep() directly WITH named params (setting up AudioContext ONCE)\r\n//     - consider different approach\r\n//       * in production deploymen, I'm getting following error:\r\n//         beep.js:35 The AudioContext was not allowed to start. \r\n//                    It must be resumed (or created) after a user gesture on the page.\r\n//                      https://goo.gl/7K7WLu\r\n//                      TRACE: beep.js:35 (at constructor)\r\n//                             beep.js:89\r\n//       * consider different approach (such as Audio object)\r\n//         - How do I make JavaScript beep?\r\n//           ... https://stackoverflow.com/questions/879152/how-do-i-make-javascript-beep\r\n//         - Sound effects in JavaScript / HTML5\r\n//           ... https://stackoverflow.com/questions/1933969/sound-effects-in-javascript-html5/1934325#1934325\r\n\r\n// A simple utility to emit a beep in the browser\r\n// ... see: AudioContext\r\n//     https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\r\n// ... patterned after: \r\n//     https://github.com/kapetan/browser-beep/blob/master/index.js\r\n// ... KJB: Shouldn't be this hard :-(\r\n// USAGE:\r\n//   import beep from './util/beep';\r\n//   ...\r\n//   beep(); -or- beep(2);\r\n\r\nconst FREQUENCY     = 1000;     // ORIGINAL: 440;     // KJB: how high the beep pitch (50: bass guitar, 440: doodle, 840: ding, 1440: too high)\r\nconst INTERVAL      = 250;      // ORIGINAL: 250;     // KJB: time between multiple beeps\r\nconst RAMP_VALUE    = 0.00001;  // ORIGINAL: 0.00001; // KJB: UNSURE - volume (I don't know)\r\nconst RAMP_DURATION = 1;        // ORIGINAL: 1;       // KJB: beep duration (in seconds)\r\n\r\nfunction createBeep(options={}) {\r\n  const AudioCtx = window.AudioContext || window.webkitAudioContext;\r\n\r\n  const audioCtx  = options.context   || new AudioCtx();\r\n  const frequency = options.frequency || FREQUENCY;\r\n  const interval  = options.interval  || INTERVAL;\r\n\r\n  function play() {\r\n    const currentTime = audioCtx.currentTime;\r\n    const osc         = audioCtx.createOscillator();\r\n    const gain        = audioCtx.createGain();\r\n\r\n    gain.gain.value = 0.2; // KJB: volume: 20%\r\n\r\n    osc.connect(gain);\r\n    gain.connect(audioCtx.destination);\r\n\r\n    gain.gain.setValueAtTime(gain.gain.value, currentTime);\r\n    gain.gain.exponentialRampToValueAtTime(RAMP_VALUE, currentTime + RAMP_DURATION);\r\n\r\n    osc.onended = function () {\r\n      gain.disconnect(audioCtx.destination);\r\n      osc.disconnect(gain);\r\n    }\r\n\r\n    osc.type = 'sine';\r\n    osc.frequency.value = frequency;\r\n    osc.start(currentTime);\r\n    osc.stop(currentTime + RAMP_DURATION);\r\n  }\r\n\r\n  // our exposed beep function\r\n  function beep(times=1) {\r\n    function emitSound(num) {\r\n      // play our sound\r\n      play();\r\n      // invoke self multiple times (at proper interval)\r\n      if (++num < times) {\r\n        setTimeout(emitSound, interval, num);\r\n      }\r\n    }\r\n    emitSound(0); // emit sound the FIRST time\r\n  }\r\n\r\n  // KJB: I have NO IDEA what this is, or how it is invoked\r\n  //      ... found nothing in my search :-(\r\n  //      >>> THIS IS A TOTAL BUST ... it does NOTHING except publically promote it\r\n  //          AI: DO NOT DO THIS IN MY REAL IMPLEMENTATION\r\n  beep.destroy = function () {\r\n    if (!options.context) { // KJB: close when context is NOT supplied in options (i.e. when `new AudioCtx()` above)\r\n      audioCtx.close();\r\n    }\r\n  }\r\n\r\n  return beep;\r\n}\r\n\r\nconst beep = createBeep();\r\nexport default beep;\r\n","//***\r\n//*** a chat store, containing private-msgs to another user\r\n//*** ... current support: multi-session with two parties per session\r\n//***\r\n\r\nimport {writable, get} from 'svelte/store';\r\nimport alert      from '../util/alert';\r\nimport beep       from '../util/beep';\r\nimport logger     from '../core/util/logger';\r\nconst  log = logger('vit:client:chat');\r\n\r\n// the store \"session\" structure (one for each session)\r\n// SESSION:\r\n// {\r\n//   otherSocketId: 'aSocketId', // the other-user socketId\r\n//   otherUserName: 'aUserName', // the other-user userName\r\n//   msgs: [                     // all the messages in this session\r\n//     {       // one of many messages\r\n//       when: date,\r\n//       who:  boolean, // true: other-user, false: me\r\n//       msg:  'hello world',\r\n//     },\r\n//     ...\r\n//   ],\r\n// }\r\n\r\n// our initial store value (defining our value methods)\r\nconst initialChat = {\r\n  session: { // SESSION map\r\n    // otherSocketId1: SESSION, // ... one of many sessions BETWEEN self and this \"other\" user\r\n    // otherSocketId2: SESSION, // ... ditto\r\n    // ...\r\n  },\r\n\r\n  //***\r\n  //*** adorned properties (based on SESSION map - above)\r\n  //***\r\n\r\n  sessions: [],    // SESSION[] ... array rendition of SESSION map (sorted by otherUserName)\r\n  isActive: false, // are their active sessions\r\n};\r\n\r\n// internal function that maintains the adorned properties\r\n// RETURN: new chat value object\r\nfunction adorn(sessionMap) {\r\n  const sessions = Object.values(sessionMap) // extract session array\r\n                         .sort((a,b) => a.otherUserName.localeCompare(b.otherUserName)); // sorted by otherUserName\r\n  const isActive = sessions.length > 0;\r\n  return {\r\n    session: sessionMap,\r\n    sessions,\r\n    isActive,\r\n  };\r\n}\r\n\r\nfunction createChat() {\r\n\tconst {subscribe, update} = writable(initialChat);\r\n\r\n\treturn {\r\n\t\tsubscribe,\r\n\r\n    // solicit a private message (initiation)\r\n    solicitPrivateMsg: () => { // ... invoked by: client Easter Egg (see: Router.svelte)\r\n      log(`solicit a private message to server ... emitting socket private-msg-solicit`);\r\n      socket.emit('private-msg-solicit');\r\n      alert.display(`Requesting chat :-)`);\r\n    },\r\n\r\n    // connect our chat with another user\r\n    connect: (otherSocketId, userName, msg) => { // ... invoked by 'private-msg-connect' event (below)\r\n      // default params appropriately\r\n      userName = userName || 'Unknown';\r\n      msg      = msg      || `Hello from ${userName}`;\r\n\r\n      // connect our chat\r\n      log(`connecting chat with: ${userName}, msg: \"${msg}\"`);\r\n      update(state => adorn({...state.session,\r\n                             [otherSocketId]: {\r\n                               ...state.session[otherSocketId], // for good measure (not really needed since we are injecting all properties)\r\n                               otherSocketId,\r\n                               otherUserName: userName,\r\n                               // preserve session content when already active\r\n                               // ... WITH protection (via empty array) when NOT already active\r\n                               msgs: [...(state.session[otherSocketId]?.msgs || []), {when: new Date(), who: true, /* other-user */ msg}],\r\n                             }} ));\r\n      alert.display(`Chat now available with ${userName} (see Chat tab)`);\r\n    },\r\n\r\n    // send a message to the other party of the given session\r\n    sendMsg: (msg, otherSocketId) => {\r\n\r\n      // obtain the designated session that we will be communicating with\r\n      const session = get(chat).session[otherSocketId];\r\n\r\n      // send the message\r\n      log(`sending msg: \"${msg}\" TO: ${session.otherUserName}`);\r\n      //                         TO:                    FROM:\r\n      socket.emit('private-msg', session.otherSocketId, socket.id,  msg);\r\n\r\n      // update this local message in our state\r\n      update(state => adorn({...state.session,\r\n                             [otherSocketId]: {\r\n                               ...state.session[otherSocketId],\r\n                               msgs: [...(state.session[otherSocketId]?.msgs || []), {when: new Date(), who: false, /* me */ msg}],\r\n                             }} ));\r\n    },\r\n\r\n    // receive a message\r\n    receiveMsg: (msg, otherSocketId) => {\r\n\r\n      // obtain the designated session that is communicating with us\r\n      const session = get(chat).session[otherSocketId];\r\n\r\n      log(`receiving msg: \"${msg}\" FROM: ${session.otherUserName}`);\r\n\r\n      // update this message in our state\r\n      update(state => adorn({...state.session,\r\n                             [otherSocketId]: {\r\n                               ...state.session[otherSocketId],\r\n                               msgs: [...(state.session[otherSocketId]?.msgs || []), {when: new Date(), who: true, /* other-user */ msg}],\r\n                             }} ));\r\n\r\n      // notify user new chat message has arrived\r\n      beep();\r\n    },\r\n\r\n    // disconnect chat\r\n    // ... this initiates the disconnect\r\n    disconnect: (otherSocketId) => { // ... invoked by: client chat screen\r\n\r\n      // obtain the designated session to disconnect\r\n      const session = get(chat).session[otherSocketId];\r\n\r\n      log(`disconnect our chat session with ${session.otherUserName}`);\r\n\r\n      // update our state to reflect a disconnect\r\n      // ... remove the session completely\r\n      update(state => {\r\n        const {[otherSocketId]: removedSession, ...rest} = state.session;\r\n        return adorn(rest);\r\n      });\r\n\r\n      // communicate to the other side that we are disconnected\r\n      //                                    SEND-TO        THEIR-OTHER\r\n      socket.emit('private-msg-disconnect', otherSocketId, socket.id);\r\n    },\r\n\r\n    // our chat has been disconnected\r\n    // ... from the other party\r\n    disconnected: (otherSocketId) => {\r\n      log(`our chat session has been disconnected (from the other party)`);\r\n\r\n      // obtain the designated session to disconnect\r\n      const session = get(chat).session[otherSocketId];\r\n\r\n      if (session) { // can be undefined WHEN chat to self\r\n        log(`chat session with ${session.otherUserName} has been disconnected (by them)`);\r\n\r\n        // update our state to reflect a disconnect\r\n        // ... remove the session completely\r\n        update(state => {\r\n          const {[otherSocketId]: removedSession, ...rest} = state.session;\r\n          return adorn(rest);\r\n        });\r\n      }\r\n    },\r\n\t};\r\n}\r\n\r\n// our current active chat\r\n// ... a Svelte store\r\nconst chat = createChat();\r\nexport default chat;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// our active socket (to be used in this module)\r\nlet socket;\r\n\r\nexport function registerChatSocketHandlers(_socket) {\r\n  log('here we are in registerChatSocketHandlers');\r\n\r\n  // expose socket to this module\r\n  socket = _socket;\r\n\r\n  // handle private-msg connection request\r\n  socket.on('private-msg-connect', (otherSocketId, userName) => {\r\n    chat.connect(otherSocketId, userName);\r\n  });\r\n\r\n  // receive private-msg\r\n  // ... receiving BECAUSE we are on the client side\r\n  socket.on('private-msg', (toSocketId, fromSocketId, msg) => {\r\n    chat.receiveMsg(msg, fromSocketId);\r\n  });\r\n\r\n  // handle disconnect request from other side\r\n  socket.on('private-msg-disconnect', (otherSocketId) => {\r\n    chat.disconnected(otherSocketId);\r\n  });\r\n\r\n  // handle generic message from server-2-client\r\n  // ... this is a generic utility ... not really chat related\r\n  socket.on('msg-from-server', (msg, errMsg) => {\r\n    if (errMsg) {\r\n      log.f(errMsg);\r\n    }\r\n    alert.display(msg);\r\n  });\r\n}\r\n","//***\r\n//*** systemIO.js ... WebSocket bindings of visualize-it system (client-side)\r\n//***\r\n\r\nimport {socketAckFn} from '../core/util/socketIOUtils';\r\n\r\nimport logger from '../core/util/logger';\r\nconst  log = logger('vit:client:systemIO'); \r\n\r\nlet socket;  // our active socket (to be used in this module)\r\n\r\nexport function registerSystemSocketHandlers(_socket) {\r\n  log('here we are in registerSystemSocketHandlers');\r\n\r\n  // expose socket to this module\r\n  socket = _socket;\r\n\r\n  //***\r\n  //*** register our system-based client-side event listeners\r\n  //***\r\n\r\n  // NOTE: currently all system-based client-side event listeners are\r\n  //       registered directly in the system store (see system.js)\r\n\r\n}\r\n\r\n// launch/create a system, allowing participants to join (a request/response API)\r\n// ... invoked by host\r\n// ... this is a convenience function wrapping the socket protocol with an async request/response\r\n// RETURN: void ... successful creation of new system\r\n// ERROR:  either a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport function launchSystem(sysId,      // system identifier -and- alias to room (must be unique on server or will error)\r\n                             accessCode, // access key to be able to join system (a lite password)\r\n                             model) {    // our data model (JSON key/value)\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'launch-system' socket request to our server\r\n    socket.emit('launch-system', sysId, accessCode, model, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n\r\n// join a system, by participants other than host (a request/response API)\r\n// ... invoked by non-host\r\n// ... this is a convenience function wrapping the socket protocol with an async request/response\r\n// RETURN: model ... the data model (JSON key/value) of successfully joined system\r\n// ERROR:  may contain a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport function joinSystem(sysId,        // system identifier -and- alias to room (must be unique on server or will error)\r\n                           accessCode) { // access key to be able to join system (a lite password)\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'join-system' socket request to our server\r\n    socket.emit('join-system', sysId, accessCode, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n\r\n// start a system running\r\n// ... invoked by either host or non-host\r\n// ... this is a convenience function wrapping the socket protocol with an async request/response\r\n// RETURN: void\r\n// ERROR:  may contain a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport function runSystem(sysId) { // system identifier\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'run-system' socket request to our server\r\n    socket.emit('run-system', sysId, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n\r\n// pause a running system\r\n// ... invoked by either host or non-host\r\n// ... this is a convenience function wrapping the socket protocol with an async request/response\r\n// RETURN: void\r\n// ERROR:  may contain a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport function pauseSystem(sysId) { // system identifier\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'pause-system' socket request to our server\r\n    socket.emit('pause-system', sysId, socketAckFn(resolve, reject));\r\n  });\r\n}\r\n","//***\r\n//*** a system store, containing our simulated system data model\r\n//***\r\n\r\nimport {writable, get} from 'svelte/store';\r\n\r\nimport {launchSystem as launchSystemIO} from './systemIO';\r\nimport {joinSystem as joinSystemIO}     from './systemIO';\r\nimport {runSystem as runSystemIO}       from './systemIO';\r\nimport {pauseSystem as pauseSystemIO}   from './systemIO';\r\nimport alert                            from '../util/alert';\r\nimport user                             from '../auth/user';\r\nimport logger                           from '../core/util/logger';\r\nconst  log = logger('vit:client:system');\r\n\r\n\r\n// ********************************************************************************\r\n// create/catalog our client-side system store (an internal -and- reusable routine)\r\n// RETURN: system (a reactive store)\r\nfunction createSystemStore(sysId, accessCode, model, isHost, isRunning=false) {\r\n\r\n  // our standard svelte store holding our state\r\n\tconst {subscribe, update} = writable({\r\n    sysId,            // system identifier -and- alias to room (must be unique on server or will error)\r\n  //accessCode,       // access code to join system (a lite password) ... L8TR: suspect only needed on server\r\n    isHost,           // boolean: true - host, false - participant\r\n    participants: [/*userName, ...*/], // all active participants in this system ... dynamically maintained when join/leave\r\n    isRunning,        // indicator of whether the system is running\r\n    model,\r\n  });\r\n\r\n  // our custom store with value-added methods\r\n\tconst system = {\r\n\t\tsubscribe, // makes this a store (i.e. a custom store)\r\n\r\n    // value-added store methods follow:\r\n\r\n    // update the running status of self\r\n    // INITIATED BY: the server's 'run-system' / 'pause-system' process\r\n    runChanged: (running) => {\r\n      update(state => ( {...state, isRunning: running} ));\r\n    },\r\n\r\n    // update the active set of participants\r\n    // INITIATED BY: the server's sysId/room join/leave events\r\n    participantsChanged: (participants) => {\r\n      update(state => ( {...state, participants} ));\r\n    },\r\n\r\n    // update self's store value with the supplied delta changes\r\n    // INITIATED BY: the server's runSystem() process\r\n    // SOURCE: the source of these changes can be any of the participants who have joined the System\r\n    // RETURN: void\r\n    stateChanged: (deltaModelChanges) => { // ex: { 'R1.pres': 1210, ... }\r\n      update( state => {\r\n        // make a deep copy of model\r\n        // ... https://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript\r\n        const newModel = structuredClone(state.model);\r\n\r\n        // apply delta changes\r\n        // ... use a simple pattern, restricted to what we know we have\r\n        Object.entries(deltaModelChanges).forEach(([key, val]) => {\r\n          const [compKey, propKey] = key.split('.');\r\n          newModel[compKey][propKey] = val;\r\n        });\r\n\r\n        return {...state, model: newModel};\r\n      });\r\n    },\r\n\r\n    // our local state change cache, to be reflected to ALL participants (synced via our tick processor)\r\n    localStateChange: {}, // ex: { 'R1.open': true, ... }\r\n\r\n    // cache local changes to our state, to be reflected to ALL participants (synced via our tick processor)\r\n    // INITIATED BY: our local interactive components (when user makes direct state change)\r\n    // NOTE: an arrow function IS NOT used (supporting proper this connotation)\r\n    cacheLocalStateChange(key, val) { // ex: key: 'R1.open', val: true\r\n      this.localStateChange[key] = val;\r\n    },\r\n\r\n    // extract (return & clear) the local state change cache\r\n    // RETURN: localStateChange ... ex: { 'R1.open': true, ... }\r\n    extractLocalStateChange() {\r\n      const localStateChange = this.localStateChange;\r\n      this.localStateChange = {};\r\n      return localStateChange;\r\n    },\r\n\r\n    // can't think of real example:\r\n    // pseudo example where we interact with server\r\n    foo: () => { // can't think of anything right now\r\n      // ... either do a direct socket.emit(...) -or- a systemIO.js req/res\r\n    },\r\n  };\r\n\r\n  // catalog this new system\r\n  clientSystems.set(sysId, system);\r\n\r\n  // that's all folks\r\n  return system;\r\n}\r\n\r\n\r\n// ********************************************************************************\r\n// launch (i.e. create) a new system store (cataloged locally -and- on\r\n// server), which is available for external participants to join.\r\n// RETURN: newly created system reactive store (cataloged)\r\n// ERROR:  either a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport async function launchSystem(sysId,      // system identifier -and- alias to room (must be unique on server or will error)\r\n                                   accessCode, // access code to join system (a lite password)\r\n                                   model) {    // data model of this system, supplied by initiating host (JSON key/value pairs)\r\n\r\n  const log = logger('vit:client:system:launchSystem');\r\n\r\n  // verify system does NOT already exist\r\n  // ... this is our client cache check (similar error can occur on server cache)\r\n  // AI: although this works, I'm thinking we simply utilize the server validation exclusively\r\n  // if (getSystem(sysId)) {\r\n  //   log(`local client cache found system '${sysId}' ... erroring out`);\r\n  //   // THIS - NO: this seemed to be a wild goose chase (due to a separate app bug)\r\n  //   //? BECAUSE OUR FUNCT IS ASYNC, we must return error differently\r\n  //   //? return Promise.reject( // for ease of client usage, consistently deal with async errors only ... https://makandracards.com/makandra/43653-javascript-don-t-throw-exceptions-from-async-functions\r\n  //   //?   new Error('*** USER ERROR *** in \"launchSystem()\" function')\r\n  //   //?     .defineUserMsg(`system: '${sysId}' already exists (in client cache)`)\r\n  //   //? );\r\n  //   // OR THiS - BOTH SEEM TO WORK ... I think this was a wild goose chase (due to a separate app bug)\r\n  //   throw new Error('*** USER ERROR *** in \"launchSystem()\" function')\r\n  //     .defineUserMsg(`system '${sysId}' already exists (in client cache)`);\r\n  // }\r\n\r\n  // launch server-side system, insuring it is valid\r\n  // NOTE: errors are passed-through to our invoker\r\n  //       EX: - Expected Error: system: {sysId} already exists\r\n  await launchSystemIO(sysId, accessCode, model);\r\n\r\n  // create/return our client-side reactive system store\r\n  return createSystemStore(sysId, accessCode, model, true /*isHost*/);\r\n}\r\n\r\n// ********************************************************************************\r\n// join an existing system from the server, cataloged locally (i.e. created)\r\n// RETURN: newly created system reactive store\r\n// ERROR:  either a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport async function joinSystem(sysId,        // system identifier -and- alias to room (must be unique on server or will error)\r\n                                 accessCode) { // access code to join system (a lite password)\r\n\r\n  const log = logger('vit:client:system:joinSystem');\r\n\r\n  // verify system does NOT already exist (on the client-side)\r\n  // NOTE: all other validation occurs on the server-side\r\n  if (getSystem(sysId)) {\r\n    log(`local client cache found system '${sysId}' ... erroring out`);\r\n    throw new Error('*** USER ERROR *** in \"joinSystem()\" function')\r\n      .defineUserMsg(`system '${sysId}' already exists (in client cache)`);\r\n  }\r\n\r\n  // join server-side system, insuring it is valid\r\n  // NOTE: errors are passed-through to our invoker\r\n  //       EX: - Expected Error: system: {sysId} already exists\r\n  const {isRunning, model} = await joinSystemIO(sysId, accessCode);\r\n\r\n  // create/return our client-side reactive system store\r\n  return createSystemStore(sysId, accessCode, model, false /*isHost*/, isRunning);\r\n}\r\n\r\n\r\n// ********************************************************************************\r\n// start a system running\r\n// NOTE:   This function could be a method of the system store's value object\r\n//         ... runSystem() ... where we get the sysId via this.sysId\r\n// RETURN: void\r\n// ERROR:  either a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport async function runSystem(sysId) { // system identifier\r\n  // const log = logger('vit:client:system:runSystem');\r\n\r\n  // request server to start the system running\r\n  // NOTE: errors are passed-through to our invoker\r\n  //       EX: - Expected Error: system: {sysId} is already running\r\n  // NOTE: Our internal running status is maintained from the 'system-run-changed' event\r\n  //       broadcast to ALL participants from the server\r\n  await runSystemIO(sysId);\r\n}\r\n\r\n\r\n// ********************************************************************************\r\n// pause a running system\r\n// NOTE:   This function could be a method of the system store's value object\r\n//         ... pauseSystem() ... where we get the sysId via this.sysId\r\n// RETURN: void\r\n// ERROR:  either a userMsg (expected condition), or a hard-error (unexpected condition)\r\nexport async function pauseSystem(sysId) { // system identifier\r\n  // request server to pause the system\r\n  // NOTE: errors are passed-through to our invoker\r\n  //       EX: - Expected Error: system: {sysId} is already running\r\n  // NOTE: Our internal running status is maintained from the 'system-run-changed' event\r\n  //       broadcast to ALL participants from the server\r\n  await pauseSystemIO(sysId);\r\n}\r\n\r\n\r\n// ********************************************************************************\r\n// all Systems in-use by THIS client\r\n//   a Map:\r\n//   sysId<key>: systemStore<value>\r\nlog('creating client-side systems cache');\r\nconst clientSystems = new Map();\r\n// Usage Summary:\r\n//  - Array.from(clientSystems.values())\r\n//  - clientSystems.set(sysId, {...});\r\n//  - clientSystems.get(sysId);\r\n//  - clientSystems.delete(sysId);\r\n\r\n// ********************************************************************************\r\n// return indicator as to whether we have any system entries\r\n// RETURN: boolean\r\nexport function hasClientSystems() {\r\n  return clientSystems.size > 0;\r\n}\r\n\r\n// ********************************************************************************\r\n// return all system ids\r\n// RETURN: [sysId]\r\nexport function allClientSysIds() {\r\n  return Array.from(clientSystems.keys())\r\n}\r\n\r\n// ********************************************************************************\r\n// return the system store identified by the supplied sysId\r\n// RETURN: desired system store (undefined for not found)\r\nexport function getSystem(sysId) {\r\n  // DEBUGGED VERSION:\r\n  // const system = clientSystems.get(sysId);\r\n  // log(`getSystem('${sysId}') returning: `, system);\r\n  // return system;\r\n\r\n  // PRODUCTION VERSION\r\n  return clientSystems.get(sysId);\r\n}\r\n\r\n\r\n\r\n\r\n//***\r\n//*** Registration of system-based socket handlers\r\n//***\r\n\r\n// our active socket (to be used in this module)\r\nlet socket;\r\n\r\nexport function registerSystemStoreSocketHandlers(_socket) {\r\n  log('here we are in registerSystemStoreSocketHandlers');\r\n\r\n  // expose socket to this module\r\n  socket = _socket;\r\n\r\n  // our client tick processor for a running system\r\n  // INITIATED BY: the server's runSystem() process\r\n  // RETURN (via ack): deltaModelChanges\r\n  // ERROR  (via ack): either a userMsg (expected condition), or a hard-error (unexpected condition)\r\n  socket.on('system-tick', (sysId, ack) => {\r\n    const log = logger('vit:client:system:system-tick'); \r\n    log(`processing - sysId: '${sysId}'`);\r\n\r\n    // convenience util\r\n    function userErr(userMsg) {\r\n      const errMsg = '*** USER ERROR *** in \"system-tick\" event';\r\n      log(`${errMsg} ... ${userMsg}`)\r\n      ack({errMsg, userMsg});\r\n    }\r\n\r\n    // locate the system store that will service this request\r\n    const system = getSystem(sysId);\r\n    if (!system) {\r\n      return userErr(`'sys-tick\" event - sysId: ${sysId} is NOT recognized by this client (something is out-of-sync) :-(`);\r\n    }\r\n    \r\n    // NOTE: This routine simulates some contrived logic that registers changes to the store.\r\n    //       - It does NOT directly update the store.\r\n    //       - RATHER, it returns a deltaModelChanges\r\n    //         (which the server broadcasts to ALL participants of the running system)\r\n    //       - THEREFORE, the changes are applied in stateChanged()\r\n    const model      = get(system).model;\r\n    const activeUser = get(user);\r\n\r\n    // accumulator of model changes\r\n    let deltaModelChanges = {\r\n      // example:\r\n      // 'K1.pres': newPressure,\r\n    };\r\n\r\n    // TEMPORARY CODE: simulate a hard error\r\n    // with NO checks on the server:\r\n    // - the server will crash\r\n    // - and ALL client socket connections are LOST :-(\r\n    // if (activeUser.name === 'Kevin' && model.K1.pres > 200) {\r\n    //   ack({errMsg: 'valve 1 BLEW UP (over 200 lbs of pressure)'});\r\n    // }\r\n\r\n    // TEMPORARY CODE: simulate a timeout condition (by never responding - NO ack())\r\n    // with NO checks on the server:\r\n    // - the server will block forever (simply stops)\r\n    // if (activeUser.name === 'Resa' && model.R1.pres > 1300) {\r\n    //   return; // by never responding (ack()) server will timeout\r\n    // }\r\n\r\n    // apply programmatic state changes (via simulated logic) as needed\r\n    // ... iterate through all components of our system model\r\n    Object.entries(model).forEach( ([compName, comp]) => {\r\n\r\n      // process selected components:\r\n      if (comp.type === 'valve' && // valves\r\n          comp.open &&             // that are open\r\n          // when the component name begins with same letter as our active user\r\n          compName[0].toLowerCase() === activeUser.getUserName()[0].toLowerCase()) {\r\n\r\n        // bump the pressure up by 10\r\n        deltaModelChanges[`${compName}.pres`] = comp.pres + 10;;\r\n      }\r\n    });\r\n\r\n    // ALSO apply the state changes that have been cached by local interactive components\r\n    // ... this cache is retained in the system store (NOT it's value object)\r\n    deltaModelChanges = {...deltaModelChanges, ...system.extractLocalStateChange()};\r\n  \r\n    // that's all folks\r\n    return ack({value: deltaModelChanges});\r\n  });\r\n\r\n\r\n  // retain changes as to whether our system is running or paused\r\n  // INITIATED BY: the server's 'run-system' / 'pause-system' process\r\n  // NOTE: This event is broadcast, so there is NO opportunity to communicate a response\r\n  socket.on('system-run-changed', (sysId, running) => {\r\n    log(`processing 'system-run-changed' event - sysId: '${sysId}', running: ${running}`);\r\n\r\n    // locate our system store\r\n    const system = getSystem(sysId);\r\n    if (!system) {\r\n      log(`sysId: '${sysId}' does NOT exist ... no-oping`);\r\n      return;\r\n    }\r\n\r\n    // forward this process into our system store\r\n    system.runChanged(running);\r\n\r\n    // notify user of run change\r\n    alert.display(`System '${sysId}' is now ${running ? 'running' : 'paused'}!`);\r\n  });\r\n\r\n\r\n  // retain state changes to our running system\r\n  // INITIATED BY: the server's 'run-system' process\r\n  // NOTE: This event is broadcast, so there is NO opportunity to communicate a response\r\n  socket.on('system-state-changed', (sysId, stateChanges) => {\r\n    log(`processing 'system-state-changed' event - sysId: '${sysId}', stateChanges: `, stateChanges);\r\n\r\n    // locate our system store\r\n    const system = getSystem(sysId);\r\n    if (!system) {\r\n      log(`sysId: '${sysId}' does NOT exist ... no-oping`);\r\n      return;\r\n    }\r\n\r\n    // forward this process into our system store\r\n    system.stateChanged(stateChanges);\r\n  });\r\n\r\n\r\n  // retain changes in the system's set of participants\r\n  // INITIATED BY: the server's sysId/room join/leave events\r\n  // NOTE: This event is broadcast, so there is NO opportunity to communicate a response\r\n  socket.on('system-participants-changed', (sysId, userMsg, participants) => {\r\n    log(`processing 'system-participants-changed' event - sysId: '${sysId}', userMsg: ${userMsg}, participants: ${participants}`);\r\n\r\n    // locate our system store\r\n    const system = getSystem(sysId);\r\n    if (!system) {\r\n      log(`sysId: '${sysId}' does NOT exist ... no-oping`);\r\n      return;\r\n    }\r\n\r\n    // update our store's participants\r\n    system.participantsChanged(participants);\r\n\r\n    // notify user of change\r\n    // EX: \"'UserA' has joined the 'sys123' system\"\r\n    alert.display(userMsg);\r\n  });\r\n\r\n}\r\n","//***\r\n//*** filterLogsIOClient.js ..... WebSocket binding supporting filtering of logs (client-side)\r\n//***\r\n\r\nimport logger from './logger';\r\nconst  log = logger('vit:core:logger:filterLogsIOClient');\r\n\r\nlet socket;  // our active socket (to be used in this module)\r\n\r\nexport function registerLogFilterSocketHandlers(_socket) {\r\n  log('here we are in registerLogFilterSocketHandlers');\r\n\r\n  // expose socket to this module\r\n  socket = _socket;\r\n\r\n  // handle getting other client log filters (request/response)\r\n  // NOTE: The server does a pass-through to other client (i.e. this process).\r\n  //       BECAUSE we are \"listening\" to this event (not emitting it), we are the \"other\" client.\r\n  socket.on('get-other-log-filters', (ack) => {\r\n    ack(logger.currentLogFilters());\r\n  });\r\n\r\n  // handle setting other client log filters\r\n  // NOTE: The server does a pass-through to other client (i.e. this process).\r\n  //       BECAUSE we are \"listening\" to this event (not emitting it), we are the \"other\" client.\r\n  // NOTE: otherSocketId IS NEEDED (from client-server) but NOT NEEDED (in server-client - THIS PROCESS)\r\n  //       but maintained for consistancy (since we use the same event name)\r\n  socket.on('set-other-log-filters', (otherSocketId, filter) => {\r\n    logger.setLogFilters(filter);\r\n    log.f(`our logging filter has been REMOTELY set set to: '${filter}'`);\r\n  });\r\n}\r\n\r\n// convenience setServerLogFilters(filter) wrapping the socket protocol\r\n// RETURN: void\r\nexport function setServerLogFilters(filter) {\r\n  socket.emit('set-server-log-filters', filter);\r\n}\r\n\r\n// convenience getServerLogFilters() utility wrapping the socket protocol with an async request/response\r\n// RETURN: promise string\r\nexport function getServerLogFilters() {\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'get-server-log-filters' socket request to our server\r\n    socket.emit('get-server-log-filters', (serverLogFilters) => {\r\n      // within our acknowledgment callback\r\n      resolve(serverLogFilters);\r\n    });\r\n  });\r\n}\r\n\r\n// convenience setOtherLogFilters(otherSocketId, filter) wrapping the socket protocol\r\n// RETURN: void\r\nexport function setOtherLogFilters(otherSocketId, filter) {\r\n  socket.emit('set-other-log-filters', otherSocketId, filter);\r\n}\r\n\r\n// convenience getOtherLogFilters(otherSocketId) utility wrapping the socket protocol with an async request/response\r\n// RETURN: promise string\r\nexport function getOtherLogFilters(otherSocketId) {\r\n  // promise wrapper of our socket message protocol\r\n  return new Promise((resolve, reject) => {\r\n    // issue the 'get-other-log-filters' socket request to the other client\r\n    socket.emit('get-other-log-filters', otherSocketId, (otherLogFilters) => {\r\n      if (otherLogFilters.startsWith('ERROR')) {\r\n        reject(otherLogFilters);\r\n      }\r\n      else {\r\n        resolve(otherLogFilters);\r\n      }\r\n    });\r\n  });\r\n}\r\n","// a simplistic determination of whether client is running in \r\n// - production  - isProd: true\r\n// - development - isDev: true\r\nexport const  isDev  = window?.location?.hostname === 'localhost';\r\nexport const  isProd = !isDev;\r\n","//***\r\n//*** sockets.js ... maintain our client communication websockets (socket.io)\r\n//***\r\n\r\nimport io                                    from \"socket.io-client\";\r\nimport {registerUserSocketHandlers}          from './auth/user';\r\nimport {registerChatSocketHandlers}          from './chat/chat';\r\nimport {registerSystemStoreSocketHandlers}   from './sys/system';\r\nimport {registerSystemSocketHandlers}        from './sys/systemIO';\r\nimport {registerLogFilterSocketHandlers}     from './core/util/logger/filterLogsIOClient';\r\nimport {isDev}                               from './util/env';\r\nimport user                                  from './auth/user';\r\nimport alert                                 from './util/alert';\r\n\r\nimport logger from './core/util/logger';\r\nconst  log = logger('vit:client:sockets');\r\n\r\n// ********************************************************************************\r\n// setup our socket connection to the server\r\n// RETURN: void\r\nexport default function setupSocketConnection(clientType) { // 'ide' or 'sys'\r\n\r\n  // define the serverURL used for our socket connection\r\n  //   - for dev  env: we explicitly point to our well-known dev server/port\r\n  //     ... http://localhost:5000\r\n  //   - for prod env: we defer to socket.io default (undefined) \r\n  //     WHICH is the production host server of our client (e.g. window.location)\r\n  //     ... https://dmrst.herokuapp.com/\r\n  const serverURL = isDev ? \"http://localhost:5000\" : undefined;\r\n\r\n  log.f(`setupSocketConnection() making client socket connection to server: ${serverURL || 'production host of our client'}, using clientType: '${clientType}'`);\r\n  \r\n  // create our socket connection for this app/browser-window\r\n  // ... this socket object is initially a shell, but is dynamically updated when connected\r\n  const socket = io(serverURL, {\r\n    // we communicate static info needed for our socket connection\r\n    // using socket.io's standard auth structure (supplied at client socket creation time).\r\n    // NOTE: For auto-authorization, we bypass this technique, utilizing a\r\n    //       programmatic server2client handshake which accommodates\r\n    //       the dynamics of the deviceId changing.\r\n    auth: {             \r\n      clientType,\r\n      // ... standard technique for auto authorization (however NOT dynamic enough for us)\r\n      // token: 'whatever', // NO: see NOTE above\r\n    }\r\n  });\r\n\r\n  // determine when connection is made, by monitoring the 'connect' event\r\n  // ... test with \r\n  //     1. server NOT running:    NEVER receive 'connect' event \r\n  //                               WITH reoccurring console error:\r\n  //                                    GET http://localhost:5000/socket.io/?EIO=4&transport=polling&t=Nxzv673 net::ERR_CONNECTION_REFUSED\r\n  //     2. server cors rejection: NEVER receive 'connect' event  <<< BASICALLY THE SAME THING\r\n  //                               WITH reoccurring console error:\r\n  //                                    Access to XMLHttpRequest at 'http://localhost:5000/socket.io/?EIO=4&transport=polling&t=NxzvTtB' from origin 'http://localhost:8080' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.\r\n  //                                    GET http://localhost:5000/socket.io/?EIO=4&transport=polling&t=NxzvTtB net::ERR_FAILED 200\r\n  socket.on('connect', () => {\r\n    log(`client's socket connection to server is now established: ${socket.id} / connected: ${socket.connected}`);\r\n    alert.display('Our server connection is now up and running.');\r\n  });\r\n\r\n  // when our socket connection has been lost:\r\n  // - either, we have LOST our client network connection\r\n  // - or the server is down\r\n  // NOTE: socket.io will auto-reconnect when the problem is resolved\r\n  //       USING the same client-side socket object instance (with a different socket.id)\r\n  //       AS OPPOSED TO the server-side, which is a brand new socket object instance\r\n  socket.on('disconnect', (reason) => {\r\n    log(`client's socket connection to server has been lost: ${socket.id} / connected: ${socket.connected} ???? reason: ${reason}`);\r\n    alert.display('Our server connection has been lost.');\r\n  });\r\n\r\n  // register ALL APP socket event listeners\r\n  registerUserSocketHandlers(socket);\r\n  registerChatSocketHandlers(socket);\r\n  registerSystemStoreSocketHandlers(socket);\r\n  registerSystemSocketHandlers(socket);\r\n  registerLogFilterSocketHandlers(socket);\r\n}\r\n","<script>\r\n import user from './auth/user';\r\n</script>\r\n\r\n<div>\r\n  <center>\r\n    <h4>IDE</h4>\r\n    <p>\r\n      Do normal editing of packages here.\r\n      <br>\r\n      {#if $user.isSignedIn()}\r\n        <b>WITH</b> the ability to publish your package <i>(because you have signed-in)</i>\r\n      {:else}\r\n        <b>WITHOUT</b> the ability to publish your package <i>(you must sign-in for that)</i>\r\n      {/if}  \r\n    </p>\r\n  </center>\r\n\r\n</div>\r\n","<script>\r\n import {runSystem, pauseSystem} from './system';\r\n import logger  from '../core/util/logger';\r\n const  log = logger('vit:client:SystemDisplay');\r\n\r\n export let system;    // PROP: the system to display\r\n\r\n $: userMsg = system ? '' : 'No system to run.';\r\n\r\n async function handleRunSystem() {\r\n   const sysId = $system.sysId;\r\n   try {\r\n     userMsg = '';\r\n     await runSystem(sysId);\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       userMsg = e.userMsg;\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       userMsg = 'Unexpected error in runSystem process ... see logs for detail'\r\n       log.v(`*** ERROR *** Unexpected error in runSystem process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n\r\n async function handlePauseSystem() {\r\n   const sysId = $system.sysId;\r\n   try {\r\n     userMsg = '';\r\n     await pauseSystem(sysId);\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       userMsg = e.userMsg;\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       userMsg = 'Unexpected error in pauseSystem process ... see logs for detail'\r\n       log.v(`*** ERROR *** Unexpected error in pauseSystem process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n</script>\r\n\r\n{#if system}\r\n<b>System:</b> {$system.sysId} <i>({$system.isHost ? 'host' : 'participant'})</i>\r\n\r\n<br/>\r\n<b>Participants:</b> {$system.participants}\r\n\r\n<br/>\r\n<b>Status:</b> {$system.isRunning ? 'running' : 'paused'}\r\n{#if $system.isRunning}\r\n  <button on:click={handlePauseSystem}>Pause</button>\r\n{:else}\r\n  <button on:click={handleRunSystem}>Run</button>\r\n{/if}\r\n\r\n<br/>\r\n<b>Model:</b>\r\n<!-- simple render\r\n     <pre>{JSON.stringify($system.model, null, 2)}</pre>\r\n   -->\r\n<!-- more sophisticate render -->\r\n<ul>\r\n  {#each Object.entries($system.model) as [compName, compModel]}\r\n  <p>\r\n    <b>{compName}:</b>\r\n    {#if compModel.type === 'valve'} <!-- a valve -->\r\n    a valve ...\r\n    <!-- this checkbox represents a valve switch that can be operated interactivally by any user\r\n       - it is bound to the svelte system store\r\n         ... which will directly change our local copy of the store\r\n         ... this is a bit \"un-cosure\", however because of next bullet it is OK\r\n       - in addition we syncronize this change to other participants\r\n         ... via system.cacheLocalStateChange(...)\r\n         ... which \"officially\" updates everyone's store (ours and all other participants)\r\n         in a \"cosure\" way\r\n       -->\r\n    <input type=\"checkbox\"\r\n           bind:checked={compModel.open}\r\n           on:change={ e => system.cacheLocalStateChange(`${compName}.open`, e.target.checked) }>\r\n    open, with pressure <b>{compModel.pres}</b>\r\n    {:else} <!-- a catch-all for all other cases -->\r\n    <pre>{JSON.stringify(compModel, null, 2)}</pre>\r\n    {/if}\r\n  </p>\r\n  {/each}\r\n</ul>\r\n{/if}\r\n\r\n<div class=\"error\">{userMsg}</div>\r\n\r\n<style>\r\n .error {\r\n   color: red;\r\n }\r\n</style>\r\n","<script context=\"module\">\r\n import {onDestroy}        from 'svelte';\r\n import {hasClientSystems, \r\n         allClientSysIds,\r\n         getSystem}        from './system';\r\n\r\n //***\r\n //*** SystemSelector.svelte ... A selector of active System stores\r\n //***\r\n\r\n // stateRetention: retains component state when destroyed/re-instantiated\r\n //                 - defaults to module-scoped retention (globally shared across all component instances)\r\n //                 - overide by using `createStateRetention(): stateRetention` and passing in as PROP\r\n export function createStateRetention() {\r\n   let sysIdRetained = undefined;\r\n   return {\r\n     get()      { return sysIdRetained; },\r\n     set(sysId) { sysIdRetained = sysId; },\r\n   };\r\n }\r\n const stateRetentionDEFAULT = createStateRetention();\r\n</script>\r\n\r\n<script>\r\n // PROP: the \"selected\" system reactive store ... BIND TO THIS PROP, making it reactive in the contained component :-)\r\n export let system; \r\n\r\n // PROP: retains component state when destroyed/re-instantiated (defaults to \"common\" module-scoped retention)\r\n export let stateRetention=stateRetentionDEFAULT;\r\n\r\n // the selected sysId (internal) ... bound to our <select> element -and- synced with the system store\r\n let sysId = stateRetention.get();\r\n\r\n // reflexively adjust system store when sysId changes (via our selector)\r\n $: {\r\n   system = getSystem(sysId) || null; // maintain our active system\r\n }\r\n\r\n // retain last known info for use when component is re-activated\r\n onDestroy( () => {\r\n   stateRetention.set(sysId);\r\n });\r\n</script>\r\n\r\n<!-- select the desired system store -->\r\n{#if hasClientSystems()}\r\n  <select bind:value={sysId}>\r\n    {#each allClientSysIds() as _sysId (_sysId)}\r\n    <option value={_sysId}>{_sysId}</option>\r\n    {/each}\r\n  </select>\r\n{/if}\r\n","<script>\r\n import {joinSystem} from './system';\r\n\r\n import alert  from '../util/alert';\r\n import logger from '../core/util/logger';\r\n const  log =  logger('vit:client:SystemJoin');\r\n\r\n export let newSystemIntroduced; // PROP: communicate new system introduced (either through \"launch\" or \"join\") API: newSystemIntroduced(sysId)\r\n export let resetSubCompDisp;    // PROP: re-set our parent display of this sub-component\r\n\r\n // our input state (bound to input controls)\r\n let sysId      = '';\r\n let accessCode = '';\r\n\r\n let userMsg = '';\r\n\r\n async function handleJoinSystem() {\r\n\r\n   // join the system, making server aware of this\r\n   try {\r\n     const system = await joinSystem(sysId, accessCode);\r\n     alert.display(`System '${sysId}' has been successfully joined!`);\r\n     newSystemIntroduced(sysId);\r\n     resetSubCompDisp();\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       userMsg = e.userMsg;\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       userMsg = 'Unexpected error in joinSystem process ... see logs for detail'\r\n       log.v(`*** ERROR *** Unexpected error in joinSystem process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n</script>\r\n\r\n<div>\r\n  <h4>Join an EXISTING System</h4>\r\n\r\n  <form onsubmit=\"return false;\">\r\n    <!-- svelte-ignore a11y-autofocus -->\r\n    <label>System ID:   <input type=\"text\" autocomplete=\"on\"  bind:value={sysId} autofocus/></label>\r\n    <label>Access Code: <input type=\"text\" autocomplete=\"on\"  bind:value={accessCode}/></label>\r\n\r\n    <div class=\"error\">{userMsg}</div>\r\n\r\n    <button on:click={handleJoinSystem}>Join</button>\r\n    <button on:click={() => resetSubCompDisp()}>Cancel</button>\r\n  </form>\r\n</div>\r\n\r\n<style>\r\n .error {\r\n   color: red;\r\n }\r\n</style>\r\n","<script>\r\n import {launchSystem} from './system';\r\n\r\n import alert  from '../util/alert';\r\n import logger from '../core/util/logger';\r\n const  log =  logger('vit:client:SystemLaunch');\r\n\r\n export let newSystemIntroduced; // PROP: communicate new system introduced (either through \"launch\" or \"join\") API: newSystemIntroduced(sysId)\r\n export let resetSubCompDisp;    // PROP: re-set our parent display of this sub-component\r\n\r\n // our input state (bound to input controls)\r\n let sysId      = '';\r\n let accessCode = '';\r\n // AI: input model from user (requires some way to edit JSON) ... for now just use RAW JSON\r\n let modelStr = `{\r\n   \"K1\": {\r\n     \"type\": \"valve\",\r\n     \"open\": false,\r\n     \"pres\": 120\r\n   },\r\n   \"R1\": {\r\n     \"type\": \"valve\",\r\n     \"open\": true,\r\n     \"pres\": 1200\r\n   }\r\n }`;\r\n\r\n let userMsg = '';\r\n\r\n async function handleLaunchSystem() {\r\n\r\n   // convert model string into json\r\n   let modelJSON = {};\r\n   try {\r\n     modelJSON = JSON.parse(modelStr);\r\n   }\r\n   catch(e) {\r\n     userMsg = `Model contains invalid JSON ... ${e.message}`;\r\n     return;\r\n   }\r\n\r\n   // launch the system, making server aware of this\r\n   try {\r\n     const system = await launchSystem(sysId, accessCode, modelJSON);\r\n     alert.display(`System '${sysId}' has successfully launched ... users may now join!`);\r\n     newSystemIntroduced(sysId);\r\n     resetSubCompDisp();\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       userMsg = e.userMsg;\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       userMsg = 'Unexpected error in launchSystem process ... see logs for detail'\r\n       log.v(`*** ERROR *** Unexpected error in launchSystem process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n</script>\r\n\r\n<div>\r\n  <h4>Launch a NEW System</h4>\r\n\r\n  <form onsubmit=\"return false;\">\r\n    <!-- svelte-ignore a11y-autofocus -->\r\n    <label>System ID:   <input type=\"text\" autocomplete=\"on\"  bind:value={sysId} autofocus/></label>\r\n    <label>Access Code: <input type=\"text\" autocomplete=\"on\"  bind:value={accessCode}/></label>\r\n    <label>Model:       <textarea bind:value={modelStr}></textarea>\r\n\r\n    <div class=\"error\">{userMsg}</div>\r\n\r\n    <button on:click={handleLaunchSystem}>Launch</button>\r\n    <button on:click={() => resetSubCompDisp()}>Cancel</button>\r\n  </form>\r\n</div>\r\n\r\n<style>\r\n .error {\r\n   color: red;\r\n }\r\n\r\n textarea {\r\n   width:  80%;\r\n   height: 300px;\r\n }\r\n\r\n label, textarea {\r\n   display: block;\r\n }\r\n</style>\r\n","<script context=\"module\">\r\n import {writable}               from 'svelte/store';\r\n import SystemLaunch             from './SystemLaunch.svelte';\r\n import SystemJoin               from './SystemJoin.svelte';\r\n import SystemSelector           from './SystemSelector.svelte';\r\n import {createStateRetention}   from './SystemSelector.svelte';\r\n import SystemDisplay            from './SystemDisplay.svelte';\r\n import logger                   from '../core/util/logger';\r\n const  log = logger('vit:client:System');\r\n\r\n // retain the selected system IN module-scoped context (when destroyed/re-instantiated)\r\n // in such a way that we can alter it when a new system is created\r\n const systemSelectorStateRetention = createStateRetention();\r\n // utility to display new system that has been introduced (either through \"launch\" or \"join\")\r\n const newSystemIntroduced = (sysId) => systemSelectorStateRetention.set(sysId);\r\n\r\n // system sub-component to display (if any)\r\n // ... we need module-scoped to retain subComp when moving on/off the System tab\r\n // ... we use store to make module-scoped changes reactive\r\n const subComp = writable(null);\r\n // utility to reset our sub-comp display\r\n const resetSubCompDisp = (comp=null) => subComp.set(comp); // ... omit param to clear sub-comp display\r\n</script>\r\n\r\n<script>\r\n // our active system store (bound to <SystemSelector>)\r\n let system = null;\r\n</script>\r\n\r\n{#if $subComp}\r\n<svelte:component this={$subComp} {newSystemIntroduced} {resetSubCompDisp}/>\r\n{:else}\r\n<div>\r\n  <center>\r\n    <h4>System</h4>\r\n    <p>\r\n      <!-- select the desired system -->\r\n      <SystemSelector bind:system stateRetention={systemSelectorStateRetention}/>\r\n\r\n      <!-- Launch/Join controls -->\r\n      &nbsp;&nbsp;&nbsp;&nbsp;\r\n      <button on:click={() => resetSubCompDisp(SystemLaunch)}>Launch New System</button>\r\n      <button on:click={() => resetSubCompDisp(SystemJoin)}>Join Existing System</button>\r\n    </p>\r\n  </center>\r\n\r\n  <!-- Display the selected system (if any) -->\r\n  <SystemDisplay {system}/>\r\n\r\n</div>\r\n{/if}\r\n","<script context=\"module\">\r\n\r\n //***\r\n //*** ChatSessionSelector.svelte ... A Selector of Chat Sessions\r\n //***\r\n\r\n import {onDestroy} from 'svelte';\r\n\r\n // stateRetention: retains component state when destroyed/re-instantiated\r\n //                 - defaults to module-scoped retention (globally shared across all component instances)\r\n //                 - overide by using `createStateRetention(): stateRetention` and ?? passing in as PROP\r\n export function createStateRetention() {\r\n   let sessionIdRetained = undefined;\r\n   return {\r\n     get()          { return sessionIdRetained; },\r\n     set(sessionId) { sessionIdRetained = sessionId; },\r\n   };\r\n }\r\n const stateRetentionDEFAULT = createStateRetention();\r\n</script>\r\n\r\n<script>\r\n export let chat;    // PROP: the chat store that we are selecting from\r\n export let session; // PROP: the \"selected\" chat session (bind to this prop, making it reactive in contained component)\r\n export let stateRetention=stateRetentionDEFAULT; // PROP: retains component state when destroyed/re-instantiated (defaults to \"common\" module-scoped retention)\r\n\r\n // retain last known info for use when component is re-activated\r\n onDestroy( () => {\r\n   stateRetention.set(sessionId);\r\n });\r\n\r\n // the active sessionId/session we are displaying (from all active chat sessions)\r\n // ... sessionId is an alias of SESSION.otherSocketId\r\n // ... we NEED sessionId (in addition to session) because it is non-volital\r\n //     ... the session object instance will change over time\r\n // start out with our initial value (if any)\r\n let sessionId = stateRetention.get();\r\n // reflexively adjust sessionId when chat store changes\r\n // ... checking for existance (say when disconnected ... even when Chat component is NOT active)\r\n //     reverting to first one\r\n $: {\r\n   sessionId = $chat.session[sessionId] ? sessionId : $chat.sessions[0]?.otherSocketId;\r\n   session   = $chat.session[sessionId]; // maintain our active session\r\n }\r\n</script>\r\n\r\n<select bind:value={sessionId}> <!-- select the desired chat session -->\r\n  {#each $chat.sessions as sess (sess.otherSocketId)}\r\n    <option value={sess.otherSocketId}>{sess.otherUserName}</option>\r\n  {/each}\r\n</select>\r\n","<script context=\"module\">\r\n import {onDestroy}         from 'svelte';\r\n import ChatSessionSelector from './ChatSessionSelector.svelte';\r\n import chat                from './chat';\r\n import user                from '../auth/user';\r\n import logger              from '../core/util/logger';\r\n const  log = logger('vit:client:Chat');\r\n\r\n // module-scoped retention of state (when component is destroyed)\r\n // ... only works for a singleton Chat component (because state a single occurance)\r\n let myMsgInitial     = '';\r\n</script>\r\n\r\n<script>\r\n // retain last known info for use when component is re-activated\r\n onDestroy( () => {\r\n\t myMsgInitial     = myMsg;\r\n });\r\n\r\n // our \"selected\" chat session (bound to ChatSessionSelector)\r\n let session;\r\n\r\n // the unprocessed message to send (typed in but NOT YET sent)\r\n let myMsg = myMsgInitial; // AI: technically myMsg should be related to a session (to be more proper)\r\n\r\n function handleSendMsg() {\r\n   if (myMsg) {\r\n     chat.sendMsg(myMsg, session.otherSocketId);\r\n     myMsg = '';\r\n   }\r\n }\r\n \r\n function handleDisconnect() {\r\n   // disconnect from this session\r\n   chat.disconnect(session.otherSocketId);\r\n }\r\n</script>\r\n\r\n<div>\r\n  <center>\r\n    <h4>Chat</h4>\r\n\r\n    <!-- select the desired chat session -->\r\n    <ChatSessionSelector {chat} bind:session/>\r\n\r\n  </center>\r\n\r\n  <div class=\"chatlist\">\r\n    <span class=\"other\">{session?.otherUserName}</span>\r\n    <span class=\"me\">Me ({$user.getUserName()}) </span>\r\n    {#each session?.msgs || [] as msg (msg.when)}\r\n      <span class={msg.who ? 'other' : 'me'}>{msg.msg}</span>\r\n    {/each}\r\n  </div>\r\n\r\n  <div class=\"chatbox-area\">\r\n    <form id=\"chatform\" onsubmit=\"return false;\">\r\n      <label>\r\n        <!-- svelte-ignore a11y-autofocus -->\r\n        <input type=\"text\" size=\"50\" bind:value={myMsg} autofocus/>\r\n        &nbsp;&nbsp;\r\n        <button on:click={handleSendMsg}>Send</button>\r\n      </label>\r\n    </form>\r\n  </div>\r\n\r\n  <center>\r\n    <button on:click={handleDisconnect}>Disconnect</button>\r\n  </center>\r\n\r\n</div>\r\n\r\n\r\n\r\n<style>\r\n /* CRUDE STYLING START ... see: https://codepen.io/meesrutten/pen/wgvpQM */\r\n .chatlist {\r\n   display: flex;\r\n   flex-flow: column nowrap;\r\n   align-items: flex-end;\r\n\r\n   overflow-x: hidden;\r\n\r\n   width: 100%;\r\n   max-width: 35em;\r\n   max-height: 75vh;\r\n   margin: 0 auto;\r\n }\r\n\r\n .me {\r\n   box-shadow: 1px 1px 2px #666;\r\n   border-top: 4px solid #CC8914;\r\n }\r\n\r\n .other {\r\n   box-shadow: -1px 1px 2px #666;\r\n   border-top: 4px solid #27ae60;\r\n   align-self: flex-start;\r\n   will-change: auto;\r\n   height: auto;\r\n }\r\n\r\n .chatbox-area {\r\n   margin: 0 auto;\r\n   position: relative;\r\n   bottom: 0;\r\n   height: auto;\r\n   width: 100%;\r\n }\r\n\r\n #chatform {\r\n   display: flex;\r\n   justify-content: center;\r\n   width: 80%;\r\n   max-width: 35em;\r\n   margin: 0 auto;\r\n   padding-top: 1em;\r\n }\r\n\r\n</style>\r\n","<script>\r\n\r\n //***\r\n //*** FilterMyLogs.svelte ... UI Component - maintain log filters of local browser (MyLogs)\r\n //***\r\n\r\n import logger from './logger';\r\n const  log = logger('vit:core:logger:FilterMyLogs');\r\n\r\n let clientLoggingFilter = logger.currentLogFilters();\r\n function handleClientLoggingFilter() {\r\n   // NOTE: this local logging filter change has a bit more diagnostic logs :-)\r\n   log(`before enabling this filter, our vit:core:logger:FilterMyLogs log enabled status is: log: ${log.enabled} ... logger: ${logger.isLogFilterEnabled('vit:core:logger:FilterMyLogs')}`);\r\n   logger.setLogFilters(clientLoggingFilter);\r\n   log.f(`client logging filter now set to: '${clientLoggingFilter}'`);\r\n   log(`after enabling this filter, our vit:core:logger:FilterMyLogs log enabled status is: log: ${log.enabled} ... logger: ${logger.isLogFilterEnabled('vit:core:logger:FilterMyLogs')}`);\r\n }\r\n</script>\r\n\r\n<form onsubmit=\"return false;\">\r\n  <!-- svelte-ignore a11y-autofocus -->\r\n  <label>\r\n    My Logs Filter:\r\n    <input type=\"text\" bind:value={clientLoggingFilter} autofocus/>\r\n    &nbsp;&nbsp;\r\n    <button on:click={handleClientLoggingFilter}>Change</button>\r\n  </label>\r\n</form>\r\n","<script>\r\n\r\n //***\r\n //*** FilterOtherLogs.svelte ... UI Component - maintain log filters of remote browser (OtherLogs)\r\n //***\r\n\r\n // HACK FIX:\r\n // \r\n // Normally we would import `filterLogsIOClient` FROM: './filterLogsIOClient';\r\n // \r\n // However, because `filterLogsIOClient` utilizes a module-scoped socket\r\n // variable (initialized from the client), we must pull in the SAME JS\r\n // module (from the client perspective).  \r\n // \r\n // - This is why you see the unsightly '../../../../../snip-snip'\r\n //   reference.\r\n // \r\n // - Without this fix, the JS internals would initialize a separate\r\n //   \"unused\" module, and our \"used\" module would NOT initialize it's\r\n //   module-scoped socket variable (i.e. it would be undefined).\r\n // \r\n // - I suspect this is related to how our simplistic mono-repo is\r\n //   maintained (using symbolic links).\r\n import {setOtherLogFilters,\r\n         getOtherLogFilters} from '../../../../../client/src/core/util/logger/filterLogsIOClient'; // see \"HACK FIX\" (above)\r\n\r\n import logger from './logger';\r\n const  log = logger('vit:core:logger:FilterOtherLogs');\r\n\r\n // PROP: otherClientSelector - necessary items to select the \"other\" client socketId\r\n //       - gleaned from chat sessions\r\n //       - passed in as props (vs. imports) because it is NOT part of our contained logger module\r\n //       - CONTENT:\r\n //         otherClientSelector: {\r\n //           chat,                // the chat store that we select remote session from (identifying \"other\" socketId)\r\n //           ChatSessionSelector, // the ChatSessionSelector component\r\n //           stateRetention,      // retains component state when destroyed/re-instantiated\r\n //         }\r\n export let otherClientSelector;\r\n const {chat, ChatSessionSelector, stateRetention} = otherClientSelector;\r\n\r\n // our \"selected\" chat session (bound to ChatSessionSelector)\r\n let session;\r\n\r\n let otherLoggingFilter = ''; // because the initialization of this is async, we use delayedOtherInit (AI: technically we should prob keep in sync with other processes that set this (but would require a notification from the server)\r\n async function delayedOtherInit(sessionId) {\r\n   // handle initialization timing ... will re-execute when we have a sessionId\r\n   if (!sessionId) {\r\n     log(`delayedOtherInit(${sessionId}): NO sessionId due to initialization timing (no-op till re-executed '')`);\r\n     otherLoggingFilter = '';\r\n     return;\r\n   }\r\n   try {\r\n     log(`delayedOtherInit('${sessionId}') ... invoking async getOtherLogFilters()`);\r\n     otherLoggingFilter = await getOtherLogFilters(sessionId);\r\n     log(`delayedOtherInit('${sessionId}') RESULT: '${otherLoggingFilter}'`);\r\n   }\r\n   catch (err) {\r\n     alert(''+err);\r\n   }\r\n }\r\n $: {\r\n   // re-initialize otherLoggingFilter whenever session changes\r\n   delayedOtherInit(session?.otherSocketId);\r\n }\r\n\r\n function handleOtherLoggingFilter() {\r\n   setOtherLogFilters(session.otherSocketId, otherLoggingFilter);\r\n   log.f(`other logging filter (for ${session.otherUserId}) is now set to: '${otherLoggingFilter}'`);\r\n }\r\n</script>\r\n\r\n{#if $chat.isActive}\r\n  <form onsubmit=\"return false;\">\r\n    <label>\r\n      Client Logging Filter for <ChatSessionSelector {chat} {stateRetention} bind:session/>:\r\n      <input type=\"text\" bind:value={otherLoggingFilter}/>\r\n      &nbsp;&nbsp;\r\n      <button on:click={handleOtherLoggingFilter}>Change</button>\r\n    </label>\r\n  </form>\r\n{:else}\r\n  <i>For \"Other\" Client Logging Filter, establish a chat privite message to that client</i>\r\n{/if}\r\n","<script>\r\n\r\n //***\r\n //*** FilterServerLogs.svelte ... UI Component - maintain log filters of the server (ServerLogs)\r\n //***\r\n\r\n // HACK FIX:\r\n // \r\n // Normally we would import `filterLogsIOClient` FROM: './filterLogsIOClient';\r\n // \r\n // However, because `filterLogsIOClient` utilizes a module-scoped socket\r\n // variable (initialized from the client), we must pull in the SAME JS\r\n // module (from the client perspective).  \r\n // \r\n // - This is why you see the unsightly '../../../../../snip-snip'\r\n //   reference.\r\n // \r\n // - Without this fix, the JS internals would initialize a separate\r\n //   \"unused\" module, and our \"used\" module would NOT initialize it's\r\n //   module-scoped socket variable (i.e. it would be undefined).\r\n // \r\n // - I suspect this is related to how our simplistic mono-repo is\r\n //   maintained (using symbolic links).\r\n import {setServerLogFilters,\r\n         getServerLogFilters} from '../../../../../client/src/core/util/logger/filterLogsIOClient'; // see \"HACK FIX\" (above)\r\n\r\n import logger from './logger';\r\n const  log = logger('vit:core:logger:FilterServerLogs');\r\n\r\n let serverLoggingFilter = ''; // because the initialization of this is async, we use delayedServerInit (AI: technically we should prob keep in sync with other processes that set this (but would require a notification from the server)\r\n async function delayedServerInit() {\r\n   serverLoggingFilter = await getServerLogFilters();\r\n }\r\n delayedServerInit();\r\n function handleServerLoggingFilter() {\r\n   setServerLogFilters(serverLoggingFilter);\r\n   log.f(`server logging filter now set to: '${serverLoggingFilter}'`);\r\n }\r\n</script>\r\n\r\n<form onsubmit=\"return false;\">\r\n  <label>\r\n    Server Logging Filter:\r\n    <input type=\"text\" bind:value={serverLoggingFilter}/>\r\n    &nbsp;&nbsp;\r\n    <button on:click={handleServerLoggingFilter}>Change</button>\r\n  </label>\r\n</form>\r\n","<script>\r\n\r\n //***\r\n //*** FilterLogs.svelte ... UI Component - convenience container of ALL filter types\r\n //***\r\n\r\n import FilterMyLogs     from './FilterMyLogs.svelte';\r\n import FilterOtherLogs  from './FilterOtherLogs.svelte';\r\n import FilterServerLogs from './FilterServerLogs.svelte';\r\n\r\n // PROP: otherClientSelector - necessary items to select the \"other\" client socketId\r\n //       - gleaned from chat sessions\r\n //       - passed in as props (vs. imports) because it is NOT part of our contained logger module\r\n //       - CONTENT:\r\n //         otherClientSelector: {\r\n //           chat,                // the chat store that we select remote session from (identifying \"other\" socketId)\r\n //           ChatSessionSelector, // the ChatSessionSelector component\r\n //           stateRetention,      // retains component state when destroyed/re-instantiated\r\n //         }\r\n export let otherClientSelector;\r\n</script>\r\n\r\n<FilterMyLogs/>\r\n<FilterOtherLogs {otherClientSelector}/>\r\n<FilterServerLogs/>\r\n","<script context=\"module\">\r\n import chat                   from './chat/chat';\r\n import ChatSessionSelector    from './chat/ChatSessionSelector.svelte';\r\n import {createStateRetention} from './chat/ChatSessionSelector.svelte';\r\n import FilterLogs             from './core/util/logger/FilterLogs.svelte';\r\n\r\n // stateRetention: retains component state when destroyed/re-instantiated\r\n const stateRetention = createStateRetention();\r\n</script>\r\n\r\n<div>\r\n  <center>\r\n    <h4>Admin</h4>\r\n  </center>\r\n\r\n  <FilterLogs otherClientSelector={{chat, ChatSessionSelector, stateRetention}}/>\r\n</div>\r\n","<script>\r\n import user     from './user';\r\n import logger   from '../core/util/logger';\r\n const  log = logger('vit:client:SignIn');\r\n\r\n // NOTE: We do not do anything fancy to preserve input values when we move off & back of the SignIn tab.\r\n //       - BECAUSE of the sensitive nature of sign-in data\r\n //         ... if we retained sign-in email in module scope, \r\n //             we would have to explicitly clear them on sign-out\r\n //             AND this screen is NOT even \"in the mix\" of a sign-out operation\r\n //       - ALSO, this screen is ONLY available when user is signed-out\r\n //       - use KISS\r\n\r\n // our input state (bound to input controls)\r\n // following convenience injects a default '@gmail.com' (temporary code for developer speed)\r\n $:  email = email ? (email.includes('@') ? email : `${email}@gmail.com`) : '';\r\n $:  buttonLabel = email ? 'Sign In' : 'Register';\r\n let signInMsg = '';\r\n\r\n // following convenience is a bit hoaky (and temporary for developer speed) \r\n // but it resets the email cursor postion when we inject the default '@gmail.com'\r\n let emailDOM;\r\n $: {\r\n   if (email && email.indexOf('@') === 1) {\r\n     setTimeout( () => {\r\n       // emailDOM.focus();\r\n       emailDOM.setSelectionRange(1, 1);\r\n     }, 1);\r\n   }\r\n }\r\n\r\n // the verificationCode for our SignIn process\r\n let verificationCode;\r\n\r\n async function handleSignIn() {\r\n   try {\r\n     await user.signIn(email);\r\n     signInMsg = ''; // ... clear any prior message\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       signInMsg = e.userMsg;\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       signInMsg = 'Unexpected error in SignIn process ... see logs for detail';\r\n       log.v(`*** ERROR *** Unexpected error in SignIn process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n\r\n async function handleSignInVerification() {\r\n   try {\r\n     await user.signInVerification(verificationCode);\r\n     signInMsg = ''; // ... clear any prior message\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       signInMsg = e.userMsg;\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       signInMsg = 'Unexpected error in SignIn process ... see logs for detail';\r\n       log.v(`*** ERROR *** Unexpected error in SignIn process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n\r\n async function handleSignInVerificationResendCode() {\r\n   try {\r\n     await user.signInVerificationResendCode();\r\n     signInMsg = ''; // ... clear any prior message\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       signInMsg = e.userMsg;\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       signInMsg = 'Unexpected error in signInVerificationResendCode process ... see logs for detail';\r\n       log.v(`*** ERROR *** Unexpected error in signInVerificationResendCode process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n\r\n function handleSignInVerificationCancel() {\r\n   try {\r\n     user.signInVerificationCancel();\r\n     signInMsg = ''; // ... clear any prior message\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       signInMsg = e.userMsg;\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       signInMsg = 'Unexpected error in signInVerificationCancel process ... see logs for detail';\r\n       log.v(`*** ERROR *** Unexpected error in signInVerificationCancel process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n\r\n</script>\r\n\r\n\r\n<div>\r\n  <h4>Welcome to visualize-it!</h4>\r\n\r\n  <div class=\"indent\">\r\n    {#if $user.inSignInVerificationPhase}\r\n\r\n    <i>A sign-in verification code has been sent to your email: {$user.inSignInVerificationPhase}</i><br/><br/>\r\n \r\n    <form onsubmit=\"return false;\">\r\n      <label>\r\n        <b>Code:</b>\r\n        <input type=\"text\" bind:value={verificationCode}/>\r\n        <i>\r\n          enter your <b>Verification Code</b> here\r\n        </i>\r\n      </label>\r\n\r\n      <div class=\"error\">{signInMsg}</div>\r\n      <button on:click={handleSignInVerification} value=\"submit\">Verify</button>\r\n      <button on:click={handleSignInVerificationResendCode}>Resend Code</button>\r\n      <button on:click={handleSignInVerificationCancel}>Cancel</button>\r\n    </form>\r\n\r\n    {:else}\r\n\r\n    <i>You are <b>not required</b> to sign-in in order to use <b>visualize-it</b>.</i><br/><br/>\r\n\r\n    <i>However, signing in with a <b>verified email</b>, gives you access to <b>publish packages</b>!</i><br/><br/>\r\n\r\n    <form onsubmit=\"return false;\">\r\n      <label>\r\n        <b>Email:</b>\r\n        <!-- svelte-ignore a11y-autofocus -->\r\n        <input type=\"text\" autocomplete=\"email\" bind:value={email} bind:this={emailDOM} autofocus/>\r\n      </label>\r\n\r\n      <div class=\"error\">{signInMsg}</div>\r\n      <button on:click={handleSignIn} value=\"submit\">{buttonLabel}</button>\r\n    </form>\r\n\r\n    {/if}  \r\n\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n .indent {\r\n   margin-left: 20px;\r\n }\r\n .error {\r\n   color: red;\r\n }\r\n</style>\r\n","<script>\r\n import user     from './user';\r\n import logger   from '../core/util/logger';\r\n const  log = logger('vit:client:RegisterGuest');\r\n\r\n // our input state (bound to input controls)\r\n let guestName = $user.guestName;\r\n let formMsg   = '';\r\n\r\n async function handleRegisterGuest() {\r\n   try {\r\n     await user.registerGuest(guestName);\r\n     formMsg = ''; // ... clear any prior message\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       formMsg = e.userMsg;\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       formMsg = 'Unexpected error in Guest Registration process ... see logs for detail';\r\n       log.v(`*** ERROR *** Unexpected error in Guest Registration process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n</script>\r\n\r\n<div>\r\n  <h4>Welcome to visualize-it!</h4>\r\n\r\n  <div class=\"indent\">\r\n    Some <b>systems</b> require a <b>Guest Name</b> <i>(when not signed-in)</i>, that identifies you to other participants.<br/><br/>\r\n\r\n    <form onsubmit=\"return false;\">\r\n      <label>\r\n        <b>Guest Name:</b>\r\n        <input type=\"text\" autocomplete=\"nickname\" bind:value={guestName}/>\r\n        <i>blank out to clear prior Guest Name</i>\r\n      </label>\r\n\r\n      <div class=\"error\">{formMsg}</div>\r\n      <button on:click={handleRegisterGuest} value=\"submit\">Register</button>\r\n    </form>\r\n\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n .indent {\r\n   margin-left: 20px;\r\n }\r\n .error {\r\n   color: red;\r\n }\r\n</style>\r\n","<script>\r\n // NOTE: simple dropdown taken from:  https://www.w3schools.com/howto/howto_js_dropdown.asp\r\n\r\n import user   from './user';\r\n import alert  from '../util/alert';\r\n\r\n export let handleSignIn;        // PROP: the function to invoke for sign-in\r\n export let handleSignOut;       // PROP: the function to invoke for sign-out\r\n export let handleRegisterGuest; // PROP: the function to invoke for register-guest\r\n\r\n let userDropdown;\r\n let showUserDropdown = false;\r\n\r\n function toggleUserMenu() {\r\n   showUserDropdown = !showUserDropdown;\r\n }\r\n\r\n // close dropdown menu on any click outside of it\r\n window.onclick = function(event) {\r\n   if (!event.target.matches('.dropbtn')) {\r\n     showUserDropdown = false;\r\n   }\r\n }\r\n</script>\r\n\r\n<div class=\"dropdown\">\r\n  <button on:click={toggleUserMenu} class=\"dropbtn\">User: {$user.getUserName()}</button>\r\n  <div bind:this={userDropdown} class=\"dropdown-content\" class:show={showUserDropdown}>\r\n    <!-- Profile  -->\r\n    {#if $user.isSignedIn()}\r\n      <a href={null} on:click|preventDefault={() => alert.display('User Profile will be implemented LATER')}>Profile</a>\r\n    {/if}\r\n    <!-- Register Guest  -->\r\n    {#if !$user.isSignedIn()}\r\n      <a href={null} on:click|preventDefault={handleRegisterGuest}>Register Guest</a>\r\n    {/if}\r\n\r\n    <!-- Sign In -->\r\n    {#if !$user.isSignedIn() && !$user.inSignInVerificationPhase}\r\n      <a href={null} on:click|preventDefault={handleSignIn}>Sign In</a>\r\n    {/if}\r\n\r\n    <!-- Verify Sign In ... handled by Sign In, but a different \"title\" -->\r\n    {#if $user.inSignInVerificationPhase}\r\n      <a href={null} on:click|preventDefault={handleSignIn}>Verify Sign In</a>\r\n    {/if}\r\n\r\n    <!-- Sign Out -->\r\n    {#if $user.isSignedIn()}\r\n      <a href={null} on:click|preventDefault={handleSignOut}>Sign Out</a>\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n\r\n<style>\r\n /* Dropdown Button */\r\n .dropbtn {\r\n   background-color: #3498DB;\r\n   color:     white;\r\n   padding:   8px;\r\n   border:    none;\r\n   cursor:    pointer;\r\n }\r\n\r\n /* Dropdown button on hover & focus */\r\n .dropbtn:hover, .dropbtn:focus {\r\n   background-color: #2980B9;\r\n }\r\n\r\n /* The container <div> - needed to position the dropdown content */\r\n .dropdown {\r\n   position: relative;\r\n   display:  inline-block;\r\n }\r\n\r\n /* Dropdown Content (Hidden by Default) */\r\n .dropdown-content {\r\n   display:          none;\r\n   position:         absolute;\r\n   background-color: #f1f1f1;\r\n   min-width:        160px;\r\n   box-shadow:       0px 8px 16px 0px rgba(0,0,0,0.2);\r\n   z-index:          1;\r\n }\r\n\r\n /* Links inside the dropdown */\r\n .dropdown-content a {\r\n   color:           black;\r\n   padding:         12px 16px;\r\n   text-decoration: none;\r\n   display:         block;\r\n }\r\n\r\n /* Change color of dropdown links on hover */\r\n .dropdown-content a:hover {\r\n background-color: #ddd;\r\n }\r\n\r\n /* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */\r\n .show {\r\n   display: block;\r\n }\r\n</style>\r\n","import logger from '../core/util/logger';\r\nconst  log = logger('vit:client:util:longpress');\r\n\r\n// A svelte action that captures and emits a custom \"longpress\" event\r\n// ... see: https://stackoverflow.com/questions/56844807/svelte-long-press\r\n// USAGE:\r\n//   <p use:longpress={2000} on:longpress={e => alert('long press')}>Long Press Me</p>\r\n\r\nexport default function longpress(node, threshold=500) {\r\n\r\n  log('USING longpress action');\r\n\r\n  let timeout = null;\r\n\r\n  function handleMouseDown() {\r\n    log('in handleMouseDown()');\r\n\t\ttimeout = setTimeout(handleLongPress, threshold);\r\n\t}\r\n\r\n  function handleMouseUp() {\r\n    if (timeout !== null) {\r\n      log('canceling longpress processing');\r\n\t\t  clearTimeout(timeout);\r\n      timeout = null;\r\n    }\r\n  }\r\n\r\n  function handleLongPress() {\r\n    log('timeout has occurred ... emitting \"longpress\" CustomEvent');\r\n\t\tnode.dispatchEvent(new CustomEvent('longpress'));\r\n    timeout = null;\r\n  }\r\n\t\r\n  // activate \"longpress\" processing via \"mousedown/mouseup\" events\r\n  log('activating \"mousedown/mouseup\" event to implement \"longpress\"');\r\n\tnode.addEventListener('mousedown', handleMouseDown);\r\n\tnode.addEventListener('mouseup',   handleMouseUp);\r\n\t\r\n\treturn {\r\n\t\tdestroy() {\r\n      log('cleaning up longpress action');\r\n\t\t\tnode.removeEventListener('mousedown', handleMouseDown);\r\n\t\t\tnode.removeEventListener('mouseup',   handleMouseUp);\r\n\t\t}\r\n\t};\r\n}\r\n","<script>\r\n //***\r\n //*** Router.svelte ... a combination Header & Router\r\n //***\r\n\r\n import IDE              from '../../IDE.svelte';\r\n import System           from '../../sys/System.svelte';\r\n import Chat             from '../../chat/Chat.svelte';\r\n import Admin            from '../../Admin.svelte';\r\n import SignIn           from '../../auth/SignIn.svelte';\r\n import RegisterGuest    from '../../auth/RegisterGuest.svelte';\r\n import UserProfileIcon  from '../../auth/UserProfileIcon.svelte';\r\n import user             from '../../auth/user';\r\n import chat             from '../../chat/chat';\r\n import alert            from '../../util/alert';\r\n import longpress        from '../../util/longpress';\r\n import logger           from '../../core/util/logger';\r\n const  log = logger('vit:client:main:IDE:Router');\r\n\r\n\r\n // TODO: add some logging!\r\n\r\n // the active component being displayed\r\n let dispComp = IDE; // default to IDE\r\n $: { // ... some reflexive routing logic\r\n\r\n   // reflexively move OFF the SignIn screen, once user has successfully signed-in\r\n   if (dispComp === SignIn && $user.isSignedIn()) {\r\n     dispComp = IDE;\r\n   }\r\n\r\n   // reflexively move OFF the Admin screen, if NOT an administrive user\r\n   else if (!$user.enablement.admin && dispComp === Admin) {\r\n     dispComp = IDE;\r\n   }\r\n   // reflexively move OFF the Chat screen, if user deactivates chat\r\n   else if (!$chat.isActive && dispComp === Chat) {\r\n     dispComp = IDE;\r\n   }\r\n }\r\n\r\n function handleSignIn() {\r\n   dispComp = SignIn; // display sign-in screen\r\n }\r\n\r\n function handleRegisterGuest() {\r\n   dispComp = RegisterGuest; // display register-guest screen\r\n }\r\n\r\n async function handleSignOut() {\r\n   try {\r\n     await user.signOut();   // sign our user out\r\n     dispComp = SignIn;      // display sign-in screen\r\n   }\r\n   catch(e) {\r\n     // AI: This entire logic is accomplished by discloseError.js BUT needs cleaned up a bit (with it's coupling)\r\n     //     ... c:/dev/visualize-it/src/util/discloseError.js\r\n     if (e.isExpected()) {  // notify user of expected errors\r\n       alert.display(e.userMsg);\r\n     }\r\n     else { // notify user of unexpected errors, and log detail\r\n       alert.display('Unexpected error in SignOut process ... see logs for detail');\r\n       log.v(`*** ERROR *** Unexpected error in SignOut process: ${e}`, e);\r\n     }\r\n   }\r\n }\r\n\r\n function handleEasterEgg() {\r\n   log('handleEasterEgg ... longpress event occurred!');\r\n   chat.solicitPrivateMsg();\r\n }\r\n\r\n</script>\r\n\r\n<div>\r\n  <!-- our crude header -->\r\n  <b><i use:longpress={2000} on:longpress={handleEasterEgg}>visualize-it</i></b>\r\n  <i>(ver 0.4)</i>\r\n  &nbsp;&nbsp;&nbsp;\r\n  &nbsp;&nbsp;&nbsp;\r\n  &nbsp;&nbsp;&nbsp;\r\n\r\n  <!-- IDE link  -->\r\n  &nbsp;&nbsp;&nbsp;\r\n  {#if dispComp === IDE}\r\n    <b class=\"active\">IDE</b>\r\n  {:else}\r\n    <b class=\"link\" on:click={() => dispComp = IDE}>IDE</b>\r\n  {/if}  \r\n\r\n  <!-- System link  -->\r\n  &nbsp;&nbsp;&nbsp;\r\n  {#if dispComp === System}\r\n    <b class=\"active\">System</b>\r\n  {:else}\r\n    <b class=\"link\" on:click={() => dispComp = System}>System</b>\r\n  {/if}  \r\n\r\n  <!-- Chat link -->\r\n  &nbsp;&nbsp;&nbsp;\r\n  {#if dispComp === Chat}\r\n  <b class=\"active\">Chat</b>\r\n  {:else if $chat.isActive}\r\n  <b class=\"link\" on:click={() => dispComp = Chat}>Chat</b>\r\n  {:else}\r\n  <!-- Chat ... don't even show it  -->\r\n  {/if}  \r\n\r\n  <!-- Admin link  -->\r\n  &nbsp;&nbsp;&nbsp;\r\n  {#if dispComp === Admin}\r\n    <b class=\"active\">Admin</b>\r\n  {:else if $user.enablement.admin}\r\n    <b class=\"link\" on:click={() => dispComp = Admin}>Admin</b>\r\n  {/if}  \r\n\r\n  <!-- UserProfile icon -->\r\n  &nbsp;&nbsp;&nbsp;\r\n  &nbsp;&nbsp;&nbsp;\r\n  &nbsp;&nbsp;&nbsp;\r\n  &nbsp;&nbsp;&nbsp;\r\n  <UserProfileIcon {handleSignIn} {handleSignOut} {handleRegisterGuest}/>\r\n\r\n  <!-- alert message -->\r\n  <div>\r\n    <i class=\"alert\">{$alert}&nbsp;</i>\r\n  </div>\r\n    \r\n</div>\r\n\r\n\r\n<!-- our \"routed\" component -->\r\n<svelte:component this={dispComp}/>\r\n\r\n<style>\r\n .link {\r\n   cursor:          pointer;\r\n   text-decoration: underline;\r\n }\r\n .active {\r\n   color: white;\r\n   background-color: black;\r\n   padding: 2px 4px;\r\n }\r\n .alert {\r\n   color: red;\r\n }\r\n</style>\r\n","<script>\r\n import Router from './Router.svelte';\r\n</script>\r\n\r\n<main>\r\n  <Router/>\r\n</main>\r\n\r\n<style>\r\n main {\r\n   padding: 1em;\r\n   margin:  0 auto;\r\n }\r\n</style>\r\n","import '../../core/util/ErrorExtensionPolyfill'; // value-added Error extensions, providing ability to handle ALL errors more generically\nimport setupSocketConnection from '../../sockets';\nimport App                   from './App.svelte';\n\n// configure client app's websocket initiation\nsetupSocketConnection('ide');\n\n// create our App GUI\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;\n"],"names":["Error","prototype","defineUserMsg","userMsg","this","expected","isExpected","isUnexpected","defineAttemptingToMsg","attemptingToMsg","formatUserMsg","prior_toString","toString","call","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","obj","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","TransportError","constructor","reason","description","context","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","alphabet","map","prev","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","async","undefined","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","hostname","indexOf","path","polling","location","isSSL","protocol","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","sid","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","Socket$1","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Decoder","reviver","add","reconstructor","decodeString","BINARY_EVENT","BINARY_ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","EVENT","ACK","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","noop","run","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","subscribe","store","unsub","unsubscribe","get_store_value","_","component_subscribe","component","$$","on_destroy","null_to_empty","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","createElement","text","createTextNode","space","listen","handler","prevent_default","preventDefault","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","select_option","select","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","onDestroy","get_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","Set","flushidx","saved_component","update","has","clear","fragment","before_update","dirty","ctx","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","d","destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","props","bound","create_component","mount_component","customElement","on_mount","new_on_destroy","filter","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","skip_bound","root","ready","ret","rest","hydrate","nodes","from","childNodes","children","intro","SvelteComponent","$destroy","$on","$set","$$props","$$set","subscriber_queue","stop","subscribers","new_value","run_queue","subscriber","invalidate","alert","display","createAlert","DEVICE_ID","getDeviceId","deviceId","localStorage","getItem","crypto","randomUUID","setItem","inBrowser","process","versions","s","h","w","y","val","match","parseFloat","isFinite","long","msAbs","plural","fmtLong","round","fmtShort","isPlural","common","env","createDebug","namespace","prevTime","namespacesCache","enabledCache","enableOverride","debug","enabled","curr","diff","coerce","format","formatter","formatters","formatArgs","log","useColors","color","selectColor","extend","defineProperty","enumerable","configurable","namespaces","delimiter","newDebug","toNamespace","regexp","default","stack","disable","skips","enable","save","RegExp","humanize","require$$0","console","warn","hash","colors","load","exports","module","lastC","storage","removeItem","DEBUG","__nwjs","userAgent","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","localstorage","warned","_cachedLogs","logger","rtnLog","colonIndx","verboseNameSpace","verbose","force","f","_currentLogFilters","socketAckFn","reject","attemptingTo","errMsg","commonPayloadHandler","log$7","isLogFilterEnabled","nameSpace","setLogFilters","filterStr","clearLogFilters","currentLogFilters","initialStoreValue","email","enablement","admin","guestName","inSignInVerificationPhase","isSignedIn","isGuest","isRegistered","getUserName","user","registerGuest","userState","token","state","signIn","signInVerification","verificationCode","signInVerificationResendCode","signInVerificationCancel","signOut","userAuthChanged","preAuthComplete","createUser","beep","AudioCtx","AudioContext","webkitAudioContext","audioCtx","frequency","interval","times","emitSound","currentTime","osc","createOscillator","gain","createGain","destination","setValueAtTime","exponentialRampToValueAtTime","onended","play","createBeep","initialChat","session","sessions","isActive","adorn","sessionMap","values","sort","otherUserName","localeCompare","chat","solicitPrivateMsg","otherSocketId","userName","msgs","when","who","sendMsg","receiveMsg","removedSession","createChat","createSystemStore","sysId","accessCode","model","isHost","isRunning","participants","system","runChanged","running","participantsChanged","stateChanged","deltaModelChanges","newModel","structuredClone","entries","compKey","propKey","localStateChange","cacheLocalStateChange","extractLocalStateChange","foo","clientSystems","launchSystem","launchSystemIO","joinSystem","getSystem","joinSystemIO","runSystem","runSystemIO","pauseSystem","pauseSystemIO","log$3","allClientSysIds","registerLogFilterSocketHandlers","isDev","show_if","div","center","h4","br","t2_value","t5_value","t11_value","t16_value","create_if_block_2","each_value","b0","br0","b1","br1","b2","br2","b3","ul","t2","t5","t11","t16","iterations","button","t_value","pre","t","pres","checked","create_if_block_1","t0","t0_value","create_if_block","$system","$$invalidate","compName","createStateRetention","sysIdRetained","stateRetentionDEFAULT","stateRetention","div1","form","label0","input0","label1","input1","div0","button0","button1","newSystemIntroduced","resetSubCompDisp","label2","textarea","modelStr","modelJSON","systemSelectorStateRetention","subComp","comp","SystemLaunch","SystemJoin","option_value_value","sessionIdRetained","sessionId","$chat","span","span_class_value","t3_value","t6_value","div2","center0","span0","span1","label","center1","current","t3","t6","myMsgInitial","myMsg","clientLoggingFilter","otherClientSelector","ChatSessionSelector","otherLoggingFilter","delayedOtherInit","otherLogFilters","startsWith","otherUserId","serverLoggingFilter","serverLogFilters","delayedServerInit","i0","i1","br3","b4","t1_value","button2","t1","emailDOM","signInMsg","includes","buttonLabel","setSelectionRange","$$value","$user","formMsg","show_if_3","show_if_2","show_if_1","if_block3","userDropdown","handleSignIn","handleSignOut","handleRegisterGuest","showUserDropdown","onclick","matches","longpress","handleMouseDown","handleLongPress","handleMouseUp","dispatchEvent","CustomEvent","IDE","create_if_block_5","System","create_if_block_4","Chat","create_if_block_3","Admin","action_result","i2","dispComp","SignIn","RegisterGuest","main","clientType","serverURL","toSocketId","fromSocketId","registerChatSocketHandlers","userErr","activeUser","stateChanges","registerSystemStoreSocketHandlers","registerSystemSocketHandlers","setupSocketConnection","body"],"mappings":"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"}